var d={},D=(f,b,v)=>(d.__chunk_1771=(S,k,g)=>{"use strict";g.d(k,{zX:()=>l,zU:()=>m,N7:()=>h,x8:()=>y});let p=JSON.parse(`{"posts":[{"slug":"configure-nat-azure-vm-hyperv-host","title":"Configure NAT for nested guests on a Hyper-V host running on Azure VM","date":"2025-07-25","author":"Johan Ljunggren","excerpt":"Complete guide to setting up NAT networking for nested Hyper-V VM guests running inside Azure VM Hyper-V host. Learn how to create internal switches, configure NAT, and enable internet access for your nested virtual machines with PowerShell commands and troubleshooting tips.","image":"/professional-showing-azure-nat.png","imageAlt":"Photograph of a modern office: a bearded engineer in a blue shirt points at a wall\u2011mounted screen diagram titled \u201CAzure\u202FVM\u202FHost\u201D that shows two nested Hyper\u2011V VMs connected through a NAT switch to an external NAT icon. On the desk below, a laptop displays the Azure portal next to a coiled Ethernet cable, coffee mug, and small plant.","tags":["Azure","Hyper-V","NAT","Networking","PowerShell","Virtualization"],"readTime":"12 min read","category":"Infrastructure","content":"<blockquote>\\n<p><strong>Goal:</strong> Give your Hyper\u2011V guest(s) running <strong>inside</strong> an Azure VM Hyper-V host outbound Internet (and optional inbound) without touching Azure networking beyond the outer VM\u2019s NIC.</p>\\n</blockquote>\\n<h2>Architecture</h2>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">flowchart</span> TD\\n</span><span class=\\"code-line\\">    <span class=\\"token comment\\">%% \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Host layer \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">subgraph</span> <span class=\\"token string\\">\\"Azure\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">direction</span> TB\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        VMHost<span class=\\"token text string\\">[Azure VM]</span><span class=\\"token operator\\">:::</span>azurevm\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">subgraph</span> HyperVHost<span class=\\"token text string\\">[\\"Hyper-V Host\\"]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">direction</span> TB\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\">%% \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Guest layer \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">subgraph</span> <span class=\\"token string\\">\\"Hyper\u2011V\xA0Guests\\"</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token keyword\\">direction</span> TB\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">                FW<span class=\\"token text string\\">[\\"Guest Firewall VM&lt;br/&gt;RED:\xA0192.168.100.1 (Static IP)&lt;br/&gt;GREEN:\xA0192.168.10.220 (Static IP)\\"]</span><span class=\\"token operator\\">:::</span>fw\\n</span><span class=\\"code-line\\">                VM1<span class=\\"token text string\\">[Guest\xA0VM\xA01&lt;br/&gt;IP: 192.168.10.15&lt;br/&gt;GW: 192.168.10.220&lt;br/&gt;DNS: 1.1.1.1]</span>\\n</span><span class=\\"code-line\\">                VM2<span class=\\"token text string\\">[Guest\xA0VM\xA02&lt;br/&gt;IP: 192.168.10.16&lt;br/&gt;GW: 192.168.10.220&lt;br/&gt;DNS: 1.1.1.1]</span>\\n</span><span class=\\"code-line\\">                VM3<span class=\\"token text string\\">[Guest\xA0VM\xA03&lt;br/&gt;IP: 192.168.10.17&lt;br/&gt;GW: 192.168.10.220&lt;br/&gt;DNS: 1.1.1.1]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            vSwitchNAT<span class=\\"token text string\\">(Virtual Switch&lt;br/&gt;Name: VmNAT&lt;br/&gt;Type: External)</span><span class=\\"token operator\\">:::</span>vswitchRed\\n</span><span class=\\"code-line\\">            vSwitchLAN<span class=\\"token text string\\">(Virtual Switch&lt;br/&gt;Name: LAN&lt;br/&gt;Type: Internal)</span><span class=\\"token operator\\">:::</span>vswitchGreen\\n</span><span class=\\"code-line\\">            NATNIC<span class=\\"token text string\\">[NAT\xA0Gateway&lt;br/&gt;192.168.100.1/24]</span><span class=\\"token operator\\">:::</span>nat\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            WANNIC<span class=\\"token text string\\">[WAN NIC&lt;br/&gt;Public IP]</span><span class=\\"token operator\\">:::</span>nat\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Internet<span class=\\"token text string\\">([Internet / Azure\xA0VNet])</span><span class=\\"token operator\\">:::</span>cloud\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    VMHost <span class=\\"token arrow operator\\">--o</span> HyperVHost\\n</span><span class=\\"code-line\\">    VMHost <span class=\\"token arrow operator\\">--o</span> WANNIC\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    vSwitchNAT <span class=\\"token arrow operator\\">&lt;--</span> <span class=\\"token string\\">\\"Routes traffic\\"</span> <span class=\\"token arrow operator\\">--&gt;</span> NATNIC\\n</span><span class=\\"code-line\\">    NATNIC <span class=\\"token arrow operator\\">&lt;--</span> <span class=\\"token string\\">\\"Provides Internet\\"</span> <span class=\\"token arrow operator\\">--&gt;</span> WANNIC\\n</span><span class=\\"code-line\\">    WANNIC <span class=\\"token arrow operator\\">---</span> Internet\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token comment\\">%% Connections</span>\\n</span><span class=\\"code-line\\">    FW <span class=\\"token arrow operator\\">---</span> vSwitchNAT\\n</span><span class=\\"code-line\\">    FW <span class=\\"token arrow operator\\">---</span> vSwitchLAN\\n</span><span class=\\"code-line\\">    VM1 <span class=\\"token arrow operator\\">---</span> vSwitchLAN\\n</span><span class=\\"code-line\\">    VM2 <span class=\\"token arrow operator\\">---</span> vSwitchLAN\\n</span><span class=\\"code-line\\">    VM3 <span class=\\"token arrow operator\\">---</span> vSwitchLAN\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token comment\\">%% ---------------- Styling ----------------</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> azurevm   <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#006FCF<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">color</span><span class=\\"token operator\\">:</span>#fff<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke-width</span><span class=\\"token operator\\">:</span>2px</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> vswitchRed <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#e63946<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">color</span><span class=\\"token operator\\">:</span>#fff<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke</span><span class=\\"token operator\\">:</span>#003<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke-width</span><span class=\\"token operator\\">:</span>1px</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> vswitchGreen <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#39e639<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke</span><span class=\\"token operator\\">:</span>#003<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke-width</span><span class=\\"token operator\\">:</span>1px</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> nat    <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#8d99ae<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">color</span><span class=\\"token operator\\">:</span>#fff<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke</span><span class=\\"token operator\\">:</span>#003<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke-width</span><span class=\\"token operator\\">:</span>1px</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> fw     <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#ff6666<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">color</span><span class=\\"token operator\\">:</span>#003<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke</span><span class=\\"token operator\\">:</span>#003<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke-width</span><span class=\\"token operator\\">:</span>1px</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> cloud  <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#dfe4ea<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke</span><span class=\\"token operator\\">:</span>#003<span class=\\"token punctuation\\">,</span><span class=\\"token property\\">stroke-width</span><span class=\\"token operator\\">:</span>1px</span><span class=\\"token punctuation\\">;</span>\\n</span></code></pre></div>\\n<h2>Prerequisites</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Item</th>\\n<th>Notes</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Azure VM size</td>\\n<td>Needs to support nested hypervisor \u2014 e.g. Standard E8-4ads v5 with 64 GB memory</td>\\n</tr>\\n<tr>\\n<td>OS in the host</td>\\n<td>Windows\u202F11, Windows\u202FServer\u202F2019\u202For later with Hyper\u2011V.</td>\\n</tr>\\n<tr>\\n<td>Admin rights</td>\\n<td>All commands run in an <strong>elevated</strong> PowerShell prompt on the host.</td>\\n</tr>\\n<tr>\\n<td>\u26A0\uFE0F Security</td>\\n<td>NAT hides guests from Azure\u2019s NSG layer. Still apply guest firewalls/updates!</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2>1 . Create an External switch</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Bind the new external switch to the host's physical NIC</span>\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Replace '&lt;Host-NIC-Name&gt;' with the name shown in Get-NetAdapter (e.g., 'Ethernet')</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">New-VMSwitch</span> <span class=\\"token operator\\">-</span>Name VmNAT <span class=\\"token operator\\">-</span>NetAdapterName <span class=\\"token string\\">'&lt;Host-NIC-Name&gt;'</span> <span class=\\"token operator\\">-</span>AllowManagementOS <span class=\\"token boolean\\">$true</span> <span class=\\"token operator\\">-</span>SwitchType External\\n</span></code></pre></div>\\n<h2>2\u202F. Give the host\u2011side vNIC an IP</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">New-NetIPAddress</span> <span class=\\"token operator\\">-</span>InterfaceAlias <span class=\\"token string\\">'vEthernet (VmNAT)'</span> \`\\n</span><span class=\\"code-line\\">                 <span class=\\"token operator\\">-</span>IPAddress 192<span class=\\"token punctuation\\">.</span>168<span class=\\"token punctuation\\">.</span>100<span class=\\"token punctuation\\">.</span>1 <span class=\\"token operator\\">-</span>PrefixLength 24\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-NetIPAddress</span> <span class=\\"token operator\\">-</span>InterfaceAlias <span class=\\"token string\\">'vEthernet (VmNAT)'</span>\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>Choose any RFC1918 /24 that does not clash with your virtual or on-premises networks.</p>\\n</div>\\n</div>\\n<h2>3. Build the NAT</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">New-NetNat</span> <span class=\\"token operator\\">-</span>Name VmNAT <span class=\\"token operator\\">-</span>InternalIPInterfaceAddressPrefix 192<span class=\\"token punctuation\\">.</span>168<span class=\\"token punctuation\\">.</span>100<span class=\\"token punctuation\\">.</span>0/24\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Verify it exists</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-NetNat</span> <span class=\\"token operator\\">-</span>Name VmNAT\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>\u2022 <strong>One NAT per prefix</strong> only. If you re-run, delete the old first:\\n<code>Remove-NetNat -Name VmNAT</code></p>\\n</div>\\n</div>\\n<h2>4\u202F. Attach the nested VM to the switch</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$fwName</span> = <span class=\\"token string\\">'&lt;name of firewall vm&gt;'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-VMNetworkAdapter</span> <span class=\\"token operator\\">-</span>VMName <span class=\\"token variable\\">$fwName</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-VMNetworkAdapter</span> <span class=\\"token operator\\">-</span>VMName <span class=\\"token variable\\">$fwName</span> <span class=\\"token punctuation\\">|</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token function\\">Where-Object</span> MacAddress <span class=\\"token operator\\">-eq</span> <span class=\\"token string\\">'set to MAC address of firewall RED NIC'</span> <span class=\\"token punctuation\\">|</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">Connect-VMNetworkAdapter</span> <span class=\\"token operator\\">-</span>SwitchName VmNat\\n</span></code></pre></div>\\n<p>Repeat for each guest that should use NAT.</p>\\n<h2>5\u202F. Configure the nested VM\u2019s NIC</h2>\\n<p>Hand out DHCP addresses, or assign a static address.</p>\\n<h3>Option 1 - Static IP address</h3>\\n<p>Inside the firewall guest OS, set the RED NIC to use a static IP. The gateway will be the VmNAT's IP address:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Setting</th>\\n<th>Value (example)</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><strong>IP</strong></td>\\n<td>192.168.100.1</td>\\n</tr>\\n<tr>\\n<td><strong>Mask</strong></td>\\n<td>255.255.255.0</td>\\n</tr>\\n<tr>\\n<td><strong>Gateway</strong></td>\\n<td>192.168.100.1</td>\\n</tr>\\n<tr>\\n<td><strong>DNS</strong></td>\\n<td>1.1.1.1 (or set to another guest's IP, if that guest VM forward DNS requests.)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3>Option 2 - DHCP Server</h3>\\n<p>Install the <strong>DHCP Server</strong> role on the Hyper-V host, add a scope for <strong>192.168.100.0/24</strong> and the guests will lease automatically.</p>\\n<h2>6\u202F. (Optional) Port\u2011forward inbound traffic</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># RDP to nested VM (hostPublicIP:4022 \u2192 192.168.100.10:3389)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Add-NetNatStaticMapping</span> <span class=\\"token operator\\">-</span>NatName VmNAT <span class=\\"token operator\\">-</span>Protocol TCP \`\\n</span><span class=\\"code-line\\">    <span class=\\"token operator\\">-</span>ExternalIPAddress 0<span class=\\"token punctuation\\">.</span>0<span class=\\"token punctuation\\">.</span>0<span class=\\"token punctuation\\">.</span>0 <span class=\\"token operator\\">-</span>ExternalPort 4022 \`\\n</span><span class=\\"code-line\\">    <span class=\\"token operator\\">-</span>InternalIPAddress 192<span class=\\"token punctuation\\">.</span>168<span class=\\"token punctuation\\">.</span>100<span class=\\"token punctuation\\">.</span>10 <span class=\\"token operator\\">-</span>InternalPort 3389\\n</span></code></pre></div>\\n<p>Then <strong>allow the same port</strong> in the Azure NSG attached to the host NIC or subnet.</p>\\n<h2>7\u202F. Persistence &amp; automation</h2>\\n<ul>\\n<li>NAT objects survive reboot, but load <strong>after</strong> networking comes up.\\nIf a guest starts too quickly it may time out\u2014add a boot delay (e.g., <code>Start\u2011VM -VMName MyNestedVM -Delay 30</code>) or schedule a NAT\u2011creation script at logon.</li>\\n<li>To bake it into a golden image, place steps 1\u20113 in <code>SetupComplete.cmd</code> or a first\u2011boot script.</li>\\n</ul>\\n<h2>Troubleshooting Checklist</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Step</th>\\n<th>Command (host)</th>\\n<th>Expect</th>\\n<th>Fix if wrong</th>\\n<th></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><strong>Host IP</strong></td>\\n<td><code>Get-NetIPAddress -InterfaceAlias \\"vEthernet (VmNAT)\\"</code></td>\\n<td>192.168.100.1/24</td>\\n<td>Re\u2011create with correct address</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><strong>NAT exists</strong></td>\\n<td><code>Get-NetNat</code></td>\\n<td>Prefix <strong>192.168.100.0/24</strong></td>\\n<td><code>Remove-NetNat -Name VmNAT</code>, then re\u2011add</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><strong>Gateway ping</strong></td>\\n<td><em>(inside guest)</em> <code>ping 192.168.100.1</code></td>\\n<td>Replies</td>\\n<td>Re\u2011attach NIC to VmNAT</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><strong>Active sessions</strong></td>\\n<td>\`Get-NetNat</td>\\n<td>fl Active*\`</td>\\n<td>&gt;\u202F0 after guest traffic</td>\\n<td>Firewall/DNS blocking, or NatSvc stuck</td>\\n</tr>\\n<tr>\\n<td><strong>DNS</strong></td>\\n<td><code>nslookup microsoft.com</code> in guest</td>\\n<td>Resolves</td>\\n<td>Use public DNS or host DNS</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td><strong>NAT service</strong></td>\\n<td><code>Restart-Service ipnat</code></td>\\n<td>Restarts cleanly</td>\\n<td>Service disabled/crashed\u2014set to Auto</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<blockquote>\\n<p><strong>Still stuck?</strong></p>\\n<ol>\\n<li>Verify the host itself reaches Internet.</li>\\n<li>Check Azure NSG outbound rules (default is <em>AllowAll</em>).</li>\\n<li>Temporarily disable Windows\u202FFirewall in both host &amp; guest (then re\u2011enable!).</li>\\n</ol>\\n</blockquote>\\n<h2>Quick \u201CReset &amp; Rebuild\u201D Script</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Danger: removes any switches or NATs named VmNAT</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Remove-VMSwitch</span> <span class=\\"token operator\\">-</span>Name VmNAT <span class=\\"token operator\\">-</span>Force <span class=\\"token operator\\">-</span>Confirm:<span class=\\"token boolean\\">$false</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-NetNat</span> <span class=\\"token operator\\">-</span>Name VmNAT <span class=\\"token operator\\">-</span>ErrorAction SilentlyContinue <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">Remove-NetNat</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">New-VMSwitch</span> <span class=\\"token operator\\">-</span>SwitchName VmNAT <span class=\\"token operator\\">-</span>SwitchType Internal\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">New-NetIPAddress</span> <span class=\\"token operator\\">-</span>InterfaceAlias <span class=\\"token string\\">'vEthernet (VmNAT)'</span> \`\\n</span><span class=\\"code-line\\">                 <span class=\\"token operator\\">-</span>IPAddress 192<span class=\\"token punctuation\\">.</span>168<span class=\\"token punctuation\\">.</span>100<span class=\\"token punctuation\\">.</span>1 <span class=\\"token operator\\">-</span>PrefixLength 24\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">New-NetNat</span> <span class=\\"token operator\\">-</span>Name VmNAT <span class=\\"token operator\\">-</span>InternalIPInterfaceAddressPrefix 192<span class=\\"token punctuation\\">.</span>168<span class=\\"token punctuation\\">.</span>100<span class=\\"token punctuation\\">.</span>0/24\\n</span></code></pre></div>\\n<p>Attach guest NICs again and you\u2019re back online.</p>\\n<h2>Appendix\xA0\u2013\u202FUseful One\u2011Liners</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># List all NAT sessions</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-NetNatSession</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ft</span> <span class=\\"token operator\\">-</span>AutoSize\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Delete a single static mapping</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Remove-NetNatStaticMapping</span> <span class=\\"token operator\\">-</span>NatName VmNAT <span class=\\"token operator\\">-</span>ExternalPort 4022 <span class=\\"token operator\\">-</span>Protocol TCP\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Show VM \u2192 switch associations</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-VMNetworkAdapter</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">select</span> VMName<span class=\\"token punctuation\\">,</span> SwitchName<span class=\\"token punctuation\\">,</span> MacAddress\\n</span></code></pre></div>"},{"slug":"automating-power-bi-rs-with-dsc-v3","title":"Automating Power BI Report Server with DSC v3 \u2013 Three Invocation Patterns","date":"2025-07-20","author":"Johan Ljunggren","excerpt":"Explore three advanced patterns for automating Power BI Report Server deployments using DSC v3: imperative, declarative, and Winget-based approaches.","image":"https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=800&h=600&fit=crop&crop=center","imageAlt":"Server racks filled with networking cables and glowing indicator lights in a data center.","tags":["SQL Server","DSC","BI Report Server","PowerShell","Automation","DevOps"],"readTime":"9 min read","category":"DSC","content":"<blockquote>\\n<p><strong>Audience:</strong> infrastructure engineers comfortable with PowerShell, CI pipelines and automated SQL\xA0Server deployments.</p>\\n</blockquote>\\n<h2>Scope</h2>\\n<p>Demonstrate <strong>SqlRSSetup</strong> on DSC\xA0v3 when executed:</p>\\n<ol>\\n<li><strong>Imperatively</strong> \u2013 <em>direct</em> with DSC v3 using <code>dsc resource set</code></li>\\n<li><strong>Declaratively</strong> \u2013 in a DSC\xA0v3 <em>configuration</em> using <code>dsc config set</code></li>\\n<li><strong>WinGet</strong> \u2013 hand off your DSC v3 config to the Windows Package Manager with <code>winget configure</code></li>\\n</ol>\\n<h2>Baseline environment</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Component</th>\\n<th>Minimum version</th>\\n<th>Notes</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>Windows Server</td>\\n<td>2025</td>\\n<td>Edition 2025 only required to support WinGet deploy</td>\\n</tr>\\n<tr>\\n<td>Windows Package Manager</td>\\n<td>1.11.400</td>\\n<td>For WinGet scenario (requires Windows Server 2025)</td>\\n</tr>\\n<tr>\\n<td>PowerShell</td>\\n<td>7.5.x</td>\\n<td>Engine host</td>\\n</tr>\\n<tr>\\n<td>DSC v3</td>\\n<td>3.2.0-preview.2</td>\\n<td>Required for modern invocation patterns</td>\\n</tr>\\n<tr>\\n<td>SqlServer</td>\\n<td>22.3.0</td>\\n<td>Dependent module for SqlServerDsc</td>\\n</tr>\\n<tr>\\n<td>SqlServerDsc</td>\\n<td>17.1.x</td>\\n<td>Contains <strong>SqlRSSetup</strong> resource</td>\\n</tr>\\n<tr>\\n<td>Power BI Report Server</td>\\n<td>15.x</td>\\n<td>Setup media need to be available by local or UNC path</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3>Install Windows Server 2025</h3>\\n<p>There are many guides on installing Windows Server; version 2025 installs\\nno differently from previous versions.</p>\\n<h3>Update WinGet</h3>\\n<p>We require WinGet 1.11.400, but Windows Server 2025 comes with an older version. Use the method <a href=\\"https://github.com/microsoft/winget-cli?tab=readme-ov-file#installing-the-client\\">installing WinGet</a> of your choice.</p>\\n<p>If you download the latest release from <a href=\\"https://github.com/microsoft/winget-cli/releases\\">winget-cli releases</a>.\\nMake sure to also download the dependencies package as they might be needed to be installed to successfully install WinGet. I could not install one dependency but it turned out that wasn't needed for the WinGet install, that might not be true in your case.</p>\\n<h3>Install PowerShell</h3>\\n<p>Windows Server 2025 does not come with PowerShell (only <em>Windows PowerShell</em>) so we need to install it:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\">winget <span class=\\"token function\\">install</span> Microsoft.PowerShell\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-tip\\" data-alert-type=\\"tip\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"tip\\">Tip</div>\\n<div class=\\"github-alert-content\\">\\n<p>Suggest making Windows Terminal default in Windows Server 2025 and then make PowerShell the default in Windows Terminal.</p>\\n</div>\\n</div>\\n<h3>Install DSC v3</h3>\\n<p>For instructions on installing DSC v3, see the \\"Install DSC executable\\" section in <a href=\\"/blog/demodscclass-your-first-class-based-dsc-v3-resource#install-dsc-executable\\">DemoDscClass: Your First Class-based DSC v3 Resource</a>.</p>\\n<h3>Install SqlServer</h3>\\n<p>The module <em>SqlServer</em> is used by SqlServerDsc for SQL Server .NET types and SQL Server PowerShell commands.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Install-PSResource</span> SqlServer <span class=\\"token operator\\">-</span>Version 22<span class=\\"token punctuation\\">.</span>3<span class=\\"token punctuation\\">.</span>0 <span class=\\"token operator\\">-</span>TrustRepository\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>The dependent module should not be required for this guide, but due to a bug in DSC v3 we need to install it.\\nWithout the dependent module SqlServerDsc outputs a warning message: <code>WARNING: Failed to find a dependent module. Unable to run SQL Server commands or use SQL Server types. Please install one of the preferred SMO modules or the SQLPS module, then try to import SqlServerDsc again.</code>\\nThat warning message is normally not an issue, but will fail DSC v3. To avoid\\nDSC v3 to fail and not to see the warning message, install a supported dependent\\nPowerShell module and its version that works for your environment; <em>SQLPS</em>, <em>SqlServer</em>, or <em>dbatools</em>.</p>\\n</div>\\n</div>\\n<h3>Install SqlServerDsc</h3>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Install-PSResource</span> SqlServerDsc <span class=\\"token operator\\">-</span>Version 17<span class=\\"token punctuation\\">.</span>1<span class=\\"token punctuation\\">.</span>0 <span class=\\"token operator\\">-</span>TrustRepository\\n</span></code></pre></div>\\n<h3>Download PowerBI Report Server</h3>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$url</span> = <span class=\\"token string\\">'https://download.microsoft.com/download/2/7/3/2739a88a-4769-4700-8748-1a01ddf60974/PowerBIReportServer.exe'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$mediaFilePath</span> = <span class=\\"token namespace\\">[System.IO.Path]</span>::GetTempPath<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Save-SqlDscSqlServerMediaFile</span> <span class=\\"token operator\\">-</span>SkipExecution <span class=\\"token operator\\">-</span>Url <span class=\\"token variable\\">$url</span> <span class=\\"token operator\\">-</span>FileName <span class=\\"token string\\">'PowerBIReportServer.exe'</span> <span class=\\"token operator\\">-</span>DestinationPath <span class=\\"token variable\\">$mediaFilePath</span> <span class=\\"token operator\\">-</span>Force <span class=\\"token operator\\">-</span>ErrorAction <span class=\\"token string\\">'Stop'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$mediaExecutableFile</span> = <span class=\\"token variable\\">$mediaFilePath</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">Join-Path</span> <span class=\\"token operator\\">-</span>ChildPath <span class=\\"token string\\">'PowerBIReportServer.exe'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$mediaExecutableFile</span>\\n</span></code></pre></div>\\n<h2>Pattern\xA01 \u2013 One\u2011shot imperative call</h2>\\n<p>When you need a <strong>quick, idempotent task</strong> (e.g. build server image) without maintaining configuration files.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$desiredParameters</span> = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    InstanceName = <span class=\\"token string\\">'PBIRS'</span>\\n</span><span class=\\"code-line\\">    Action       = <span class=\\"token string\\">'Install'</span>\\n</span><span class=\\"code-line\\">    AcceptLicensingTerms = <span class=\\"token boolean\\">$true</span>\\n</span><span class=\\"code-line\\">    MediaPath   = <span class=\\"token variable\\">$mediaExecutableFile</span>\\n</span><span class=\\"code-line\\">    Edition = <span class=\\"token string\\">'Developer'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertTo-Json</span> <span class=\\"token operator\\">-</span>Compress\\n</span></code></pre></div>\\n<blockquote>\\n<p>We don't need to use <code>SuppressRestart</code> here because DSC v3 does not yet support restarting of a target machine. Neither would <code>ForceRestart</code> work either. When a restart is required either forcefully or by exit code, the command <a href=\\"https://github.com/dsccommunity/DscResource.Common/wiki/Set%E2%80%91DscMachineRebootRequired\\">Set-DscMachineRebootRequired</a> is called. The logic the command uses only works with PSDSC and LCM.</p>\\n</blockquote>\\n<h3>Imperative Get-operation</h3>\\n<p>Running the Get-operation we can verify that the current state currently missing the Power BI Report Server instance:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">$ dsc resource get <span class=\\"token operator\\">--</span>resource SqlServerDsc/SqlRSSetup <span class=\\"token operator\\">--</span>output-format json <span class=\\"token operator\\">--</span>input <span class=\\"token variable\\">$desiredParameters</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">fl</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">actualState : @<span class=\\"token punctuation\\">{</span>ProductKey=<span class=\\"token punctuation\\">;</span> Timeout=7200<span class=\\"token punctuation\\">;</span> SuppressRestart=<span class=\\"token punctuation\\">;</span> EditionUpgrade=<span class=\\"token punctuation\\">;</span> LogPath=<span class=\\"token punctuation\\">;</span> InstanceName=<span class=\\"token punctuation\\">;</span> AcceptLicensingTerms=False<span class=\\"token punctuation\\">;</span> InstallFolder=<span class=\\"token punctuation\\">;</span> ForceRestart=<span class=\\"token punctuation\\">;</span> Action=0<span class=\\"token punctuation\\">;</span> VersionUpgrade=<span class=\\"token punctuation\\">;</span> Edition=<span class=\\"token punctuation\\">;</span> MediaPath=<span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Imperative Test-operation</h3>\\n<p>Running the Test-operation we can verify that it report that our desired state is not in compliance, the Power BI Report Server instance is missing:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">$ dsc resource test <span class=\\"token operator\\">--</span>resource SqlServerDsc/SqlRSSetup <span class=\\"token operator\\">--</span>output-format json <span class=\\"token operator\\">--</span>input <span class=\\"token variable\\">$desiredParameters</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">fl</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">desiredState        : @<span class=\\"token punctuation\\">{</span>AcceptLicensingTerms=True<span class=\\"token punctuation\\">;</span> InstanceName=PBIRS<span class=\\"token punctuation\\">;</span> Edition=Developer<span class=\\"token punctuation\\">;</span> MediaPath=C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp\\\\2\\\\PowerBIReportServer<span class=\\"token punctuation\\">.</span>exe<span class=\\"token punctuation\\">;</span> Action=Install<span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">actualState         : @<span class=\\"token punctuation\\">{</span>InDesiredState=False<span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">inDesiredState      : False\\n</span><span class=\\"code-line\\">differingProperties : <span class=\\"token punctuation\\">{</span>AcceptLicensingTerms<span class=\\"token punctuation\\">,</span> InstanceName<span class=\\"token punctuation\\">,</span> Edition<span class=\\"token punctuation\\">,</span> MediaPath\u2026<span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Imperative Set-operation</h3>\\n<p>Running the Set-operation will make sure our desired state is configured:</p>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>Contrary to the Get- and Test-operation the Set-operation must run in an elevated PowerShell prompt.</p>\\n</div>\\n</div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$desiredParameters</span> = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    InstanceName = <span class=\\"token string\\">'PBIRS'</span>\\n</span><span class=\\"code-line\\">    Action       = <span class=\\"token string\\">'Install'</span>\\n</span><span class=\\"code-line\\">    AcceptLicensingTerms = <span class=\\"token boolean\\">$true</span>\\n</span><span class=\\"code-line\\">    MediaPath   = <span class=\\"token string\\">'&lt;path to media executable&gt;'</span>\\n</span><span class=\\"code-line\\">    Edition = <span class=\\"token string\\">'Developer'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertTo-Json</span> <span class=\\"token operator\\">-</span>Compress\\n</span></code></pre></div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">$ dsc resource <span class=\\"token function\\">set</span> <span class=\\"token operator\\">--</span>resource SqlServerDsc/SqlRSSetup <span class=\\"token operator\\">--</span>output-format json <span class=\\"token operator\\">--</span>input <span class=\\"token variable\\">$desiredParameters</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">fl</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">beforeState       : @<span class=\\"token punctuation\\">{</span>InstallFolder=<span class=\\"token punctuation\\">;</span> Action=0<span class=\\"token punctuation\\">;</span> Timeout=7200<span class=\\"token punctuation\\">;</span> ForceRestart=<span class=\\"token punctuation\\">;</span> VersionUpgrade=<span class=\\"token punctuation\\">;</span> ProductKey=<span class=\\"token punctuation\\">;</span> SuppressRestart=<span class=\\"token punctuation\\">;</span> LogPath=<span class=\\"token punctuation\\">;</span> AcceptLicensingTerms=False<span class=\\"token punctuation\\">;</span> InstanceName=<span class=\\"token punctuation\\">;</span> EditionUpgrade=<span class=\\"token punctuation\\">;</span> MediaPath=<span class=\\"token punctuation\\">;</span> Edition=<span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">afterState        : @<span class=\\"token punctuation\\">{</span>ProductKey=<span class=\\"token punctuation\\">;</span> AcceptLicensingTerms=False<span class=\\"token punctuation\\">;</span> MediaPath=<span class=\\"token punctuation\\">;</span> ForceRestart=<span class=\\"token punctuation\\">;</span> VersionUpgrade=<span class=\\"token punctuation\\">;</span> Action=0<span class=\\"token punctuation\\">;</span> InstanceName=PBIRS<span class=\\"token punctuation\\">;</span> SuppressRestart=<span class=\\"token punctuation\\">;</span> LogPath=<span class=\\"token punctuation\\">;</span> EditionUpgrade=<span class=\\"token punctuation\\">;</span> Timeout=7200<span class=\\"token punctuation\\">;</span> Edition=<span class=\\"token punctuation\\">;</span> InstallFolder=C:\\\\Program Files\\\\Microsoft Power BI Report Server<span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">changedProperties : <span class=\\"token punctuation\\">{</span>InstallFolder<span class=\\"token punctuation\\">,</span> InstanceName<span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-note\\" data-alert-type=\\"note\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"note\\">Note</div>\\n<div class=\\"github-alert-content\\">\\n<p>Running the Set-operation will take several minutes and no output will be shown until it is complete.</p>\\n</div>\\n</div>\\n<p>We can re-run the Set-operation again, this time it will be quicker as the desired state is already achieved, so it does nothing until the instance is removed. We can see below that a second run did not change any properties:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">$ dsc resource <span class=\\"token function\\">set</span> <span class=\\"token operator\\">--</span>resource SqlServerDsc/SqlRSSetup <span class=\\"token operator\\">--</span>output-format json <span class=\\"token operator\\">--</span>input <span class=\\"token variable\\">$desiredParameters</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">fl</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">beforeState       : @<span class=\\"token punctuation\\">{</span>ForceRestart=<span class=\\"token punctuation\\">;</span> AcceptLicensingTerms=False<span class=\\"token punctuation\\">;</span> Edition=<span class=\\"token punctuation\\">;</span> Timeout=7200<span class=\\"token punctuation\\">;</span> VersionUpgrade=<span class=\\"token punctuation\\">;</span> EditionUpgrade=<span class=\\"token punctuation\\">;</span> ProductKey=<span class=\\"token punctuation\\">;</span> InstanceName=PBIRS<span class=\\"token punctuation\\">;</span> SuppressRestart=<span class=\\"token punctuation\\">;</span> Action=0<span class=\\"token punctuation\\">;</span> MediaPath=<span class=\\"token punctuation\\">;</span> LogPath=<span class=\\"token punctuation\\">;</span> InstallFolder=C:\\\\Program Files\\\\Microsoft Power BI Report Server<span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">afterState        : @<span class=\\"token punctuation\\">{</span>InstallFolder=C:\\\\Program Files\\\\Microsoft Power BI Report Server<span class=\\"token punctuation\\">;</span> ProductKey=<span class=\\"token punctuation\\">;</span> LogPath=<span class=\\"token punctuation\\">;</span> Action=0<span class=\\"token punctuation\\">;</span>SuppressRestart=<span class=\\"token punctuation\\">;</span> MediaPath=<span class=\\"token punctuation\\">;</span> VersionUpgrade=<span class=\\"token punctuation\\">;</span> ForceRestart=<span class=\\"token punctuation\\">;</span> Edition=<span class=\\"token punctuation\\">;</span> EditionUpgrade=<span class=\\"token punctuation\\">;</span> Timeout=7200<span class=\\"token punctuation\\">;</span> AcceptLicensingTerms=False<span class=\\"token punctuation\\">;</span> InstanceName=PBIRS<span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">changedProperties :\\n</span></code></pre></div>\\n<h2>Pattern\xA02 \u2013 Declarative configuration</h2>\\n<p>Ideal for <strong>repeatable, documented deployments</strong> when multiple resources must coordinate (SQL Engine + RS Setup + firewall, etc.).</p>\\n<h3>DSC v3 configuration document</h3>\\n<p>Author a YAML document (<code>deploy-PBIRS.dsc.config.yaml</code>) to define the desired state:</p>\\n<blockquote>\\n<p>Configuration documents can be in both YAML or JSON. At the time of this writing Microsoft recommends drafting configuration documents in YAML.</p>\\n</blockquote>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yml\\"><div class=\\"code-language-label\\">YML</div><pre class=\\"language-yml\\" data-processed data-language=\\"yml\\"><code class=\\"language-yml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token key atrule\\">$schema</span><span class=\\"token punctuation\\">:</span> https<span class=\\"token punctuation\\">:</span>//aka.ms/dsc/schemas/v3/bundled/config/document.json\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">metadata</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">owner</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'security.ops@contoso.com'</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Deploy Power BI Report Server'</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">purpose</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">|</span><span class=\\"token scalar string\\">\\n</span></span><span class=\\"code-line\\"><span class=\\"token scalar string\\">    Deploy Power BI Report Server on a target machine.</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">Microsoft.DSC</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">securityContext</span><span class=\\"token punctuation\\">:</span> elevated\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">resources</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Install PBIRS'</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">type</span><span class=\\"token punctuation\\">:</span> Microsoft.DSC/PowerShell\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">properties</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">resources</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Install PBIRS'</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">type</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'SqlServerDsc/SqlRSSetup'</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">properties</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">InstanceName</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'PBIRS'</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">Action</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Install'</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">AcceptLicensingTerms</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean important\\">true</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">MediaPath</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'&lt;path to media executable&gt;'</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">Edition</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Developer'</span>\\n</span></code></pre></div>\\n<h3>Declarative Get-operation</h3>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">dsc config get <span class=\\"token operator\\">--</span>file deploy-PBIRS<span class=\\"token punctuation\\">.</span>dsc<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">.</span>yaml <span class=\\"token operator\\">--</span>output-format json <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertTo-Json</span> <span class=\\"token operator\\">-</span>Depth 10\\n</span></code></pre></div>\\n<p>Outputs:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"json\\"><div class=\\"code-language-label\\">JSON</div><pre class=\\"language-json\\" data-processed data-language=\\"json\\"><code class=\\"language-json code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"metadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"Microsoft.DSC\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"version\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"3.1.0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"operation\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"get\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"executionType\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"actual\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"startDatetime\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"2025-07-22T13:14:24.373870900+02:00\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"endDatetime\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"2025-07-22T13:14:29.359425400+02:00\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"duration\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PT4.9855545S\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"securityContext\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"elevated\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"results\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"metadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"Microsoft.DSC\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"duration\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PT3.5261752S\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Microsoft.DSC/PowerShell\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"result\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"actualState\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"result\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"SqlServerDsc/SqlRSSetup\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"properties\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Action\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"InstanceName\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Timeout\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">7200</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"ProductKey\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"InstallFolder\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"C:\\\\\\\\Program Files\\\\\\\\Microsoft Power BI Report Server\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"MediaPath\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"VersionUpgrade\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"EditionUpgrade\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"ForceRestart\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"AcceptLicensingTerms\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"LogPath\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Edition\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"SuppressRestart\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"messages\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"hadErrors\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Declarative Test-operation</h3>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">dsc config test <span class=\\"token operator\\">--</span>file deploy-PBIRS<span class=\\"token punctuation\\">.</span>dsc<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">.</span>yaml <span class=\\"token operator\\">--</span>output-format json <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertTo-Json</span> <span class=\\"token operator\\">-</span>Depth 10\\n</span></code></pre></div>\\n<p>Outputs:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"json\\"><div class=\\"code-language-label\\">JSON</div><pre class=\\"language-json\\" data-processed data-language=\\"json\\"><code class=\\"language-json code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"metadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"Microsoft.DSC\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"version\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"3.1.0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"operation\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"test\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"executionType\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"actual\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"startDatetime\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"2025-07-22T13:16:47.520018100+02:00\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"endDatetime\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"2025-07-22T13:16:52.568157200+02:00\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"duration\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PT5.0481391S\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"securityContext\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"elevated\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"results\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"metadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"Microsoft.DSC\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"duration\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PT3.6179544S\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Microsoft.DSC/PowerShell\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"result\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"desiredState\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"resources\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"SqlServerDsc/SqlRSSetup\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"properties\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"InstanceName\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Action\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"AcceptLicensingTerms\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"MediaPath\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"C:\\\\\\\\Users\\\\\\\\user\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Temp\\\\\\\\2\\\\\\\\PowerBIReportServer.exe\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Edition\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Developer\\"</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"metadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token property\\">\\"Microsoft.DSC\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"context\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"configuration\\"</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"actualState\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"_inDesiredState\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"result\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"SqlServerDsc/SqlRSSetup\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"properties\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"InDesiredState\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"inDesiredState\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"differingProperties\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"resources\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"metadata\\"</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"messages\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"hadErrors\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Declarative Set-operation</h3>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">dsc config <span class=\\"token function\\">set</span> <span class=\\"token operator\\">--</span>file deploy-PBIRS<span class=\\"token punctuation\\">.</span>dsc<span class=\\"token punctuation\\">.</span>config<span class=\\"token punctuation\\">.</span>yaml <span class=\\"token operator\\">--</span>output-format json <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertTo-Json</span> <span class=\\"token operator\\">-</span>Depth 10\\n</span></code></pre></div>\\n<p>Outputs:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"json\\"><div class=\\"code-language-label\\">JSON</div><pre class=\\"language-json\\" data-processed data-language=\\"json\\"><code class=\\"language-json code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"metadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"Microsoft.DSC\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"version\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"3.1.0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"operation\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"set\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"executionType\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"actual\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"startDatetime\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"2025-07-22T13:20:53.908081800+02:00\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"endDatetime\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"2025-07-22T13:21:05.694351300+02:00\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"duration\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PT11.7862695S\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"securityContext\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"elevated\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"results\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"metadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"Microsoft.DSC\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"duration\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PT10.3146941S\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Microsoft.DSC/PowerShell\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"result\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"beforeState\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"resources\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"SqlServerDsc/SqlRSSetup\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"properties\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Action\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"EditionUpgrade\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"InstanceName\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"InstallFolder\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"C:\\\\\\\\Program Files\\\\\\\\Microsoft Power BI Report Server\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"VersionUpgrade\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"LogPath\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Timeout\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">7200</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"ForceRestart\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Edition\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"MediaPath\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"ProductKey\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"AcceptLicensingTerms\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"SuppressRestart\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"afterState\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token property\\">\\"result\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Install PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"SqlServerDsc/SqlRSSetup\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token property\\">\\"properties\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Edition\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"LogPath\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"ForceRestart\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"InstanceName\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"PBIRS\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"MediaPath\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"SuppressRestart\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Action\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"ProductKey\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"InstallFolder\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"C:\\\\\\\\Program Files\\\\\\\\Microsoft Power BI Report Server\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"AcceptLicensingTerms\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"VersionUpgrade\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"EditionUpgrade\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token null keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token property\\">\\"Timeout\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">7200</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"changedProperties\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"result\\"</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"messages\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"hadErrors\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">false</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>Pattern\xA03 \u2013 Winget\xA0Configuration</h2>\\n<p>Windows\xA0Package Manager v1.11.400 or higher can <strong>delegate configuration application to DSC\xA0v3</strong>.\\nShip a single YAML file and run <code>winget configure</code> \u2013 perfect for <strong>endpoint provisioning at scale</strong>.</p>\\n<p>WinGet handles:</p>\\n<ul>\\n<li>Invoke the specified DSC resource</li>\\n<li>Returning structured exit codes</li>\\n</ul>\\n<p>WinGet does not handle:</p>\\n<ul>\\n<li>Installing DSC v3, it must be present on the system</li>\\n<li>Resources for DSC v3 must be present on the system</li>\\n<li>Does not elevate when DSC resources need it</li>\\n</ul>\\n<h3>WinGet configuration document</h3>\\n<p>The WinGet configuration document must be slightly different - it must currently use the implicit syntax, a specific schema URI, plus have a property to tell WinGet how to process the configuration file. This configuration file is also compatible with DSC v3 directly.</p>\\n<p>Create WinGet Configuration file <code>deploy-PBIRS.winget.config.yaml</code>:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yaml\\"><div class=\\"code-language-label\\">YAML</div><pre class=\\"language-yaml\\" data-processed data-language=\\"yaml\\"><code class=\\"language-yaml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token key atrule\\">$schema</span><span class=\\"token punctuation\\">:</span> https<span class=\\"token punctuation\\">:</span>//raw.githubusercontent.com/PowerShell/DSC/main/schemas/2023/08/config/document.json\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">metadata</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">winget</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">processor</span><span class=\\"token punctuation\\">:</span> dscv3\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">owner</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'security.ops@contoso.com'</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Deploy Power BI Report Server'</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">purpose</span><span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">|</span><span class=\\"token scalar string\\">\\n</span></span><span class=\\"code-line\\"><span class=\\"token scalar string\\">    Deploy Power BI Report Server on a target machine.</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">Microsoft.DSC</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">securityContext</span><span class=\\"token punctuation\\">:</span> elevated\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">resources</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Install PBIRS'</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">type</span><span class=\\"token punctuation\\">:</span> SqlServerDsc/SqlRSSetup\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">properties</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">InstanceName</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'PBIRS'</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">Action</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Install'</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">AcceptLicensingTerms</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean important\\">true</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">MediaPath</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'&lt;path to media executable&gt;'</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">Edition</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Developer'</span>\\n</span></code></pre></div>\\n<h3>Configure WinGet</h3>\\n<p>To use DSC v3 with WinGet we have to enable an experimental setting.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\">winget settings\\n</span></code></pre></div>\\n<p>Open in any text editor and add <code>experimentalFeatures</code> as show here:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"json\\"><div class=\\"code-language-label\\">JSON</div><pre class=\\"language-json\\" data-processed data-language=\\"json\\"><code class=\\"language-json code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"$schema\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://aka.ms/winget-settings.schema.json\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"experimentalFeatures\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"dsc3\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Apply with WinGet</h3>\\n<p>You must run this in an elevated shell:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\">winget configure <span class=\\"token parameter variable\\">--file</span> deploy-PBIRS.winget.config.yaml --verbose-logs\\n</span></code></pre></div>\\n<p>You will get an output similar to the one below, you need to accept this if you want to continue. When you accept it you will be prompted for the UAC question.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"text\\"><div class=\\"code-language-label\\">TEXT</div><pre class=\\"language-text\\" data-processed data-language=\\"text\\"><code class=\\"language-text code-highlight\\"><span class=\\"code-line\\">SqlServerDsc/SqlRSSetup [Install PBIRS]\\n</span><span class=\\"code-line\\">  This module contains commands and DSC resources for deployment and configuration of Microsoft SQL Server, SQL Server Reporting Services and Power BI Report Server.\\n</span><span class=\\"code-line\\">  Settings:\\n</span><span class=\\"code-line\\">    InstanceName: PBIRS\\n</span><span class=\\"code-line\\">    Edition: Developer\\n</span><span class=\\"code-line\\">    MediaPath: C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp\\\\2\\\\PowerBIReportServer.exe\\n</span><span class=\\"code-line\\">    AcceptLicensingTerms: true\\n</span><span class=\\"code-line\\">    Action: Install\\n</span><span class=\\"code-line\\">You are responsible for understanding the configuration settings you are choosing to execute. Microsoft is not responsible for the configuration file you have authored or imported. This configuration may change settings in Windows, install software, change software settings (including security settings), and accept user agreements to third-party packages and services on your behalf.\xA0 By running this configuration file, you acknowledge that you understand and agree to these resources and settings. Any applications installed are licensed to you by their owners. Microsoft is not responsible for, nor does it grant any licenses to, third-party packages or services.\\n</span><span class=\\"code-line\\">Have you reviewed the configuration and would you like to proceed applying it to the system?\\n</span><span class=\\"code-line\\">[Y] Yes  [N] No: y\\n</span><span class=\\"code-line\\">SqlServerDsc/SqlRSSetup [Install PBIRS]\\n</span><span class=\\"code-line\\">  Unit successfully applied.\\n</span><span class=\\"code-line\\">Configuration successfully applied.\\n</span></code></pre></div>\\n<p>Use <code>configure show</code> to display the details of the configuration.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\">winget configure show <span class=\\"token parameter variable\\">--file</span> deploy-PBIRS.winget.config.yaml --verbose-logs\\n</span></code></pre></div>\\n<h2>Takeaways</h2>\\n<ul>\\n<li><strong>DSC\xA0v3</strong> gives you flexible invocation patterns \u2013 pick imperative for speed, declarative for compliance.</li>\\n<li><strong>SqlRSSetup</strong> remains unchanged \u2013 the adapter bridges classic modules into the new engine.</li>\\n</ul>\\n<p>Happy automating \u2013 may your deployments always be idempotent!</p>"},{"slug":"what-is-dscv3","title":"What is DSC v3?","date":"2025-07-14","author":"Johan Ljunggren","excerpt":"A beginner-friendly introduction to Desired State Configuration version 3 and how to use it across Windows, Linux, and macOS.","image":"https://images.unsplash.com/photo-1518770660439-4636190af475?w=800&h=600&fit=crop&crop=center","imageAlt":"Developer working on code with multiple monitors showing terminal and configuration files","tags":["DSC","PowerShell","Automation","Beginners"],"readTime":"8 min read","category":"Automation","content":"<blockquote>\\n<p>DSC v3 is a simple, single executable tool that helps you declare and enforce the desired state of your systems in a cross-platform way.</p>\\n</blockquote>\\n<h2>What is DSC?</h2>\\n<p>Desired State Configuration (DSC) is a PowerShell-based framework that lets you describe how you want your system to look and behave. You write a configuration script (.ps1) that outlines the desired state\u2014like which folders should exist or which services should be running\u2014and DSC ensures your machine matches that state.</p>\\n<h2>Why DSC v3?</h2>\\n<ul>\\n<li><strong>Single executable</strong>: No Windows service or complex installation. Just download <code>dsc.exe</code> and place it in your PATH.</li>\\n<li><strong>Cross-platform</strong>: Runs on PowerShell 7+ on Windows, Linux, and macOS.</li>\\n<li><strong>Side-by-side versions</strong>: Keep multiple DSC engine versions in separate folders for testing or rollbacks.</li>\\n<li><strong>Familiar syntax</strong>: If you know PowerShell, writing configurations feels natural.</li>\\n</ul>\\n<h2>Installing DSC v3</h2>\\n<ol>\\n<li>\\n<p>Download the latest <code>dsc.exe</code> from the <a href=\\"https://github.com/PowerShell/dsc/releases\\">DSC GitHub releases</a>.</p>\\n</li>\\n<li>\\n<p>Move <code>dsc.exe</code> into a folder on your machine, e.g.:</p>\\n<ul>\\n<li>Windows: <code>C:\\\\dsc</code></li>\\n<li>Linux: <code>/opt/microsoft/dsc</code></li>\\n<li>macOS: <code>/usr/local/microsoft/dsc</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>Add it to your PATH:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Windows (PowerShell)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$env</span>:PATH <span class=\\"token operator\\">+=</span> <span class=\\"token string\\">';C:\\\\dsc'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Linux (bash/zsh)</span>\\n</span><span class=\\"code-line\\">ln <span class=\\"token operator\\">-</span>s <span class=\\"token operator\\">/</span>opt/microsoft/dsc/dsc <span class=\\"token operator\\">/</span>usr/local/bin/dsc\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"> <span class=\\"token comment\\"># macOS (bash/zsh)</span>\\n</span><span class=\\"code-line\\">ln <span class=\\"token operator\\">-</span>s <span class=\\"token operator\\">/</span>usr/local/microsoft/dsc/dsc <span class=\\"token operator\\">/</span>usr/local/bin/dsc\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Verify installation:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"bash\\"><div class=\\"code-language-label\\">BASH</div><pre class=\\"language-bash\\" data-processed data-language=\\"bash\\"><code class=\\"language-bash code-highlight\\"><span class=\\"code-line\\">$ dsc <span class=\\"token parameter variable\\">--version</span>\\n</span><span class=\\"code-line\\">dsc x.x.x\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<div class=\\"github-alert github-alert-tip\\" data-alert-type=\\"tip\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"tip\\">Tip</div>\\n<div class=\\"github-alert-content\\">\\n<p>On Linux and macOS if you are not allowed to execute dsc, make it executable by running\\n<code>chmod +x /opt/microsoft/dsc/dsc</code> or <code>chmod +x /usr/local/microsoft/dsc/dsc</code> respectively.</p>\\n</div>\\n</div>\\n<h2>Quick Start: Get the current state</h2>\\n<p>Let's create a configuration that gets the current operating system information on your system using DSC v3.</p>\\n<ol>\\n<li>\\n<p>Create a JSON configuration <code>folder-config.json</code> using DSC v3\u2019s schema:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"json\\"><div class=\\"code-language-label\\">JSON</div><pre class=\\"language-json\\" data-processed data-language=\\"json\\"><code class=\\"language-json code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"$schema\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://raw.githubusercontent.com/PowerShell/DSC/main/schemas/v3/config/document.json\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"resources\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"MyOSInfo\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Microsoft/OSInfo\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"properties\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Get the current state:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"bash\\"><div class=\\"code-language-label\\">BASH</div><pre class=\\"language-bash\\" data-processed data-language=\\"bash\\"><code class=\\"language-bash code-highlight\\"><span class=\\"code-line\\">dsc config get <span class=\\"token parameter variable\\">--file</span> ./folder-config.json --output-format pretty-json\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<div class=\\"github-alert github-alert-note\\" data-alert-type=\\"note\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"note\\">Note</div>\\n<div class=\\"github-alert-content\\">\\n<p>It is also possible to get the current state by running <code>dsc resource get -r Microsoft/OSInfo</code>\\nwithout needing a configuration file.</p>\\n</div>\\n</div>\\n<h2>Conclusion</h2>\\n<p>DSC v3 redefines Desired State Configuration by packaging the engine into a lightweight, cross-platform executable that fits seamlessly into modern pipelines. Its adapter model ensures compatibility with existing DSC modules while enabling new, platform-neutral resources. Start small, learn the resource syntax, and build up to automating your entire infrastructure.</p>\\n<p>Happy configuring!</p>"},{"slug":"demodscclass-your-first-class-based-dsc-v3-resource","title":"DemoDscClass: Your First Class\u2011Based DSC\xA0v3 Resource","date":"2025-07-13","author":"Johan Ljunggren","excerpt":"A step-by-step beginner\u2019s guide to designing, coding, testing, and running your first class-based DSC v3 resource in PowerShell.","image":"https://images.unsplash.com/photo-1519389950473-47ba0277781c?w=1200&h=600&fit=crop&crop=center","imageAlt":"Top-down view of a busy workspace with multiple laptops, smartphones, notebooks, and drinks, surrounded by people working and collaborating.","tags":["PowerShell","DSC","Infrastructure as Code","Automation","DevOps"],"readTime":"8 min read","category":"DSC","content":"<blockquote>\\n<p><strong>Objective:</strong> Show a complete beginner how to design, code, test, and run a <strong>class\u2011based DSC v3 resource</strong> called <strong>DemoDscClass</strong>. It is recommended that cross-platform PowerShell is used throughout this guide.</p>\\n</blockquote>\\n<h2>What is a DSC resource?</h2>\\n<p>A <em>DSC resource</em> is a building-block that tells the engine <strong>how</strong> to reach \u2013 and stay in \u2013 a desired state. Think of it as a PowerShell class with four lifecycle methods:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Method</th>\\n<th>When used</th>\\n<th>What it returns</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><strong><code>Get()</code></strong></td>\\n<td>Returns the current state</td>\\n<td>A hashtable describing <em>current</em> state</td>\\n</tr>\\n<tr>\\n<td><strong><code>Test()</code></strong></td>\\n<td>Checks if the state matches the desired state</td>\\n<td><code>$true</code> if node already matches the desired state</td>\\n</tr>\\n<tr>\\n<td><strong><code>Set()</code></strong></td>\\n<td>Applies the desired state</td>\\n<td>Nothing \u2013 it just fixes things</td>\\n</tr>\\n<tr>\\n<td><strong><code>Export()</code></strong></td>\\n<td>Exports the current configuration state</td>\\n<td>An array of resource class instances representing the configured resources</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2>Why write a class\u2011based resource?</h2>\\n<p>Class-based DSC resources offer a modern, object-oriented approach to configuration management in PowerShell. By writing your resource as a class, you gain several advantages:</p>\\n<ul>\\n<li><strong>Broad Compatibility:</strong> Your resource runs seamlessly on both the new <strong>DSC\xA0v3</strong> engine (the next-generation, cross-platform Desired State Configuration engine) <em>and</em> the legacy <strong>PSDSC</strong> engine. This means you can support both modern and existing environments without maintaining separate codebases, ensuring backward compatibility for organizations in transition.</li>\\n<li><strong>Cleaner Code &amp; Reusability:</strong> Classes allow you to encapsulate logic, properties, and methods in a structured way, making your code easier to read, maintain, and extend. You can leverage inheritance and composition for more advanced scenarios.</li>\\n<li><strong>Cross-Platform Awareness:</strong> To make your resource work on Windows, Linux, or macOS, write simple checks in your <code>Get()</code>, <code>Test()</code>, and <code>Set()</code> methods that detect which operating system you\u2019re on and run the right commands or file paths. This ensures your resource behaves correctly on all platforms.</li>\\n</ul>\\n<div class=\\"github-alert github-alert-note\\" data-alert-type=\\"note\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"note\\">Note</div>\\n<div class=\\"github-alert-content\\">\\n<p>The engine ships with adapters that load class\u2011based resources even when they target the older v2 runtime.</p>\\n</div>\\n</div>\\n<h3>Are class-based resources the future of DSC?</h3>\\n<p>While class-based resources are currently the recommended pattern for PowerShell DSC resource authoring, DSC v3 has broader goals and is evolving to support multiple languages and resource types\u2014not just PowerShell classes. For example, you can author resources in Go, C#, Python and other languages (see the <a href=\\"https://powershell.github.io/DSC-Samples/languages/go/first-resource/\\">DSC v3 documentation</a>). Class-based resources remain well-supported, but may not be the only or primary model in the future.</p>\\n<p>For example, if your organization is migrating from Windows-only infrastructure to a mix of Windows and Linux, or adopting newer versions of PowerShell, class-based resources ensure your automation investments remain valid and portable\u2014regardless of whether you are running the new DSC v3 engine or the older PSDSC engine.</p>\\n<h2>Project structure (minimal)</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"plaintext\\"><div class=\\"code-language-label\\">PLAINTEXT</div><pre class=\\"language-plaintext\\" data-processed data-language=\\"plaintext\\"><code class=\\"language-plaintext code-highlight\\"><span class=\\"code-line\\">DemoDscClass\\\\\\n</span><span class=\\"code-line\\">\u251C\u2500 DemoDscClass.psd1    # Manifest\\n</span><span class=\\"code-line\\">\u2514\u2500 DemoDscClass.psm1    # Module with the class inside\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>The module manifest name <em>must</em> be named the same as project folder name (the module name), e.g. <em>DemoDscClass</em>.</p>\\n</div>\\n</div>\\n<h3>Create the project folder (cross-platform)</h3>\\n<p>You can use <em>Command Prompt</em> (Windows), <em>Windows PowerShell</em> (Windows), <em>PowerShell</em> (Windows, macOS, or Linux) or any POSIX shell to set up the folder structure:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">mkdir</span> DemoDscClass\\n</span><span class=\\"code-line\\"><span class=\\"token builtin class-name\\">cd</span> DemoDscClass\\n</span></code></pre></div>\\n<h2>Create a module manifest</h2>\\n<p>You can use <em>Windows PowerShell</em> (Windows) or <em>PowerShell</em> (Windows, macOS, or Linux) to create the module manifest:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$manifestParams</span> = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    Path                  = <span class=\\"token string\\">'.\\\\DemoDscClass.psd1'</span>\\n</span><span class=\\"code-line\\">    RootModule            = <span class=\\"token string\\">'DemoDscClass.psm1'</span>\\n</span><span class=\\"code-line\\">    DscResourcesToExport  = <span class=\\"token string\\">'DemoDscClass'</span>\\n</span><span class=\\"code-line\\">    ModuleVersion         = <span class=\\"token string\\">'0.0.1'</span>\\n</span><span class=\\"code-line\\">    CompatiblePSEditions  = @<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Desktop'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Core'</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    PowerShellVersion     = <span class=\\"token string\\">'5.1'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">New-ModuleManifest</span> @manifestParams\\n</span></code></pre></div>\\n<p>You could also use any text editor to create the file <em>DemoDscClass.psd1</em> manually:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">@<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    RootModule = <span class=\\"token string\\">'DemoDscClass.psm1'</span>\\n</span><span class=\\"code-line\\">    ModuleVersion = <span class=\\"token string\\">'0.0.1'</span>\\n</span><span class=\\"code-line\\">    CompatiblePSEditions = <span class=\\"token string\\">'Desktop'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Core'</span>\\n</span><span class=\\"code-line\\">    GUID = <span class=\\"token string\\">'03ac4e95-e504-468d-add4-f099e2368239'</span>\\n</span><span class=\\"code-line\\">    Author = <span class=\\"token string\\">'username'</span>\\n</span><span class=\\"code-line\\">    CompanyName = <span class=\\"token string\\">'Unknown'</span>\\n</span><span class=\\"code-line\\">    Copyright = <span class=\\"token string\\">'(c) developer. All rights reserved.'</span>\\n</span><span class=\\"code-line\\">    PowerShellVersion = <span class=\\"token string\\">'5.1'</span>\\n</span><span class=\\"code-line\\">    FunctionsToExport = <span class=\\"token string\\">'*'</span>\\n</span><span class=\\"code-line\\">    CmdletsToExport = <span class=\\"token string\\">'*'</span>\\n</span><span class=\\"code-line\\">    VariablesToExport = <span class=\\"token string\\">'*'</span>\\n</span><span class=\\"code-line\\">    AliasesToExport = <span class=\\"token string\\">'*'</span>\\n</span><span class=\\"code-line\\">    DscResourcesToExport = <span class=\\"token string\\">'DemoDscClass'</span>\\n</span><span class=\\"code-line\\">    PrivateData = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        PSData = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-note\\" data-alert-type=\\"note\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"note\\">Note</div>\\n<div class=\\"github-alert-content\\">\\n<p>There are more properties available and best practices for setting properties\\nin the module manifest than shown here, but these are the same properties and\\nvalues set by <code>New-ModuleManifest</code>, and they are the minimum required. Use\\nthe command <code>New-ModuleManifest</code> to output a module manifest to see available\\nproperties or read the article <a href=\\"https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_module_manifests\\">about_Module_Manifest</a>.</p>\\n</div>\\n</div>\\n<h2>Author the class</h2>\\n<p>Create <em>DemoDscClass.psm1</em> using any text editor:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token namespace\\">[DscResource()]</span>                   <span class=\\"token comment\\"># Marks this class as a DSC resource for the engine</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> DemoDscClass <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token namespace\\">[DscProperty(Key)]</span>            <span class=\\"token comment\\"># Declares a key property (must uniquely identify the resource instance), at least one key property is required for all DSC resources</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token namespace\\">[System.String]</span> <span class=\\"token variable\\">$Key</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token namespace\\">[DscProperty()]</span>               <span class=\\"token comment\\"># Declares an optional property</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token namespace\\">[System.String]</span> <span class=\\"token variable\\">$OptionalProperty</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    DemoDscClass<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>              <span class=\\"token comment\\"># Constructor (optional, can be used for initialization)</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token comment\\"># init logic here</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token namespace\\">[DemoDscClass]</span> Get<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>        <span class=\\"token comment\\"># Returns the current state as a hashtable (DSC accepts either a class instance or a hashtable)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">Write-Verbose</span> <span class=\\"token operator\\">-</span>Message <span class=\\"token string\\">'Get called'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token variable\\">$currentState</span> = @<span class=\\"token punctuation\\">{</span>        <span class=\\"token comment\\"># Set properties to the current state</span>\\n</span><span class=\\"code-line\\">          Key = <span class=\\"token variable\\">$this</span><span class=\\"token punctuation\\">.</span>Key\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token variable\\">$currentState</span>      <span class=\\"token comment\\"># Output current state</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token namespace\\">[System.Boolean]</span> Test<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>     <span class=\\"token comment\\"># Checks if the current state matches the desired state</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">Write-Verbose</span> <span class=\\"token operator\\">-</span>Message <span class=\\"token string\\">'Test called - always returns $false to demo Set()'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">$false</span>             <span class=\\"token comment\\"># Always returns false to force Set() for demo</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token namespace\\">[void]</span> <span class=\\"token function\\">Set</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>                <span class=\\"token comment\\"># Applies the desired state (no-op in this demo)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">Write-Verbose</span> <span class=\\"token operator\\">-</span>Message <span class=\\"token string\\">'Set called - no changes are applied for demo'</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    static <span class=\\"token namespace\\">[DemoDscClass[]]</span> Export<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>    <span class=\\"token comment\\"># Exports the configuration state for DSC v3</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">Write-Verbose</span> <span class=\\"token operator\\">-</span>Message <span class=\\"token string\\">'Export called - returning three demo instances'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token variable\\">$resultList</span> = <span class=\\"token namespace\\">[System.Collections.Generic.List[DemoDscClass]]</span>::new<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># In a real resource, return an array of actual resource instances</span>\\n</span><span class=\\"code-line\\">        1<span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>3 <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ForEach-Object</span> <span class=\\"token operator\\">-</span><span class=\\"token keyword\\">Process</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$obj</span> = <span class=\\"token function\\">New-Object</span> DemoDscClass\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$obj</span><span class=\\"token punctuation\\">.</span>Key = <span class=\\"token string\\">'Demo{0}'</span> <span class=\\"token operator\\">-</span>f <span class=\\"token variable\\">$_</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$obj</span><span class=\\"token punctuation\\">.</span>OptionalProperty = <span class=\\"token string\\">'Value of OptionalProperty for Demo{0}'</span> <span class=\\"token operator\\">-</span>f <span class=\\"token variable\\">$_</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$resultList</span><span class=\\"token punctuation\\">.</span>Add<span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$obj</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token variable\\">$resultList</span><span class=\\"token punctuation\\">.</span>ToArray<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Code Walk\u2011through</h3>\\n<ol>\\n<li><strong><code>[DscResource()]</code></strong> \u2013 This attribute marks the PowerShell class as a DSC resource, making it discoverable and loadable by the DSC engine. Without this, the engine will ignore the class entirely.</li>\\n<li><strong><code>[DscProperty(Key)]</code></strong> \u2013 This attribute designates a property as a <em>key</em> property, which is required for every DSC resource. The key property (or properties) uniquely identifies each instance of the resource, allowing DSC to track and manage multiple resources of the same type. You can have additional properties, but at least one must be marked as <code>Key</code>. Beside key properties you can have optional, mandatory and read-only properties, read more in <a href=\\"https://learn.microsoft.com/en-us/powershell/dsc/concepts/class-based-resources?view=dsc-2.0#class-based-dsc-resource-properties\\">Class-based DSC Resource properties</a>.</li>\\n<li><strong><code>DemoDscClass()</code></strong> - This is the class constructor. A constructor is a special method in a class that runs automatically when you create a new object from that class. Its main job is to set up the initial state of the object\u2014like assigning default values to properties or running setup code\u2014so your object is ready to use right away. Think of it as the instructions for building and preparing your object when you first make it.</li>\\n<li><strong><code>Get()</code></strong> \u2013 This method is called by the DSC engine to retrieve the current state of the resource instance. It should return either a plain hashtable (the most common pattern) or an instance of the DSC resource class itself \u2014 both are accepted by the engine. The returned object should describe the current values of all properties managed by the resource.</li>\\n<li><strong><code>Test()</code></strong> \u2013 This method determines whether the current state matches the desired state specified in the configuration. It should return <code>$true</code> if no changes are needed (i.e., the system is already in the desired state), or <code>$false</code> if <code>Set()</code> needs to be called to bring the system into compliance. This is where you implement your logic to check for drift or configuration differences.</li>\\n<li><strong><code>Set()</code></strong> \u2013 This method is responsible for applying the desired state. If <code>Test()</code> returns <code>$false</code>, then the method <code>Set()</code> should be called to make the necessary changes. In a production resource, this is where you would implement the code to enforce the configuration (e.g., create a file, set a registry key, etc.), it should contain your remediation logic. When calling set operation from the DSC executable it will also call <code>Get()</code>, so any error in <code>Get()</code> could potentially make set operation fail. In this demo, <code>Set()</code> is a no-op for simplicity.</li>\\n<li><strong><code>Export()</code></strong> \u2013 This static method is used by DSC v3 to export the current configuration state. It should return an array of resource class instances representing existing resource instances, allowing DSC to retrieve a complete snapshot of all managed resources in the system.</li>\\n</ol>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>Any initialization logic in the constructor must not fail (throw an error), as this would prevent the PowerShell from creating an instance of the class resource.</p>\\n</div>\\n</div>\\n<h2>Smoke\u2011test locally with DSC executable</h2>\\n<h3>Install DSC executable</h3>\\n<p>You can use the community module <em>PSDSC</em> to install the DSC v3 executable\\nfrom <em>PowerShell</em> (not <em>Windows PowerShell</em>). Once installed you can run\\nthe DSC executable from any shell.</p>\\n<p>To install the latest version (a preview if newest) of the DSC v3 engine, run the following:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Install-PSResource</span> PSDSC <span class=\\"token operator\\">-</span>TrustRepository <span class=\\"token operator\\">-</span>Quiet\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Install-DscExe</span> <span class=\\"token operator\\">-</span>IncludePrerelease <span class=\\"token operator\\">-</span>Force\\n</span><span class=\\"code-line\\">dsc <span class=\\"token operator\\">--</span>version\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-note\\" data-alert-type=\\"note\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"note\\">Note</div>\\n<div class=\\"github-alert-content\\">\\n<p>You can find additional ways to install dsc executable in <a href=\\"https://github.com/PowerShell/Dsc?tab=readme-ov-file#installing-dscv3\\">Installing DSCv3</a>.</p>\\n</div>\\n</div>\\n<h4>Troubleshooting DSC executable</h4>\\n<p>If you get an error running DSC v3 on Windows, make sure the <code>$env:PATH</code> contains the path to the DSC executable in your current PowerShell session:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$env</span>:PATH <span class=\\"token operator\\">+=</span> <span class=\\"token namespace\\">[System.IO.Path]</span>::PathSeparator <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Join-Path</span> <span class=\\"token operator\\">-</span>Path <span class=\\"token variable\\">$env</span>:LOCALAPPDATA <span class=\\"token operator\\">-</span>ChildPath <span class=\\"token string\\">'dsc'</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<p>To persist this change across sessions, either add the same line to your PowerShell profile (<code>$PROFILE</code>) or update your machine or user environment variable <code>PATH</code> to use the dsc executable from any shell.</p>\\n<p>For Linux POSIX shells (e.g., bash, zsh), the path to the <code>dsc</code> executable was symbolically linked from <em>/usr/local/bin</em> by <code>Install-DscExe</code>, it should work from any shell.</p>\\n<h2>Make sure PowerShell can find your resource</h2>\\n<p>Before you list your DSC resource, you need to make sure PowerShell knows where to look for it. This is done by adding the folder where your resource lives to the <code>$env:PATH</code> variable. This step helps PowerShell discover your module, especially when working in a new folder or after creating your resource for the first time.</p>\\n<p>Open PowerShell and make sure you are in the project folder you created, then run:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$env</span>:PSModulePath <span class=\\"token operator\\">+=</span> <span class=\\"token namespace\\">[System.IO.Path]</span>::PathSeparator <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Split-Path</span> <span class=\\"token operator\\">-</span>Path <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Get-Location</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span>Parent<span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<p>This command adds your current folder to the search path. Now, PowerShell can find your DSC resource when you list or use it.</p>\\n<h2>List resources</h2>\\n<p>To see all available DSC resources, run:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">dsc resource list <span class=\\"token operator\\">--</span>adapter Microsoft<span class=\\"token punctuation\\">.</span>DSC/PowerShell\\n</span></code></pre></div>\\n<p>You should now see the <em>DemoDscClass</em> in the resource list. It should show that it supports the capabilities get, test, and set. Due to a bug in DSC v3 it does not recognize that we have implemented the capability <em>export</em>. This is just a visual reporting bug, DSC v3 will still be able to use the <em>export</em> capability.</p>\\n<div class=\\"github-alert github-alert-note\\" data-alert-type=\\"note\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"note\\">Note</div>\\n<div class=\\"github-alert-content\\">\\n<p><strong>Note on Adapters:</strong>\\nIn DSC v3, an adapter acts as a bridge between the DSC engine and different resource types or execution environments. For example, the Microsoft.DSC/PowerShell adapter allows the engine to discover and run traditional PowerShell-based DSC resources\u2014even on the new cross-platform DSC engine. This ensures compatibility with existing resources and enables a smooth transition to newer DSC models, letting you leverage both legacy and modern configurations within the same environment.</p>\\n</div>\\n</div>\\n<h2>Invoke each lifecycle operation</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$desiredParameters</span> = @<span class=\\"token punctuation\\">{</span> Key = <span class=\\"token string\\">'Demo'</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertTo-Json</span> <span class=\\"token operator\\">-</span>Compress\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">dsc resource get <span class=\\"token operator\\">--</span>resource DemoDscClass/DemoDscClass <span class=\\"token operator\\">--</span>output-format json <span class=\\"token operator\\">--</span>input <span class=\\"token variable\\">$desiredParameters</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">dsc resource test <span class=\\"token operator\\">--</span>resource DemoDscClass/DemoDscClass <span class=\\"token operator\\">--</span>output-format json <span class=\\"token operator\\">--</span>input <span class=\\"token variable\\">$desiredParameters</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">dsc resource <span class=\\"token function\\">set</span> <span class=\\"token operator\\">--</span>resource DemoDscClass/DemoDscClass <span class=\\"token operator\\">--</span>output-format json <span class=\\"token operator\\">--</span>input <span class=\\"token variable\\">$desiredParameters</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">dsc resource export <span class=\\"token operator\\">--</span>resource DemoDscClass/DemoDscClass <span class=\\"token operator\\">--</span>output-format json\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-tip\\" data-alert-type=\\"tip\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"tip\\">Tip</div>\\n<div class=\\"github-alert-content\\">\\n<p>To see tracelogs add the argument <code>--trace-level trace</code>, e.g. <code>dsc --trace-level trace resource get</code>. The different trace levels are: <code>error</code>, <code>warning</code> (default), <code>info</code>, <code>debug</code>, <code>trace</code>.</p>\\n</div>\\n</div>\\n<h3>Known issues</h3>\\n<h4>DSC executable</h4>\\n<p>Currently the get, test and set operation fails if there are any <code>Write-Verbose</code>, <code>Write-Warning</code>, or <code>Write-Debug</code> that return output. You will then get the error <code>ERROR JSON: expected value at line 1 column 1</code>.\\nSee issue <a href=\\"https://github.com/PowerShell/DSC/issues/833\\">Output during module import or output from Get operation interrupts the parsing process for class-based resource</a>.</p>\\n<p>For example if we would add parameter <code>-Verbose</code> the above line <code>Write-Verbose -Message 'Get called'</code> then the get operation would fail with:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"text\\"><div class=\\"code-language-label\\">TEXT</div><pre class=\\"language-text\\" data-processed data-language=\\"text\\"><code class=\\"language-text code-highlight\\"><span class=\\"code-line\\">ERROR Operation: Failed to parse JSON from 'get': executable = 'pwsh' stdout = 'VERBOSE: Get called\\n</span><span class=\\"code-line\\">{\\"result\\":[{\\"name\\":\\"DemoDscClass/DemoDscClass\\",\\"type\\":\\"DemoDscClass/DemoDscClass\\",\\"properties\\":{\\"Key\\":\\"Demo\\"}}]}\\n</span><span class=\\"code-line\\">' stderr = '' -&gt; expected value at line 1 column 1\\n</span></code></pre></div>\\n<h2>Invoke using configuration</h2>\\n<p>Here\u2019s an easy way to group your DSC commands into a simple YAML file. It might look a bit mysterious at first, but think of it as giving DSC a recipe to follow so you don\u2019t have to type each command separately.</p>\\n<h3>Syntax for instance definition</h3>\\n<p>First, we write down what resources we want and their settings in a YAML file. Think of this as writing clear instructions that DSC will read and execute.</p>\\n<div class=\\"github-alert github-alert-tip\\" data-alert-type=\\"tip\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"tip\\">Tip</div>\\n<div class=\\"github-alert-content\\">\\n<p>More information about instance definition syntax and resource configuration can be found here: <a href=\\"https://learn.microsoft.com/en-us/powershell/dsc/reference/resources/microsoft/dsc/powershell\\">Microsoft.DSC/PowerShell</a>.</p>\\n<p>For details on the configuration document schema and structure, see: <a href=\\"https://learn.microsoft.com/en-us/powershell/dsc/reference/schemas/config/document\\">DSC Configuration Document Schema Reference</a>.</p>\\n</div>\\n</div>\\n<p>Open a text editor, create a new file called <code>demo.dsc.config.yaml</code>, and paste in the following content:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yaml\\"><div class=\\"code-language-label\\">YAML</div><pre class=\\"language-yaml\\" data-processed data-language=\\"yaml\\"><code class=\\"language-yaml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token key atrule\\">$schema</span><span class=\\"token punctuation\\">:</span> https<span class=\\"token punctuation\\">:</span>//aka.ms/dsc/schemas/v3/bundled/config/document.json\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">resources</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> Demo Dsc Class\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">type</span><span class=\\"token punctuation\\">:</span> Microsoft.DSC/PowerShell\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">properties</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">resources</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> Demo Dsc Class 1\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">type</span><span class=\\"token punctuation\\">:</span> DemoDscClass/DemoDscClass\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">properties</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">Key</span><span class=\\"token punctuation\\">:</span> Demo\\n</span></code></pre></div>\\n<p>Great! Now that the YAML file is saved, let\u2019s run some commands to see how DSC interprets it:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\">dsc config get <span class=\\"token parameter variable\\">--file</span> demo.dsc.config.yaml --output-format json\\n</span></code></pre></div>\\n<p>This command tells DSC to read the <code>demo.dsc.config.yaml</code> file and show you (in JSON) what it thinks the current state should look like. It\u2019s like a dry run to check your setup.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\">dsc config <span class=\\"token builtin class-name\\">test</span> <span class=\\"token parameter variable\\">--file</span> demo.dsc.config.yaml --output-format json\\n</span></code></pre></div>\\n<p>Here, DSC checks if the actual system state matches the desired state in your YAML. It will return <code>true</code> if everything is already good, or <code>false</code> if something needs fixing.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\">dsc config <span class=\\"token builtin class-name\\">set</span> <span class=\\"token parameter variable\\">--file</span> demo.dsc.config.yaml --output-format json\\n</span></code></pre></div>\\n<p>This one applies the changes. Think of it as telling DSC, \u201CGo ahead and make my system look like the YAML describes.\u201D It won\u2019t crash the real system in this demo, but in a real scenario it would.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sh\\"><div class=\\"code-language-label\\">SH</div><pre class=\\"language-sh\\" data-processed data-language=\\"sh\\"><code class=\\"language-sh code-highlight\\"><span class=\\"code-line\\">dsc config <span class=\\"token builtin class-name\\">export</span> <span class=\\"token parameter variable\\">--file</span> demo.dsc.config.yaml --output-format json\\n</span></code></pre></div>\\n<p>Finally, DSC exports the full configuration it applied (or would apply) in JSON format. This is helpful if you want to save or inspect the resulting state, or get a baseline configuration.</p>\\n<h3>Implicit custom syntax for instance definition</h3>\\n<p>If you prefer a shorter way, you can use an implicit syntax. It\u2019s like a shortcut: you don\u2019t need a wrapper, just list your resource directly.</p>\\n<p>Create <em>demo-implicit.dsc.config.yaml</em>:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yaml\\"><div class=\\"code-language-label\\">YAML</div><pre class=\\"language-yaml\\" data-processed data-language=\\"yaml\\"><code class=\\"language-yaml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token key atrule\\">$schema</span><span class=\\"token punctuation\\">:</span> https<span class=\\"token punctuation\\">:</span>//raw.githubusercontent.com/PowerShell/DSC/main/schemas/2024/04/config/document.json\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">resources</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> Demo Dsc Class 1\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">type</span><span class=\\"token punctuation\\">:</span> DemoDscClass/DemoDscClass\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">properties</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">Key</span><span class=\\"token punctuation\\">:</span> Demo\\n</span></code></pre></div>\\n<p>This tiny YAML file does the same thing as before but with less typing. Run the configuration file with the same commands as above, but change the path to the implicit configuration file.</p>\\n<h2>Write a quick Pester integration test</h2>\\n<p>Pester is the de facto testing framework for PowerShell. It helps you write and run automated tests for scripts, modules, and DSC resources to ensure your code works as expected. In this section, we\u2019ll install Pester, create a simple test script, and run it to confirm that our <code>DemoDscClass</code> resource\u2019s <code>Get()</code> method returns the correct <code>Key</code> value.</p>\\n<p>Here\u2019s an overview of the test structure:</p>\\n<ul>\\n<li><strong>BeforeAll</strong>: Runs once before any tests to set up the testing environment (import module, configure paths).</li>\\n<li><strong>Describe</strong>: Defines a test suite or group of related tests.</li>\\n<li><strong>Context</strong>: Divides the test suite into logical sections, grouping related test cases for specific methods (e.g., <code>Get()</code> and <code>Export()</code>).</li>\\n<li><strong>It</strong>: Defines an individual test case with assertions using <code>Should</code>.</li>\\n</ul>\\n<h3>Install Pester module</h3>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Install-PSResource</span> <span class=\\"token operator\\">-</span>Name Pester\\n</span></code></pre></div>\\n<p>Create <em>DemoDscClass.tests.ps1</em>:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">BeforeAll <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token variable\\">$modulePath</span> = <span class=\\"token variable\\">$PSScriptRoot</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">Import-Module</span> <span class=\\"token string\\">\\"<span class=\\"token variable\\">$modulePath</span>/DemoDscClass.psd1\\"</span> <span class=\\"token operator\\">-</span>Force\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">Describe <span class=\\"token string\\">'DemoDscClass'</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    Context <span class=\\"token string\\">'Get() method'</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        It <span class=\\"token string\\">'Returns the same Key in Get()'</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$desiredParameters</span> = @<span class=\\"token punctuation\\">{</span> Key = <span class=\\"token string\\">'X'</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertTo-Json</span> <span class=\\"token operator\\">-</span>Compress\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$out</span> = dsc resource get <span class=\\"token operator\\">--</span>resource DemoDscClass/DemoDscClass <span class=\\"token operator\\">--</span>output-format json <span class=\\"token operator\\">--</span>input <span class=\\"token variable\\">$desiredParameters</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$out</span><span class=\\"token punctuation\\">.</span>actualState<span class=\\"token punctuation\\">.</span>Key <span class=\\"token punctuation\\">|</span> Should <span class=\\"token operator\\">-</span>Be <span class=\\"token string\\">'X'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Context <span class=\\"token string\\">'Export() method'</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        It <span class=\\"token string\\">'Returns multiple instances in Export()'</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$desiredParameters</span> = @<span class=\\"token punctuation\\">{</span> Key = <span class=\\"token string\\">'X'</span> <span class=\\"token punctuation\\">}</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertTo-Json</span> <span class=\\"token operator\\">-</span>Compress\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$outArray</span> = dsc resource export <span class=\\"token operator\\">--</span>resource DemoDscClass/DemoDscClass <span class=\\"token operator\\">--</span>output-format json <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">ConvertFrom-Json</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$outArray</span><span class=\\"token punctuation\\">.</span>resources <span class=\\"token punctuation\\">|</span> Should <span class=\\"token operator\\">-</span>HaveCount 3\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            <span class=\\"token variable\\">$outArray</span><span class=\\"token punctuation\\">.</span>resources<span class=\\"token punctuation\\">[</span>0<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>properties<span class=\\"token punctuation\\">.</span>Key <span class=\\"token punctuation\\">|</span> Should <span class=\\"token operator\\">-</span>BeLike <span class=\\"token string\\">'Demo*'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<p>Once the test script is saved, you can run it with Pester:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Invoke-Pester</span> <span class=\\"token operator\\">-</span>Script <span class=\\"token punctuation\\">.</span><span class=\\"token operator\\">/</span>DemoDscClass<span class=\\"token punctuation\\">.</span>tests<span class=\\"token punctuation\\">.</span>ps1 <span class=\\"token operator\\">-</span>Output Detailed\\n</span></code></pre></div>\\n<p>To understand what happens in the test script:</p>\\n<ul>\\n<li>The <strong>BeforeAll</strong> block runs once at the start. We set <code>$modulePath</code> and import our DSC module so that the <code>dsc</code> command can find and use the <code>DemoDscClass</code> definition.</li>\\n<li>The <strong>Describe</strong> block defines the overall test suite for <code>DemoDscClass</code>.</li>\\n<li>The <strong>Context</strong> blocks divide our suite into logical sections, grouping related test cases for specific methods (e.g., <code>Get()</code> and <code>Export()</code>), which makes tests easier to navigate.</li>\\n<li>The <strong>It</strong> block contains the actual test case, where we perform the action and assert the expected result using <code>Should</code>.</li>\\n</ul>\\n<p>You can extend this test file with more cases. For example, to verify the <code>Test()</code> and <code>Set()</code> methods.</p>\\n<p>This approach lets you build confidence in each resource method by writing focused, easy-to-read tests.</p>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p><strong>If you change the class definition, you must restart your PowerShell session.</strong> PowerShell cannot reload or update a class that has already been loaded in the current session. Any changes to the class (such as adding properties or logic in methods) will not take effect until you start a new session. For automated testing or development, see <a href=\\"https://github.com/viscalyx/Viscalyx.Common/wiki/Invoke%E2%80%91PesterJob\\">Invoke\u2011PesterJob</a> for a helper that can run tests in a fresh session automatically.</p>\\n</div>\\n</div>\\n<h2>Package &amp; publish (optional)</h2>\\n<p>To share your DSC resource with others or make it available for installation via PowerShell, you can publish your module to the PowerShell Gallery. The command below packages your module and uploads it to the PSGallery repository. Replace <code>&lt;PAT&gt;</code> with your personal API key from the PowerShell Gallery website.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Publish-PSResource</span> <span class=\\"token operator\\">-</span>Path <span class=\\"token punctuation\\">.</span>\\\\ <span class=\\"token operator\\">-</span>Repository PSGallery <span class=\\"token operator\\">-</span>ApiKey &lt;PAT&gt;\\n</span></code></pre></div>\\n<h2>Additional reading</h2>\\n<p>To deepen your understanding, check out the following resources:</p>\\n<ul>\\n<li><a href=\\"https://learn.microsoft.com/en-us/powershell/dsc/resources/authoringresourceclass?view=dsc-1.1\\">Writing a custom DSC resource with PowerShell classes</a> \u2013 Official Microsoft guide on class-based DSC resources.</li>\\n<li><a href=\\"https://github.com/PowerShell/DSC-Samples\\">DSC v3 Samples on GitHub</a> \u2013 Explore real-world examples in various languages (Go, C#, Python).</li>\\n<li><a href=\\"https://pester.dev/\\">Pester Testing Framework</a> \u2013 Learn how to write tests for your DSC resources.</li>\\n<li><a href=\\"https://learn.microsoft.com/en-us/powershell/dsc/reference/schemas/config/document\\">DSC Configuration Document Schema Reference</a> \u2013 Understand the YAML schema for configuration files.</li>\\n<li><a href=\\"https://github.com/PowerShell/DSC/tree/main/dsc/examples\\">Schema examples</a> - Learn from community schemas.</li>\\n</ul>\\n<h2>Conclusion</h2>\\n<p>Congratulations \u2013 you have built, tested, and executed your very first class-based DSC v3 resource!</p>\\n<p>By following this guide, you have learned how to:</p>\\n<ol>\\n<li>Create a project folder and module manifest.</li>\\n<li>Author a PowerShell class with <code>Get()</code>, <code>Test()</code>, <code>Set()</code>, and <code>Export()</code> methods.</li>\\n<li>Perform smoke tests using the DSC executable.</li>\\n<li>Define configuration files in YAML and run them.</li>\\n<li>Write Pester tests to verify resource behavior.</li>\\n</ol>\\n<p>Next steps for a novice:</p>\\n<ul>\\n<li>Extend <code>DemoDscClass</code> with additional properties and real-world logic, such as file or registry management.</li>\\n<li>Implement more robust checks in <code>Test()</code> to detect actual configuration drift.</li>\\n<li>Practice packaging and publishing your module to the PowerShell Gallery.</li>\\n<li>Engage with the PowerShell DSC community through blogs, forums, and GitHub.</li>\\n</ul>\\n<p>With these fundamentals in place, you\u2019re well on your way to creating powerful, cross-platform DSC resources. Happy scripting!</p>"},{"slug":"install-ipfire-on-a-hypervm-guest","title":"Install IPFire on a Hyper-V Guest","date":"2025-06-22","author":"Johan Ljunggren","excerpt":"Learn how to deploy IPFire on Microsoft Hyper-V with Generation 2 VMs, multiple network interfaces, and post-install configuration.","image":"/team-install-ipfire.png","imageAlt":"Four IT professionals\u2014three men and one woman\u2014are in a modern data center, focused on deploying IPFire using Microsoft Hyper-V with Generation 2 virtual machines. They are gathered around a desk with a large monitor displaying IPFire setup steps, including multiple network interfaces and post-install configuration options like network setup and password settings. Server racks with organized cables line the background, emphasizing the technical environment.","tags":["IPFire","Hyper-V","Virtualization","Firewall","Networking","Linux"],"readTime":"9 min read","category":"Virtualization","content":"<div class=\\"github-alert github-alert-warning\\" data-alert-type=\\"warning\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"warning\\">Warning</div>\\n<div class=\\"github-alert-content\\">\\n<p>This guide is an AI generated draft, it is still WIP! Goal would be to have it as a part of a guide to set up a lab environment.</p>\\n</div>\\n</div>\\n<p><strong>TL;DR</strong> \u2014 You can run the latest IPFire (currently <strong>2.29 \u2013 Core 195</strong>) on Microsoft Hyper-V in about 30 minutes. Create a Generation 2 VM, turn <strong>Secure Boot</strong> off, attach <strong>two or more NICs</strong> for the IPFire color-coded zones, boot from the ISO and finish the console wizard; afterwards reach the WebUI at <code>https://&lt;GREEN-IP&gt;:444</code>. Detailed, copy-ready steps follow.</p>\\n<h2>Prerequisites</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Item</th>\\n<th>Minimum</th>\\n<th>Recommended</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>CPU</td>\\n<td>1 GHz x86-64</td>\\n<td>\u22652 vCPU with AES-NI if you plan VPNs</td>\\n</tr>\\n<tr>\\n<td>RAM</td>\\n<td>1 GiB</td>\\n<td>2\u20134 GiB for proxy/IDS</td>\\n</tr>\\n<tr>\\n<td>Disk</td>\\n<td>2 GiB</td>\\n<td>\u22654 GiB for logs &amp; add-ons</td>\\n</tr>\\n<tr>\\n<td>NICs</td>\\n<td>2</td>\\n<td>3\u20134 for DMZ/ Wi-Fi zones</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>IPFire\u2019s official hardware page lists those figures and stresses that <strong>at least two Ethernet adapters</strong> are mandatory(<a href=\\"https://www.ipfire.org/docs/hardware/requirements\\">IPFire.org</a>).\\nDownload the current ISO (<code>x86_64</code>, ~550 MB) from the release page(<a href=\\"https://www.ipfire.org/downloads\\">IPFire.org</a>) and verify its SHA256 checksum.</p>\\n<h2>1 \u2013 Plan your network setup</h2>\\n<p><img src=\\"/ipfire-deploy.png\\" alt=\\"IPFire network zone deployment diagram\\" style=\\"float:right;margin:0 0 1rem 1rem;max-width:400px;height:auto\\" class=\\"floating-image\\" /></p>\\n<p>IPFire separates traffic into up to four security zones:</p>\\n<ul>\\n<li><strong>RED</strong> = WAN/untrusted</li>\\n<li><strong>GREEN</strong> = trusted LAN</li>\\n<li><strong>BLUE</strong> = Wi-Fi clients</li>\\n<li><strong>ORANGE</strong> = DMZ</li>\\n</ul>\\n<p>The Zone Configuration doc explains their defaults and how traffic is isolated(<a href=\\"https://www.ipfire.org/docs/configuration/network/zoneconf\\">IPFire.org</a>).\\nIf you only need Internet + LAN, stick with GREEN+RED; add BLUE or ORANGE later.</p>\\n<h2>2 \u2013 Prepare Hyper-V</h2>\\n<h3>2.1 Create virtual switches</h3>\\n<p>Open <strong>Hyper-V Manager \u2192 Virtual Switch Manager</strong> and create one external switch per IPFire NIC you plan (e.g. <code>vSwitch_WAN</code>, <code>vSwitch_LAN</code>)(<a href=\\"https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/get-started/create-a-virtual-machine-in-hyper-v\\">Microsoft Learn</a>).</p>\\n<h3>2.2 New VM wizard</h3>\\n<ol>\\n<li><strong>New \u2192 Virtual Machine</strong> \u2192 <em>Next</em>(<a href=\\"https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/get-started/create-a-virtual-machine-in-hyper-v\\">Microsoft Learn</a>)</li>\\n<li>Name: <code>IPFire</code></li>\\n<li><strong>Generation 2</strong> (UEFI)\u2009\u2014\u2009offers synthetic devices for better throughput(<a href=\\"https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/plan/should-i-create-a-generation-1-or-2-virtual-machine-in-hyper-v\\">Microsoft Learn</a>)</li>\\n<li>Startup memory \u2265 1024 MB (enable Dynamic Memory if desired)(<a href=\\"https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/get-started/create-a-virtual-machine-in-hyper-v\\">Microsoft Learn</a>)</li>\\n<li>Connect first NIC to <code>vSwitch_WAN</code>.</li>\\n<li>Create a 20 GB\u2010plus VHDX (thin) on SCSI.</li>\\n<li>Boot media \u2192 ISO you downloaded.</li>\\n<li>Finish.</li>\\n</ol>\\n<blockquote>\\n<p><strong>Disable Secure Boot</strong> (required by IPFire\u2019s current kernel):\\n<code>Set-VMFirmware -VMName \\"IPFire\\" -EnableSecureBoot Off</code>(<a href=\\"https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/supported-ubuntu-virtual-machines-on-hyper-v\\">Microsoft Learn</a>)\\nYou can also un-tick <strong>Enable Secure Boot</strong> in VM Settings \u2192 Security(<a href=\\"https://learn.microsoft.com/en-us/powershell/module/hyper-v/set-vmfirmware\\">Microsoft Learn</a>).\\nIf you forget, the VM will stall at EFI boot or the installer will ignore keyboard input(<a href=\\"https://askubuntu.com/questions/384110/can-i-use-hyper-v-gen-2-with-ubuntu\\">Ask Ubuntu</a>, <a href=\\"https://community.ipfire.org/t/hyper-v-gen-2-vm-installation/1046\\">IPFire Community</a>).</p>\\n</blockquote>\\n<h3>2.3 Add extra adapters</h3>\\n<p>While the VM is <strong>Off</strong>, add one synthetic NIC per extra zone and bind each to the matching vSwitch. Hyper-V synthetic vs. legacy adapter pros/cons are discussed in the Altaro/Dojo article(<a href=\\"https://www.altaro.com/hyper-v/hyper-v-virtual-hardware-emulated-synthetic-and-sr-iov/\\">altaro.com</a>).</p>\\n<h3>2.4 If Generation 2 fails</h3>\\n<p>Some users report the installer freezing at the language screen on Gen-2; Gen-1 works reliably as a fall-back(<a href=\\"https://community.ipfire.org/t/hyper-v-gen-2-vm-installation/1046\\">IPFire Community</a>).</p>\\n<h2>3 \u2013 Boot &amp; run the IPFire installer</h2>\\n<ol>\\n<li><strong>Start</strong> the VM and open the console.</li>\\n<li>Choose <em>Install IPFire x86_64</em> at GRUB.</li>\\n<li>Select language \u2192 <strong>Start installation</strong> \u2192 accept license(<a href=\\"https://www.ipfire.org/docs/installation/step3?utm_source=chatgpt.com\\">IPFire.org</a>).</li>\\n<li>Confirm disk erase, choose filesystem (Ext4/XFS).</li>\\n<li>Set timezone, hostname, root + admin passwords.</li>\\n<li>Reboot into the <em>setup</em> utility.</li>\\n</ol>\\n<h2>4 \u2013 Assign NICs &amp; zones</h2>\\n<p>In the text setup:</p>\\n<ol>\\n<li>\\n<p>Select <em>Network Configuration Type</em> (e.g. <strong>GREEN + RED</strong>).</p>\\n</li>\\n<li>\\n<p>Under <em>Drivers &amp; Card Assignments</em> link each MAC to a color. Note that IPFire shows NIC MACs; map them to the correct VM NIC using Hyper-V:</p>\\n<ul>\\n<li>\\n<p>In PowerShell, list each adapter and its MAC address:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Get-VMNetworkAdapter</span> <span class=\\"token operator\\">-</span>VMName <span class=\\"token string\\">\\"IPFire\\"</span> <span class=\\"token punctuation\\">|</span> <span class=\\"token function\\">Select-Object</span> Name<span class=\\"token punctuation\\">,</span> MacAddress\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Or use the dedicated MAC command:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Get-VMNetworkAdapterMacAddress</span> <span class=\\"token operator\\">-</span>VMName <span class=\\"token string\\">\\"IPFire\\"</span>\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Compare the MAC addresses shown in the installer with the output above to assign each adapter to a zone.</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>Give GREEN a static LAN (e.g. 192.168.1.220/24); leave RED to DHCP or set static from your ISP. See also <a href=\\"/blog/configure-nat-azure-vm-hyperv-host\\">Configure NAT for nested Hyper-V VM on Azure VM host</a></p>\\n</li>\\n<li>\\n<p>Finish and reboot.</p>\\n</li>\\n</ol>\\n<h2>5 \u2013 First login &amp; updates</h2>\\n<p>From a LAN host browse to <strong><code>https://192.168.1.1:444</code></strong> and log in as <strong>admin</strong> with the password you set.\\nImmediately open <strong>Pakfire \u2192 Update Lists \u2192 Upgrade</strong> to apply any new Core Updates (latest is Core 195)(<a href=\\"https://www.ipfire.org/downloads\\">IPFire.org</a>).</p>\\n<h2>6 \u2013 Post-install Hyper-V tweaks (optional)</h2>\\n<ul>\\n<li><strong>Checkpoints</strong>: take a Hyper-V checkpoint after a clean install and again before major upgrades.</li>\\n<li><strong>Dynamic Memory</strong>: works fine; keep <em>Startup</em> \u2265 1024 MB as per Microsoft guidance(<a href=\\"https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/get-started/create-a-virtual-machine-in-hyper-v\\">Microsoft Learn</a>).</li>\\n<li><strong>Integration Services</strong>: modern kernels include LIS out of the box, so synthetic NICs, time sync, and live migration function without extra drivers(<a href=\\"https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/supported-ubuntu-virtual-machines-on-hyper-v\\">Microsoft Learn</a>).</li>\\n<li><strong>vRSS / SR-IOV</strong>: if your NIC and vSwitch support SR-IOV, you can enable it for maximum throughput(<a href=\\"https://www.altaro.com/hyper-v/hyper-v-virtual-hardware-emulated-synthetic-and-sr-iov/\\">altaro.com</a>).</li>\\n</ul>\\n<h2>7 \u2013 Troubleshooting</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Symptom</th>\\n<th>Fix</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>VM hangs at EFI or keyboard dead</td>\\n<td>Secure Boot still on \u2013 disable and power-cycle(<a href=\\"https://askubuntu.com/questions/384110/can-i-use-hyper-v-gen-2-with-ubuntu\\">Ask Ubuntu</a>, <a href=\\"https://learn.microsoft.com/en-us/powershell/module/hyper-v/set-vmfirmware\\">Microsoft Learn</a>)</td>\\n</tr>\\n<tr>\\n<td>\u201CSetting up Pakfire\u2026\u201D freeze on Gen-2</td>\\n<td>Use Gen-1 temporarily; bug tracked in community thread(<a href=\\"https://community.ipfire.org/t/hyper-v-gen-2-vm-installation/1046\\">IPFire Community</a>)</td>\\n</tr>\\n<tr>\\n<td>No network in RED</td>\\n<td>Ensure correct vSwitch binding and that your ISP link hands out DHCP; double-check NIC \u2194 zone mapping</td>\\n</tr>\\n<tr>\\n<td>WebUI unreachable</td>\\n<td>Confirm GREEN IP, browser uses HTTPS port 444, and that local machine is on GREEN subnet(<a href=\\"https://www.ipfire.org/docs/configuration/network/zoneconf\\">IPFire.org</a>)</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2>8 \u2013 Keeping the firewall healthy</h2>\\n<ul>\\n<li>Schedule <strong>Pakfire automatic updates</strong> and review Core Update release notes regularly(<a href=\\"https://www.ipfire.org/downloads\\">IPFire.org</a>).</li>\\n<li>Back up the configuration via <strong>IPFire \u2192 Backup</strong> and export it to secure storage.</li>\\n<li>Snapshot the VM before major rule or add-on changes.</li>\\n<li>Monitor logs under <strong>Status \u2192 Logs</strong> or ship them to an external syslog server.</li>\\n</ul>\\n<h3>Reference quick-commands</h3>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Turn off Secure Boot if you skipped it:</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Set-VMFirmware</span> <span class=\\"token operator\\">-</span>VMName <span class=\\"token string\\">\\"IPFire\\"</span> <span class=\\"token operator\\">-</span>EnableSecureBoot Off   <span class=\\"token comment\\"># Hyper-V GS \u2265 2019</span>\\n</span></code></pre></div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"bash\\"><div class=\\"code-language-label\\">BASH</div><pre class=\\"language-bash\\" data-processed data-language=\\"bash\\"><code class=\\"language-bash code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Update IPFire from the console</span>\\n</span><span class=\\"code-line\\">pakfire update <span class=\\"token operator\\">&amp;&amp;</span> pakfire upgrade <span class=\\"token parameter variable\\">-y</span>\\n</span></code></pre></div>\\n<h3>Further reading</h3>\\n<ul>\\n<li>Linux on Hyper-V feature matrix &amp; LIS notes(<a href=\\"https://learn.microsoft.com/en-us/windows-server/virtualization/hyper-v/supported-ubuntu-virtual-machines-on-hyper-v\\">Microsoft Learn</a>)</li>\\n</ul>"},{"slug":"infrastructure-as-code-best-practices","title":"Infrastructure as Code Best Practices","date":"2025-05-15","author":"Viscalyx Team","excerpt":"Learn the fundamental principles and best practices for implementing Infrastructure as Code in your organization.","image":"https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=800&h=600&fit=crop&crop=center","imageAlt":"Infrastructure as Code Best Practices","tags":["Infrastructure as Code","DevOps","Automation","Best Practices"],"readTime":"8 min read","category":"Automation","content":"<h1>Infrastructure as Code Best Practices</h1>\\n<p>Infrastructure as Code (IaC) has revolutionized how we manage and provision infrastructure. By treating infrastructure like software, we can apply the same rigorous practices that have made software development more reliable and efficient.</p>\\n<h2>Why Infrastructure as Code Matters</h2>\\n<p>Traditional infrastructure management is often manual, error-prone, and difficult to scale. IaC addresses these challenges by:</p>\\n<ul>\\n<li><strong>Consistency</strong>: Ensuring identical environments across development, staging, and production</li>\\n<li><strong>Version Control</strong>: Tracking changes and enabling rollbacks</li>\\n<li><strong>Automation</strong>: Reducing manual effort and human error</li>\\n<li><strong>Documentation</strong>: Code serves as living documentation of your infrastructure</li>\\n</ul>\\n<h2>Core Principles</h2>\\n<h3>1. Declarative Configuration</h3>\\n<p>Define the desired state of your infrastructure rather than the steps to achieve it. This approach is more reliable and easier to understand.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">Configuration WebServer <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    Node <span class=\\"token string\\">\\"WebServer01\\"</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        WindowsFeature IIS <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure = <span class=\\"token string\\">\\"Present\\"</span>\\n</span><span class=\\"code-line\\">            Name = <span class=\\"token string\\">\\"Web-Server\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        File WebContent <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure = <span class=\\"token string\\">\\"Present\\"</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token function\\">Type</span> = <span class=\\"token string\\">\\"Directory\\"</span>\\n</span><span class=\\"code-line\\">            DestinationPath = <span class=\\"token string\\">\\"C:\\\\\\\\inetpub\\\\\\\\wwwroot\\\\\\\\myapp\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>2. Immutable Infrastructure</h3>\\n<p>Create new infrastructure rather than modifying existing resources. This practice reduces configuration drift and makes deployments more predictable.</p>\\n<h3>3. Version Everything</h3>\\n<p>Store all infrastructure code in version control and tag releases. This enables:</p>\\n<ul>\\n<li>Rollback capabilities</li>\\n<li>Change tracking</li>\\n<li>Collaboration</li>\\n<li>Code review processes</li>\\n</ul>\\n<h2>Best Practices</h2>\\n<h3>Organize Your Code</h3>\\n<p>Structure your IaC projects logically:</p>\\n<pre><code class=\\"code-highlight\\"><span class=\\"code-line\\">infrastructure/\\n</span><span class=\\"code-line\\">\u251C\u2500\u2500 environments/\\n</span><span class=\\"code-line\\">\u2502   \u251C\u2500\u2500 dev/\\n</span><span class=\\"code-line\\">\u2502   \u251C\u2500\u2500 staging/\\n</span><span class=\\"code-line\\">\u2502   \u2514\u2500\u2500 prod/\\n</span><span class=\\"code-line\\">\u251C\u2500\u2500 modules/\\n</span><span class=\\"code-line\\">\u2502   \u251C\u2500\u2500 networking/\\n</span><span class=\\"code-line\\">\u2502   \u251C\u2500\u2500 compute/\\n</span><span class=\\"code-line\\">\u2502   \u2514\u2500\u2500 storage/\\n</span><span class=\\"code-line\\">\u2514\u2500\u2500 shared/\\n</span><span class=\\"code-line\\">    \u251C\u2500\u2500 variables/\\n</span><span class=\\"code-line\\">    \u2514\u2500\u2500 policies/\\n</span></code></pre>\\n<h3>Use Modules and Reusability</h3>\\n<p>Create reusable modules for common infrastructure patterns. This reduces duplication and ensures consistency.</p>\\n<h3>Implement Proper Testing</h3>\\n<p>Test your infrastructure code just like application code:</p>\\n<ul>\\n<li><strong>Syntax validation</strong>: Check for syntax errors</li>\\n<li><strong>Unit tests</strong>: Test individual modules</li>\\n<li><strong>Integration tests</strong>: Verify complete deployments</li>\\n<li><strong>Compliance tests</strong>: Ensure security and policy compliance</li>\\n</ul>\\n<h3>Security Considerations</h3>\\n<ul>\\n<li><strong>Secrets management</strong>: Never store secrets in code</li>\\n<li><strong>Least privilege</strong>: Apply minimal required permissions</li>\\n<li><strong>Network security</strong>: Implement proper network segmentation</li>\\n<li><strong>Encryption</strong>: Encrypt data at rest and in transit</li>\\n</ul>\\n<h3>Monitoring and Observability</h3>\\n<p>Implement comprehensive monitoring for your infrastructure:</p>\\n<ul>\\n<li>Resource utilization</li>\\n<li>Performance metrics</li>\\n<li>Security events</li>\\n<li>Compliance status</li>\\n</ul>\\n<h2>Tools and Technologies</h2>\\n<h3>PowerShell DSC</h3>\\n<p>Excellent for Windows environments and hybrid scenarios:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">Configuration DatabaseServer <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">Import-DscResource</span> <span class=\\"token operator\\">-</span>ModuleName PSDesiredStateConfiguration\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Node <span class=\\"token variable\\">$AllNodes</span><span class=\\"token punctuation\\">.</span>NodeName <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        WindowsFeature SQLEngine <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure = <span class=\\"token string\\">\\"Present\\"</span>\\n</span><span class=\\"code-line\\">            Name = <span class=\\"token string\\">\\"SQL-Engine-Core\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        SqlDatabase AdventureWorks <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure = <span class=\\"token string\\">\\"Present\\"</span>\\n</span><span class=\\"code-line\\">            Name = <span class=\\"token string\\">\\"AdventureWorks\\"</span>\\n</span><span class=\\"code-line\\">            ServerName = <span class=\\"token variable\\">$Node</span><span class=\\"token punctuation\\">.</span>ServerName\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Terraform</h3>\\n<p>Great for multi-cloud environments and complex infrastructure:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"hcl\\"><div class=\\"code-language-label\\">HCL</div><pre class=\\"language-hcl\\" data-processed data-language=\\"hcl\\"><code class=\\"language-hcl code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">resource <span class=\\"token type variable\\">\\"azurerm_resource_group\\"</span></span> <span class=\\"token string\\">\\"main\\"</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">name</span>     <span class=\\"token punctuation\\">=</span> var.resource_group_name\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">location</span> <span class=\\"token punctuation\\">=</span> var.location\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">resource <span class=\\"token type variable\\">\\"azurerm_virtual_network\\"</span></span> <span class=\\"token string\\">\\"main\\"</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">name</span>                <span class=\\"token punctuation\\">=</span> var.vnet_name\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">address_space</span>       <span class=\\"token punctuation\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"10.0.0.0/16\\"</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">location</span>            <span class=\\"token punctuation\\">=</span> azurerm_resource_group.main.location\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">resource_group_name</span> <span class=\\"token punctuation\\">=</span> azurerm_resource_group.main.name\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Azure Resource Manager (ARM) Templates</h3>\\n<p>Native Azure solution with deep integration:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"json\\"><div class=\\"code-language-label\\">JSON</div><pre class=\\"language-json\\" data-processed data-language=\\"json\\"><code class=\\"language-json code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"$schema\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"contentVersion\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"1.0.0.0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"parameters\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"vmName\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"string\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token property\\">\\"metadata\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token property\\">\\"description\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Name of the virtual machine\\"</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>Common Pitfalls to Avoid</h2>\\n<ol>\\n<li><strong>Not testing thoroughly</strong>: Always test in non-production environments first</li>\\n<li><strong>Ignoring state management</strong>: Understand how your tool manages state</li>\\n<li><strong>Poor secret management</strong>: Use proper secret management solutions</li>\\n<li><strong>Lack of documentation</strong>: Document your architecture and decisions</li>\\n<li><strong>Not planning for disaster recovery</strong>: Include backup and recovery procedures</li>\\n</ol>\\n<h2>Getting Started</h2>\\n<ol>\\n<li><strong>Start small</strong>: Begin with a simple project to learn the tools</li>\\n<li><strong>Establish standards</strong>: Define coding standards and conventions</li>\\n<li><strong>Build gradually</strong>: Add complexity as your team gains experience</li>\\n<li><strong>Invest in training</strong>: Ensure your team understands IaC principles</li>\\n<li><strong>Measure success</strong>: Track metrics like deployment frequency and lead time</li>\\n</ol>\\n<h2>Conclusion</h2>\\n<p>Infrastructure as Code is not just about tools\u2014it's a fundamental shift in how we think about infrastructure. By following these best practices, you can build more reliable, scalable, and maintainable infrastructure that supports your business goals.</p>\\n<p>Ready to transform your infrastructure management? Contact Viscalyx to learn how we can help you implement Infrastructure as Code best practices in your organization.</p>"},{"slug":"mermaid-diagrams-comprehensive-guide","title":"Complete Guide to Mermaid Diagrams: Every Type Explained with Examples","date":"2025-04-29","author":"Viscalyx Team","excerpt":"A comprehensive guide showcasing all Mermaid diagram types with practical examples, from flowcharts to Kanban boards","image":"https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=1200&h=600&fit=crop&crop=center","imageAlt":"Complete Guide to Mermaid Diagrams: Every Type Explained with Examples","tags":["Mermaid","Diagrams","Documentation","Visual Guide","Technical Writing"],"readTime":"15 min read","category":"Template","content":"<p>Mermaid is a powerful diagramming and charting tool that uses simple text definitions to create complex visual diagrams. This comprehensive guide covers every type of Mermaid diagram with practical examples that you can use in your own projects.</p>\\n<h2>Introduction</h2>\\n<p>Mermaid diagrams are perfect for technical documentation, project planning, system architecture, and process visualization. They render directly in markdown, making them ideal for documentation that lives alongside your code.</p>\\n<p>This guide demonstrates all available Mermaid diagram types with real-world examples, syntax explanations, and best practices.</p>\\n<p>There are more examples in the <a href=\\"https://mermaid.js.org/syntax/examples.html\\">Documentation</a>.</p>\\n<h2>1. Flowcharts</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/flowchart.html\\">Documentation</a></p>\\n<p>Flowcharts are the most common type of diagram, perfect for showing processes, decision trees, and workflows.</p>\\n<h3>Basic Flowchart</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">flowchart</span> TD\\n</span><span class=\\"code-line\\">    A<span class=\\"token text string\\">[Start]</span> <span class=\\"token arrow operator\\">--&gt;</span> B<span class=\\"token text string\\">{Is it?}</span>\\n</span><span class=\\"code-line\\">    B <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|Yes|</span> C<span class=\\"token text string\\">[OK]</span>\\n</span><span class=\\"code-line\\">    C <span class=\\"token arrow operator\\">--&gt;</span> D<span class=\\"token text string\\">[Rethink]</span>\\n</span><span class=\\"code-line\\">    D <span class=\\"token arrow operator\\">--&gt;</span> B\\n</span><span class=\\"code-line\\">    B <span class=\\"token arrow operator\\">----&gt;</span><span class=\\"token label property\\">|No|</span> E<span class=\\"token text string\\">[End]</span>\\n</span></code></pre></div>\\n<h3>Advanced Flowchart with Styling</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">flowchart</span> LR\\n</span><span class=\\"code-line\\">    A<span class=\\"token text string\\">[Christmas]</span> <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|Get money|</span> B<span class=\\"token text string\\">(Go shopping)</span>\\n</span><span class=\\"code-line\\">    B <span class=\\"token arrow operator\\">--&gt;</span> C<span class=\\"token text string\\">{Let me think}</span>\\n</span><span class=\\"code-line\\">    C <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|One|</span> D<span class=\\"token text string\\">[Laptop]</span>\\n</span><span class=\\"code-line\\">    C <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|Two|</span> E<span class=\\"token text string\\">[iPhone]</span>\\n</span><span class=\\"code-line\\">    C <span class=\\"token arrow operator\\">--&gt;</span><span class=\\"token label property\\">|Three|</span> F<span class=\\"token text string\\">[fa:fa-car Car]</span>\\n</span><span class=\\"code-line\\">    D <span class=\\"token arrow operator\\">--&gt;</span> G<span class=\\"token text string\\">[Result 1]</span>\\n</span><span class=\\"code-line\\">    E <span class=\\"token arrow operator\\">--&gt;</span> G\\n</span><span class=\\"code-line\\">    F <span class=\\"token arrow operator\\">--&gt;</span> G\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> startEnd <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#e1f5fe</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> process <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#f3e5f5</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">classDef</span> decision <span class=\\"token style\\"><span class=\\"token property\\">fill</span><span class=\\"token operator\\">:</span>#fff3e0</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> A,G startEnd\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> B,D,E,F process\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> C decision\\n</span></code></pre></div>\\n<h3>Subgraphs in Flowcharts</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">flowchart</span> TB\\n</span><span class=\\"code-line\\">    c1<span class=\\"token arrow operator\\">--&gt;</span>a2\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">subgraph</span> one\\n</span><span class=\\"code-line\\">        a1<span class=\\"token arrow operator\\">--&gt;</span>a2\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">subgraph</span> two\\n</span><span class=\\"code-line\\">        b1<span class=\\"token arrow operator\\">--&gt;</span>b2\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">subgraph</span> three\\n</span><span class=\\"code-line\\">        c1<span class=\\"token arrow operator\\">--&gt;</span>c2\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">    one <span class=\\"token arrow operator\\">--&gt;</span> two\\n</span><span class=\\"code-line\\">    three <span class=\\"token arrow operator\\">--&gt;</span> two\\n</span><span class=\\"code-line\\">    two <span class=\\"token arrow operator\\">--&gt;</span> c2\\n</span></code></pre></div>\\n<h2>2. Sequence Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/sequenceDiagram.html\\">Documentation</a></p>\\n<p>Sequence diagrams show interactions between different actors over time, perfect for API documentation and system interactions.</p>\\n<h3>Basic Sequence Diagram</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">sequenceDiagram</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">participant</span> Alice\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">participant</span> Bob\\n</span><span class=\\"code-line\\">    Alice<span class=\\"token arrow operator\\">-&gt;&gt;</span>John<span class=\\"token operator\\">:</span> Hello John, how are you?\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">loop</span> Healthcheck\\n</span><span class=\\"code-line\\">        John<span class=\\"token arrow operator\\">-&gt;&gt;</span>John<span class=\\"token operator\\">:</span> Fight against hypochondria\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">Note right of</span> John<span class=\\"token operator\\">:</span> Rational thoughts &lt;br/&gt;prevail!\\n</span><span class=\\"code-line\\">    John<span class=\\"token arrow operator\\">--&gt;&gt;</span>Alice<span class=\\"token operator\\">:</span> Great!\\n</span><span class=\\"code-line\\">    John<span class=\\"token arrow operator\\">-&gt;&gt;</span>Bob<span class=\\"token operator\\">:</span> How about you?\\n</span><span class=\\"code-line\\">    Bob<span class=\\"token arrow operator\\">--&gt;&gt;</span>John<span class=\\"token operator\\">:</span> Jolly good!\\n</span></code></pre></div>\\n<h3>Advanced Sequence with Authentication Flow</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">sequenceDiagram</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">autonumber</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">participant</span> U as User\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">participant</span> C as Client App\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">participant</span> A as Auth Server\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">participant</span> R as Resource Server\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    U<span class=\\"token arrow operator\\">-&gt;&gt;</span>C<span class=\\"token operator\\">:</span> Login Request\\n</span><span class=\\"code-line\\">    C<span class=\\"token arrow operator\\">-&gt;&gt;</span>A<span class=\\"token operator\\">:</span> Redirect to Auth\\n</span><span class=\\"code-line\\">    A<span class=\\"token arrow operator\\">-&gt;&gt;</span>U<span class=\\"token operator\\">:</span> Login Form\\n</span><span class=\\"code-line\\">    U<span class=\\"token arrow operator\\">-&gt;&gt;</span>A<span class=\\"token operator\\">:</span> Credentials\\n</span><span class=\\"code-line\\">    A<span class=\\"token arrow operator\\">-&gt;&gt;</span>A<span class=\\"token operator\\">:</span> Validate User\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">alt</span> Successful Authentication\\n</span><span class=\\"code-line\\">        A<span class=\\"token arrow operator\\">-&gt;&gt;</span>C<span class=\\"token operator\\">:</span> Authorization Code\\n</span><span class=\\"code-line\\">        C<span class=\\"token arrow operator\\">-&gt;&gt;</span>A<span class=\\"token operator\\">:</span> Exchange Code for Token\\n</span><span class=\\"code-line\\">        A<span class=\\"token arrow operator\\">-&gt;&gt;</span>C<span class=\\"token operator\\">:</span> Access Token\\n</span><span class=\\"code-line\\">        C<span class=\\"token arrow operator\\">-&gt;&gt;</span>R<span class=\\"token operator\\">:</span> API Request + Token\\n</span><span class=\\"code-line\\">        R<span class=\\"token arrow operator\\">-&gt;&gt;</span>C<span class=\\"token operator\\">:</span> Protected Resource\\n</span><span class=\\"code-line\\">        C<span class=\\"token arrow operator\\">-&gt;&gt;</span>U<span class=\\"token operator\\">:</span> Display Data\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">else</span> Authentication Failed\\n</span><span class=\\"code-line\\">        A<span class=\\"token arrow operator\\">-&gt;&gt;</span>U<span class=\\"token operator\\">:</span> Error Message\\n</span><span class=\\"code-line\\">        U<span class=\\"token arrow operator\\">-&gt;&gt;</span>C<span class=\\"token operator\\">:</span> Retry or Cancel\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">end</span>\\n</span></code></pre></div>\\n<h3>Sequence with Activation Boxes</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">sequenceDiagram</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">participant</span> A as Alice\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">participant</span> J as John\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    A<span class=\\"token arrow operator\\">-&gt;&gt;</span>+J<span class=\\"token operator\\">:</span> Hello John, how are you?\\n</span><span class=\\"code-line\\">    A<span class=\\"token arrow operator\\">-&gt;&gt;</span>+J<span class=\\"token operator\\">:</span> John, can you hear me?\\n</span><span class=\\"code-line\\">    J<span class=\\"token arrow operator\\">--&gt;&gt;</span>-A<span class=\\"token operator\\">:</span> Hi Alice, I can hear you!\\n</span><span class=\\"code-line\\">    J<span class=\\"token arrow operator\\">--&gt;&gt;</span>-A<span class=\\"token operator\\">:</span> I feel great!\\n</span></code></pre></div>\\n<h2>3. Class Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/classDiagram.html\\">Documentation</a></p>\\n<p>Class diagrams show the structure of systems by displaying classes, their attributes, methods, and relationships.</p>\\n<h3>Basic Class Diagram</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">classDiagram</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> Animal <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +String name\\n</span><span class=\\"code-line\\">        +int age\\n</span><span class=\\"code-line\\">        +makeSound<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        +move<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> Dog <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +String breed\\n</span><span class=\\"code-line\\">        +bark<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        +wagTail<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> Cat <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +String color\\n</span><span class=\\"code-line\\">        +meow<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        +purr<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Animal <span class=\\"token arrow operator\\">&lt;|--</span> Dog\\n</span><span class=\\"code-line\\">    Animal <span class=\\"token arrow operator\\">&lt;|--</span> Cat\\n</span></code></pre></div>\\n<h3>Advanced Class Diagram with Relationships</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">classDiagram</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> BankAccount <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +String owner\\n</span><span class=\\"code-line\\">        +Bigdecimal balance\\n</span><span class=\\"code-line\\">        +deposit<span class=\\"token text string\\">(amount)</span>\\n</span><span class=\\"code-line\\">        +withdrawal<span class=\\"token text string\\">(amount)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> CheckingAccount <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +Bigdecimal overdraftLimit\\n</span><span class=\\"code-line\\">        +overdraft<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> SavingsAccount <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +Float interestRate\\n</span><span class=\\"code-line\\">        +calculateInterest<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> CreditCard <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +String cardNumber\\n</span><span class=\\"code-line\\">        +String expirationDate\\n</span><span class=\\"code-line\\">        +Float creditLimit\\n</span><span class=\\"code-line\\">        +charge<span class=\\"token text string\\">(amount)</span>\\n</span><span class=\\"code-line\\">        +makePayment<span class=\\"token text string\\">(amount)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> Customer <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +String name\\n</span><span class=\\"code-line\\">        +String address\\n</span><span class=\\"code-line\\">        +String phone\\n</span><span class=\\"code-line\\">        +String email\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    BankAccount <span class=\\"token arrow operator\\">&lt;|--</span> CheckingAccount\\n</span><span class=\\"code-line\\">    BankAccount <span class=\\"token arrow operator\\">&lt;|--</span> SavingsAccount\\n</span><span class=\\"code-line\\">    Customer <span class=\\"token string\\">\\"1\\"</span> <span class=\\"token arrow operator\\">--o</span> <span class=\\"token string\\">\\"*\\"</span> BankAccount <span class=\\"token operator\\">:</span> owns\\n</span><span class=\\"code-line\\">    Customer <span class=\\"token string\\">\\"1\\"</span> <span class=\\"token arrow operator\\">--o</span> <span class=\\"token string\\">\\"*\\"</span> CreditCard <span class=\\"token operator\\">:</span> has\\n</span></code></pre></div>\\n<h3>Class Diagram with Annotations</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">classDiagram</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> Shape <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token annotation important\\">&lt;&lt;interface&gt;&gt;</span>\\n</span><span class=\\"code-line\\">        +draw<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        +calculateArea<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> Circle <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +Float radius\\n</span><span class=\\"code-line\\">        +draw<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        +calculateArea<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> Rectangle <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +Float width\\n</span><span class=\\"code-line\\">        +Float height\\n</span><span class=\\"code-line\\">        +draw<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        +calculateArea<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">class</span> Square <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        +Float side\\n</span><span class=\\"code-line\\">        +draw<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        +calculateArea<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Shape <span class=\\"token arrow operator\\">&lt;|..</span> Circle\\n</span><span class=\\"code-line\\">    Shape <span class=\\"token arrow operator\\">&lt;|..</span> Rectangle\\n</span><span class=\\"code-line\\">    Rectangle <span class=\\"token arrow operator\\">&lt;|--</span> Square\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    note for Circle <span class=\\"token string\\">\\"Area = \u03C0 \xD7 r\xB2\\"</span>\\n</span><span class=\\"code-line\\">    note for Rectangle <span class=\\"token string\\">\\"Area = width \xD7 height\\"</span>\\n</span></code></pre></div>\\n<h2>4. State Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/stateDiagram.html\\">Documentation</a></p>\\n<p>State diagrams show the different states of an object and transitions between them.</p>\\n<h3>Basic State Diagram</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">stateDiagram-v2</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token text string\\">[*]</span> <span class=\\"token arrow operator\\">--&gt;</span> Still\\n</span><span class=\\"code-line\\">    Still <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span>\\n</span><span class=\\"code-line\\">    Still <span class=\\"token arrow operator\\">--&gt;</span> Moving\\n</span><span class=\\"code-line\\">    Moving <span class=\\"token arrow operator\\">--&gt;</span> Still\\n</span><span class=\\"code-line\\">    Moving <span class=\\"token arrow operator\\">--&gt;</span> Crash\\n</span><span class=\\"code-line\\">    Crash <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span>\\n</span></code></pre></div>\\n<h3>Advanced State Diagram with Conditions</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">stateDiagram-v2</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token text string\\">[*]</span> <span class=\\"token arrow operator\\">--&gt;</span> Idle\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Idle <span class=\\"token arrow operator\\">--&gt;</span> Processing <span class=\\"token operator\\">:</span> start<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    Processing <span class=\\"token arrow operator\\">--&gt;</span> Success <span class=\\"token operator\\">:</span> complete<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    Processing <span class=\\"token arrow operator\\">--&gt;</span> Error <span class=\\"token operator\\">:</span> fail<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    Processing <span class=\\"token arrow operator\\">--&gt;</span> Cancelled <span class=\\"token operator\\">:</span> cancel<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Success <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span>\\n</span><span class=\\"code-line\\">    Error <span class=\\"token arrow operator\\">--&gt;</span> Retry <span class=\\"token operator\\">:</span> retry<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    Error <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span> <span class=\\"token operator\\">:</span> abort<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    Cancelled <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span>\\n</span><span class=\\"code-line\\">    Retry <span class=\\"token arrow operator\\">--&gt;</span> Processing <span class=\\"token operator\\">:</span> resume<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">state</span> Processing <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token text string\\">[*]</span> <span class=\\"token arrow operator\\">--&gt;</span> Validating\\n</span><span class=\\"code-line\\">        Validating <span class=\\"token arrow operator\\">--&gt;</span> Executing <span class=\\"token operator\\">:</span> valid\\n</span><span class=\\"code-line\\">        Validating <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span> <span class=\\"token operator\\">:</span> invalid\\n</span><span class=\\"code-line\\">        Executing <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span> <span class=\\"token operator\\">:</span> done\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>State Diagram with Choice and Fork</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">stateDiagram-v2</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token text string\\">[*]</span> <span class=\\"token arrow operator\\">--&gt;</span> First\\n</span><span class=\\"code-line\\">    First <span class=\\"token arrow operator\\">--&gt;</span> Second\\n</span><span class=\\"code-line\\">    Second <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">state</span> First <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token text string\\">[*]</span> <span class=\\"token arrow operator\\">--&gt;</span> fir\\n</span><span class=\\"code-line\\">        fir <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">state</span> Second <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token text string\\">[*]</span> <span class=\\"token arrow operator\\">--&gt;</span> sec\\n</span><span class=\\"code-line\\">        sec <span class=\\"token arrow operator\\">--&gt;</span> <span class=\\"token text string\\">[*]</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">state</span> choice_state <span class=\\"token annotation important\\">&lt;&lt;choice&gt;&gt;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token text string\\">[*]</span> <span class=\\"token arrow operator\\">--&gt;</span> choice_state\\n</span><span class=\\"code-line\\">    choice_state <span class=\\"token arrow operator\\">--&gt;</span> First<span class=\\"token operator\\">:</span> if n &lt; 0\\n</span><span class=\\"code-line\\">    choice_state <span class=\\"token arrow operator\\">--&gt;</span> Second<span class=\\"token operator\\">:</span> if n &gt;= 0\\n</span></code></pre></div>\\n<h2>5. Entity Relationship Diagrams (ERD)</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/entityRelationshipDiagram.html\\">Documentation</a></p>\\n<p>ERDs show the relationships between entities in a database.</p>\\n<h3>Basic ERD</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">erDiagram</span>\\n</span><span class=\\"code-line\\">    CUSTOMER <span class=\\"token arrow operator\\">||--o{</span> ORDER <span class=\\"token operator\\">:</span> places\\n</span><span class=\\"code-line\\">    ORDER <span class=\\"token arrow operator\\">||--|{</span> LINE-ITEM <span class=\\"token operator\\">:</span> contains\\n</span><span class=\\"code-line\\">    CUSTOMER <span class=\\"token arrow operator\\">}|..|{</span> DELIVERY-ADDRESS <span class=\\"token operator\\">:</span> uses\\n</span></code></pre></div>\\n<h3>Advanced ERD with Attributes</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">erDiagram</span>\\n</span><span class=\\"code-line\\">    CUSTOMER <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        string customer_id PK\\n</span><span class=\\"code-line\\">        string first_name\\n</span><span class=\\"code-line\\">        string last_name\\n</span><span class=\\"code-line\\">        string email UK\\n</span><span class=\\"code-line\\">        date date_of_birth\\n</span><span class=\\"code-line\\">        string phone_number\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    ORDER <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        string order_id PK\\n</span><span class=\\"code-line\\">        string customer_id FK\\n</span><span class=\\"code-line\\">        date order_date\\n</span><span class=\\"code-line\\">        decimal total_amount\\n</span><span class=\\"code-line\\">        string status\\n</span><span class=\\"code-line\\">        string shipping_address\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    PRODUCT <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        string product_id PK\\n</span><span class=\\"code-line\\">        string name\\n</span><span class=\\"code-line\\">        string description\\n</span><span class=\\"code-line\\">        decimal price\\n</span><span class=\\"code-line\\">        int stock_quantity\\n</span><span class=\\"code-line\\">        string category\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    ORDER_ITEM <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        string order_id PK, FK\\n</span><span class=\\"code-line\\">        string product_id PK, FK\\n</span><span class=\\"code-line\\">        int quantity\\n</span><span class=\\"code-line\\">        decimal unit_price\\n</span><span class=\\"code-line\\">        decimal subtotal\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    CATEGORY <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        string category_id PK\\n</span><span class=\\"code-line\\">        string name\\n</span><span class=\\"code-line\\">        string description\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    CUSTOMER <span class=\\"token arrow operator\\">||--o{</span> ORDER <span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"places\\"</span>\\n</span><span class=\\"code-line\\">    ORDER <span class=\\"token arrow operator\\">||--o{</span> ORDER_ITEM <span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"contains\\"</span>\\n</span><span class=\\"code-line\\">    PRODUCT <span class=\\"token arrow operator\\">||--o{</span> ORDER_ITEM <span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"included in\\"</span>\\n</span><span class=\\"code-line\\">    CATEGORY <span class=\\"token arrow operator\\">||--o{</span> PRODUCT <span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"categorizes\\"</span>\\n</span></code></pre></div>\\n<h2>6. User Journey Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/userJourney.html\\">Documentation</a></p>\\n<p>User journey diagrams show the path users take through a process or system.</p>\\n<h3>Basic User Journey</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">journey</span>\\n</span><span class=\\"code-line\\">    title My working day\\n</span><span class=\\"code-line\\">    section Go to work\\n</span><span class=\\"code-line\\">      Make tea<span class=\\"token operator\\">:</span> 5<span class=\\"token operator\\">:</span> Me\\n</span><span class=\\"code-line\\">      Go upstairs<span class=\\"token operator\\">:</span> 3<span class=\\"token operator\\">:</span> Me\\n</span><span class=\\"code-line\\">      Do work<span class=\\"token operator\\">:</span> 1<span class=\\"token operator\\">:</span> Me, Cat\\n</span><span class=\\"code-line\\">    section Go home\\n</span><span class=\\"code-line\\">      Go downstairs<span class=\\"token operator\\">:</span> 5<span class=\\"token operator\\">:</span> Me\\n</span><span class=\\"code-line\\">      Sit down<span class=\\"token operator\\">:</span> 5<span class=\\"token operator\\">:</span> Me\\n</span></code></pre></div>\\n<h3>Advanced User Journey - E-commerce Experience</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">journey</span>\\n</span><span class=\\"code-line\\">    title Online Shopping Experience\\n</span><span class=\\"code-line\\">    section Discovery\\n</span><span class=\\"code-line\\">      See advertisement<span class=\\"token operator\\">:</span> 3<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Visit website<span class=\\"token operator\\">:</span> 4<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Browse products<span class=\\"token operator\\">:</span> 5<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">    section Evaluation\\n</span><span class=\\"code-line\\">      Compare products<span class=\\"token operator\\">:</span> 4<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Read reviews<span class=\\"token operator\\">:</span> 5<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Check prices<span class=\\"token operator\\">:</span> 3<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">    section Purchase\\n</span><span class=\\"code-line\\">      Add to cart<span class=\\"token operator\\">:</span> 5<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Enter payment info<span class=\\"token operator\\">:</span> 2<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Complete purchase<span class=\\"token operator\\">:</span> 4<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">    section Post-Purchase\\n</span><span class=\\"code-line\\">      Receive confirmation<span class=\\"token operator\\">:</span> 5<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Track shipping<span class=\\"token operator\\">:</span> 4<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Receive product<span class=\\"token operator\\">:</span> 5<span class=\\"token operator\\">:</span> Customer\\n</span><span class=\\"code-line\\">      Leave review<span class=\\"token operator\\">:</span> 3<span class=\\"token operator\\">:</span> Customer\\n</span></code></pre></div>\\n<h2>7. Gantt Charts</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/gantt.html\\">Documentation</a></p>\\n<p>Gantt charts show project timelines and task dependencies.</p>\\n<h3>Basic Gantt Chart</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">gantt</span>\\n</span><span class=\\"code-line\\">    title A Gantt Diagram\\n</span><span class=\\"code-line\\">    dateFormat  YYYY-MM-DD\\n</span><span class=\\"code-line\\">    section Section\\n</span><span class=\\"code-line\\">    A task           <span class=\\"token operator\\">:</span>a1, 2014-01-01, 30d\\n</span><span class=\\"code-line\\">    Another task     <span class=\\"token operator\\">:</span>after a1  , 20d\\n</span><span class=\\"code-line\\">    section Another\\n</span><span class=\\"code-line\\">    Task in sec      <span class=\\"token operator\\">:</span>2014-01-12  , 12d\\n</span><span class=\\"code-line\\">    another task      <span class=\\"token operator\\">:</span> 24d\\n</span></code></pre></div>\\n<h3>Advanced Project Gantt Chart</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">gantt</span>\\n</span><span class=\\"code-line\\">    title Software Development Project\\n</span><span class=\\"code-line\\">    dateFormat  YYYY-MM-DD\\n</span><span class=\\"code-line\\">    axisFormat %m/%d\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Planning\\n</span><span class=\\"code-line\\">    Requirements Gathering    <span class=\\"token operator\\">:</span>done, req, 2024-01-01, 2024-01-15\\n</span><span class=\\"code-line\\">    System Design           <span class=\\"token operator\\">:</span>done, design, after req, 10d\\n</span><span class=\\"code-line\\">    Technical Specifications <span class=\\"token operator\\">:</span>done, tech-spec, after design, 5d\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Development\\n</span><span class=\\"code-line\\">    Frontend Development    <span class=\\"token operator\\">:</span>active, frontend, 2024-02-01, 45d\\n</span><span class=\\"code-line\\">    Backend Development     <span class=\\"token operator\\">:</span>backend, 2024-02-01, 40d\\n</span><span class=\\"code-line\\">    Database Setup         <span class=\\"token operator\\">:</span>db, 2024-02-01, 15d\\n</span><span class=\\"code-line\\">    API Development        <span class=\\"token operator\\">:</span>api, after db, 25d\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Testing\\n</span><span class=\\"code-line\\">    Unit Testing           <span class=\\"token operator\\">:</span>testing, after backend, 15d\\n</span><span class=\\"code-line\\">    Integration Testing    <span class=\\"token operator\\">:</span>int-test, after testing, 10d\\n</span><span class=\\"code-line\\">    User Acceptance Testing <span class=\\"token operator\\">:</span>uat, after int-test, 10d\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Deployment\\n</span><span class=\\"code-line\\">    Production Setup       <span class=\\"token operator\\">:</span>prod-setup, after uat, 5d\\n</span><span class=\\"code-line\\">    Deployment            <span class=\\"token operator\\">:</span>deploy, after prod-setup, 3d\\n</span><span class=\\"code-line\\">    Post-deployment Testing <span class=\\"token operator\\">:</span>post-test, after deploy, 7d\\n</span></code></pre></div>\\n<h2>8. Pie Charts</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/pie.html\\">Documentation</a></p>\\n<p>Pie charts show proportional data and percentages.</p>\\n<h3>Basic Pie Chart</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">pie</span> title Pets adopted by volunteers\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Dogs\\"</span> <span class=\\"token operator\\">:</span> 386\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Cats\\"</span> <span class=\\"token operator\\">:</span> 85\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Rats\\"</span> <span class=\\"token operator\\">:</span> 15\\n</span></code></pre></div>\\n<h3>Advanced Pie Chart - Market Share</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">pie</span> title Browser Market Share 2024\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Chrome\\"</span> <span class=\\"token operator\\">:</span> 65.1\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Safari\\"</span> <span class=\\"token operator\\">:</span> 18.8\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Edge\\"</span> <span class=\\"token operator\\">:</span> 5.6\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Firefox\\"</span> <span class=\\"token operator\\">:</span> 4.1\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Opera\\"</span> <span class=\\"token operator\\">:</span> 2.8\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Others\\"</span> <span class=\\"token operator\\">:</span> 3.6\\n</span></code></pre></div>\\n<h2>9. Quadrant Charts</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/quadrantChart.html\\">Documentation</a></p>\\n<p>Quadrant charts help with decision-making by plotting items on two axes.</p>\\n<h3>Basic Quadrant Chart</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">quadrantChart\\n</span><span class=\\"code-line\\">    title Reach and influence\\n</span><span class=\\"code-line\\">    <span class=\\"token arrow operator\\">x-</span>axis Low Reach <span class=\\"token arrow operator\\">--&gt;</span> High Reach\\n</span><span class=\\"code-line\\">    y-axis Low Influence <span class=\\"token arrow operator\\">--&gt;</span> High Influence\\n</span><span class=\\"code-line\\">    quadrant-1 We should expand\\n</span><span class=\\"code-line\\">    quadrant-2 Need to promote\\n</span><span class=\\"code-line\\">    quadrant-3 Re-evaluate\\n</span><span class=\\"code-line\\">    quadrant-4 May be improved\\n</span><span class=\\"code-line\\">    Campaign A<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.3, 0.6]</span>\\n</span><span class=\\"code-line\\">    Campaign B<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.45, 0.23]</span>\\n</span><span class=\\"code-line\\">    Campaign C<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.57, 0.69]</span>\\n</span><span class=\\"code-line\\">    Campaign D<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.78, 0.34]</span>\\n</span><span class=\\"code-line\\">    Campaign E<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.40, 0.34]</span>\\n</span></code></pre></div>\\n<h3>Strategic Planning Quadrant</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">quadrantChart\\n</span><span class=\\"code-line\\">    title Product Portfolio Analysis\\n</span><span class=\\"code-line\\">    <span class=\\"token arrow operator\\">x-</span>axis Low Market Growth <span class=\\"token arrow operator\\">--&gt;</span> High Market Growth\\n</span><span class=\\"code-line\\">    y-axis Low Market Share <span class=\\"token arrow operator\\">--&gt;</span> High Market Share\\n</span><span class=\\"code-line\\">    quadrant-1 Stars\\n</span><span class=\\"code-line\\">    quadrant-2 Question Marks\\n</span><span class=\\"code-line\\">    quadrant-3 Dogs\\n</span><span class=\\"code-line\\">    quadrant-4 Cash Cows\\n</span><span class=\\"code-line\\">    Product A<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.8, 0.7]</span>\\n</span><span class=\\"code-line\\">    Product B<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.2, 0.8]</span>\\n</span><span class=\\"code-line\\">    Product C<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.3, 0.2]</span>\\n</span><span class=\\"code-line\\">    Product D<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.7, 0.3]</span>\\n</span><span class=\\"code-line\\">    Product E<span class=\\"token operator\\">:</span> <span class=\\"token text string\\">[0.5, 0.6]</span>\\n</span></code></pre></div>\\n<h2>10. Requirement Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/requirementDiagram.html\\">Documentation</a></p>\\n<p>Requirement diagrams show requirements and their relationships.</p>\\n<h3>Basic Requirement Diagram</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">requirementDiagram</span>\\n</span><span class=\\"code-line\\">requirement test_req <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"1\\"</span>\\n</span><span class=\\"code-line\\">  text<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"the test text.\\"</span>\\n</span><span class=\\"code-line\\">  risk<span class=\\"token operator\\">:</span> high\\n</span><span class=\\"code-line\\">  verifymethod<span class=\\"token operator\\">:</span> test\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">element test_entity <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  type<span class=\\"token operator\\">:</span> simulation\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">test_entity - satisfies <span class=\\"token arrow operator\\">-&gt;</span> test_req\\n</span></code></pre></div>\\n<h3>Advanced System Requirements</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">requirementDiagram</span>\\n</span><span class=\\"code-line\\">requirement user_authentication <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"REQ-001\\"</span>\\n</span><span class=\\"code-line\\">  text<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"System shall authenticate users\\"</span>\\n</span><span class=\\"code-line\\">  risk<span class=\\"token operator\\">:</span> high\\n</span><span class=\\"code-line\\">  verifymethod<span class=\\"token operator\\">:</span> test\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">requirement password_policy <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"REQ-002\\"</span>\\n</span><span class=\\"code-line\\">  text<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Passwords must be at least 8 characters\\"</span>\\n</span><span class=\\"code-line\\">  risk<span class=\\"token operator\\">:</span> medium\\n</span><span class=\\"code-line\\">  verifymethod<span class=\\"token operator\\">:</span> inspection\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">requirement session_timeout <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"REQ-003\\"</span>\\n</span><span class=\\"code-line\\">  text<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Sessions timeout after 30 minutes\\"</span>\\n</span><span class=\\"code-line\\">  risk<span class=\\"token operator\\">:</span> medium\\n</span><span class=\\"code-line\\">  verifymethod<span class=\\"token operator\\">:</span> test\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">element authentication_service <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  type<span class=\\"token operator\\">:</span> service\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">element password_validator <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  type<span class=\\"token operator\\">:</span> component\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">element session_manager <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  type<span class=\\"token operator\\">:</span> component\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">authentication_service - satisfies <span class=\\"token arrow operator\\">-&gt;</span> user_authentication\\n</span><span class=\\"code-line\\">password_validator - satisfies <span class=\\"token arrow operator\\">-&gt;</span> password_policy\\n</span><span class=\\"code-line\\">session_manager - satisfies <span class=\\"token arrow operator\\">-&gt;</span> session_timeout\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">user_authentication - derives <span class=\\"token arrow operator\\">-&gt;</span> password_policy\\n</span><span class=\\"code-line\\">user_authentication - derives <span class=\\"token arrow operator\\">-&gt;</span> session_timeout\\n</span></code></pre></div>\\n<h2>11. Gitgraph Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/gitgraph.html\\">Documentation</a></p>\\n<p>Gitgraph diagrams show Git branching and merging workflows.</p>\\n<h3>Basic Git Flow</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">gitGraph</span>\\n</span><span class=\\"code-line\\">    commit\\n</span><span class=\\"code-line\\">    commit\\n</span><span class=\\"code-line\\">    branch develop\\n</span><span class=\\"code-line\\">    checkout develop\\n</span><span class=\\"code-line\\">    commit\\n</span><span class=\\"code-line\\">    commit\\n</span><span class=\\"code-line\\">    checkout main\\n</span><span class=\\"code-line\\">    merge develop\\n</span><span class=\\"code-line\\">    commit\\n</span><span class=\\"code-line\\">    commit\\n</span></code></pre></div>\\n<h3>Advanced Git Workflow</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">gitGraph</span>\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Initial commit\\"</span>\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Add basic structure\\"</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    branch develop\\n</span><span class=\\"code-line\\">    checkout develop\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Setup development\\"</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    branch feature/user-auth\\n</span><span class=\\"code-line\\">    checkout feature/user-auth\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Add login form\\"</span>\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Implement authentication\\"</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    checkout develop\\n</span><span class=\\"code-line\\">    merge feature/user-auth\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    branch feature/dashboard\\n</span><span class=\\"code-line\\">    checkout feature/dashboard\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Create dashboard layout\\"</span>\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Add widgets\\"</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    checkout develop\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Fix bug in auth\\"</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    checkout feature/dashboard\\n</span><span class=\\"code-line\\">    merge develop\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Update dashboard\\"</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    checkout develop\\n</span><span class=\\"code-line\\">    merge feature/dashboard\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    checkout main\\n</span><span class=\\"code-line\\">    merge develop\\n</span><span class=\\"code-line\\">    commit id<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Release v1.0\\"</span>\\n</span></code></pre></div>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\"><span class=\\"token keyword\\">gitGraph</span>\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  branch hotfix\\n</span><span class=\\"code-line\\">  checkout hotfix\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  branch develop\\n</span><span class=\\"code-line\\">  checkout develop\\n</span><span class=\\"code-line\\">  commit id<span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"ash\\"</span> tag<span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"abc\\"</span>\\n</span><span class=\\"code-line\\">  branch featureB\\n</span><span class=\\"code-line\\">  checkout featureB\\n</span><span class=\\"code-line\\">  commit type<span class=\\"token operator\\">:</span>HIGHLIGHT\\n</span><span class=\\"code-line\\">  checkout main\\n</span><span class=\\"code-line\\">  checkout hotfix\\n</span><span class=\\"code-line\\">  commit type<span class=\\"token operator\\">:</span>NORMAL\\n</span><span class=\\"code-line\\">  checkout develop\\n</span><span class=\\"code-line\\">  commit type<span class=\\"token operator\\">:</span>REVERSE\\n</span><span class=\\"code-line\\">  checkout featureB\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  checkout main\\n</span><span class=\\"code-line\\">  merge hotfix\\n</span><span class=\\"code-line\\">  checkout featureB\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  checkout develop\\n</span><span class=\\"code-line\\">  branch featureA\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  checkout develop\\n</span><span class=\\"code-line\\">  merge hotfix\\n</span><span class=\\"code-line\\">  checkout featureA\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  checkout featureB\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  checkout develop\\n</span><span class=\\"code-line\\">  merge featureA\\n</span><span class=\\"code-line\\">  branch release\\n</span><span class=\\"code-line\\">  checkout release\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  checkout main\\n</span><span class=\\"code-line\\">  commit\\n</span><span class=\\"code-line\\">  checkout release\\n</span><span class=\\"code-line\\">  merge main\\n</span><span class=\\"code-line\\">  checkout develop\\n</span><span class=\\"code-line\\">  merge release\\n</span></code></pre></div>\\n<h2>12. C4 Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/c4.html\\">Documentation</a></p>\\n<p>C4 diagrams show software architecture at different levels of abstraction.</p>\\n<h3>C4 Context Diagram</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">C4Context\\n</span><span class=\\"code-line\\">    title System Context diagram for Internet Banking System\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Person<span class=\\"token text string\\">(customerA, \\"Banking Customer A\\", \\"A customer of the bank, with personal bank accounts.\\")</span>\\n</span><span class=\\"code-line\\">    Person<span class=\\"token text string\\">(customerB, \\"Banking Customer B\\")</span>\\n</span><span class=\\"code-line\\">    Person_Ext<span class=\\"token text string\\">(customerC, \\"Banking Customer C\\", \\"desc\\")</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Person<span class=\\"token text string\\">(customerD, \\"Banking Customer D\\", \\"A customer of the bank, &lt;br/&gt; with personal bank accounts.\\")</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    System<span class=\\"token text string\\">(SystemAA, \\"Internet Banking System\\", \\"Allows customers to view information about their bank accounts, and make payments.\\")</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    System_Ext<span class=\\"token text string\\">(SystemE, \\"Mainframe Banking System\\", \\"Stores all of the core banking information about customers, accounts, transactions, etc.\\")</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    System_Ext<span class=\\"token text string\\">(SystemC, \\"E-mail system\\", \\"The internal Microsoft Exchange e-mail system.\\")</span>\\n</span><span class=\\"code-line\\">    System_Ext<span class=\\"token text string\\">(SystemD, \\"ATM\\", \\"Allows customers to withdraw cash.\\")</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Rel<span class=\\"token text string\\">(customerA, SystemAA, \\"Uses\\")</span>\\n</span><span class=\\"code-line\\">    Rel<span class=\\"token text string\\">(SystemAA, SystemE, \\"Uses\\")</span>\\n</span><span class=\\"code-line\\">    Rel<span class=\\"token text string\\">(SystemAA, SystemC, \\"Sends e-mails\\", \\"SMTP\\")</span>\\n</span><span class=\\"code-line\\">    Rel<span class=\\"token text string\\">(customerC, SystemD, \\"Withdraws cash\\", \\"ATM\\")</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    UpdateElementStyle<span class=\\"token text string\\">(customerA, $fontColor=\\"red\\", $bgColor=\\"grey\\", $borderColor=\\"red\\")</span>\\n</span><span class=\\"code-line\\">    UpdateRelStyle<span class=\\"token text string\\">(customerA, SystemAA, $textColor=\\"blue\\", $lineColor=\\"blue\\", $offsetX=\\"5\\")</span>\\n</span><span class=\\"code-line\\">    UpdateRelStyle<span class=\\"token text string\\">(SystemAA, SystemE, $textColor=\\"blue\\", $lineColor=\\"blue\\", $offsetY=\\"-10\\")</span>\\n</span><span class=\\"code-line\\">    UpdateRelStyle<span class=\\"token text string\\">(SystemAA, SystemC, $textColor=\\"blue\\", $lineColor=\\"blue\\", $offsetY=\\"-40\\", $offsetX=\\"-50\\")</span>\\n</span><span class=\\"code-line\\">    UpdateRelStyle<span class=\\"token text string\\">(customerC, SystemD, $textColor=\\"red\\", $lineColor=\\"red\\", $offsetX=\\"-50\\", $offsetY=\\"20\\")</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    UpdateLayoutConfig<span class=\\"token text string\\">($c4ShapeInRow=\\"3\\", $c4BoundaryInRow=\\"1\\")</span>\\n</span></code></pre></div>\\n<h2>13. Mind Maps</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/mindmap.html\\">Documentation</a></p>\\n<p>Mind maps show hierarchical information radiating from a central concept.</p>\\n<h3>Basic Mind Map</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">mindmap\\n</span><span class=\\"code-line\\">  root<span class=\\"token text string\\">((mindmap))</span>\\n</span><span class=\\"code-line\\">    Origins\\n</span><span class=\\"code-line\\">      Long history\\n</span><span class=\\"code-line\\">      <span class=\\"token operator\\">:</span><span class=\\"token operator\\">:</span>icon<span class=\\"token text string\\">(fa fa-book)</span>\\n</span><span class=\\"code-line\\">      Popularisation\\n</span><span class=\\"code-line\\">        British popular psychology author Tony Buzan\\n</span><span class=\\"code-line\\">    Research\\n</span><span class=\\"code-line\\">      On effectiveness&lt;br/&gt;and features\\n</span><span class=\\"code-line\\">      On Automatic creation\\n</span><span class=\\"code-line\\">        Uses\\n</span><span class=\\"code-line\\">            Creative techniques\\n</span><span class=\\"code-line\\">            Strategic planning\\n</span><span class=\\"code-line\\">            Argument mapping\\n</span><span class=\\"code-line\\">    Tools\\n</span><span class=\\"code-line\\">      Pen and paper\\n</span><span class=\\"code-line\\">      Mermaid\\n</span></code></pre></div>\\n<h3>Project Planning Mind Map</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">mindmap\\n</span><span class=\\"code-line\\">  root<span class=\\"token text string\\">((Web Application))</span>\\n</span><span class=\\"code-line\\">    Frontend\\n</span><span class=\\"code-line\\">      React\\n</span><span class=\\"code-line\\">        Components\\n</span><span class=\\"code-line\\">        Hooks\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">State</span> Management\\n</span><span class=\\"code-line\\">      Styling\\n</span><span class=\\"code-line\\">        CSS\\n</span><span class=\\"code-line\\">        Tailwind\\n</span><span class=\\"code-line\\">        Responsive Design\\n</span><span class=\\"code-line\\">      Testing\\n</span><span class=\\"code-line\\">        Jest\\n</span><span class=\\"code-line\\">        Testing Library\\n</span><span class=\\"code-line\\">    Backend\\n</span><span class=\\"code-line\\">      Node.js\\n</span><span class=\\"code-line\\">        Express\\n</span><span class=\\"code-line\\">        Middleware\\n</span><span class=\\"code-line\\">        Authentication\\n</span><span class=\\"code-line\\">      Database\\n</span><span class=\\"code-line\\">        PostgreSQL\\n</span><span class=\\"code-line\\">        MongoDB\\n</span><span class=\\"code-line\\">        Redis\\n</span><span class=\\"code-line\\">      API\\n</span><span class=\\"code-line\\">        REST\\n</span><span class=\\"code-line\\">        GraphQL\\n</span><span class=\\"code-line\\">        WebSocket\\n</span><span class=\\"code-line\\">    DevOps\\n</span><span class=\\"code-line\\">      CI/CD\\n</span><span class=\\"code-line\\">        GitHub Actions\\n</span><span class=\\"code-line\\">        Jenkins\\n</span><span class=\\"code-line\\">      Deployment\\n</span><span class=\\"code-line\\">        Docker\\n</span><span class=\\"code-line\\">        Kubernetes\\n</span><span class=\\"code-line\\">        AWS\\n</span><span class=\\"code-line\\">      Monitoring\\n</span><span class=\\"code-line\\">        Logging\\n</span><span class=\\"code-line\\">        Metrics\\n</span><span class=\\"code-line\\">        Alerts\\n</span></code></pre></div>\\n<h2>14. Timeline Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/timeline.html\\">Documentation</a></p>\\n<p>Timeline diagrams show events over time.</p>\\n<h3>Basic Timeline</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">timeline\\n</span><span class=\\"code-line\\">    title History of Social VR\\n</span><span class=\\"code-line\\">    2014 <span class=\\"token operator\\">:</span> Facebook acquires Oculus\\n</span><span class=\\"code-line\\">         <span class=\\"token operator\\">:</span> Samsung Gear VR\\n</span><span class=\\"code-line\\">    2016 <span class=\\"token operator\\">:</span> HTC Vive\\n</span><span class=\\"code-line\\">         <span class=\\"token operator\\">:</span> PlayStation VR\\n</span><span class=\\"code-line\\">         <span class=\\"token operator\\">:</span> Google Daydream\\n</span><span class=\\"code-line\\">    2018 <span class=\\"token operator\\">:</span> Oculus Go\\n</span><span class=\\"code-line\\">         <span class=\\"token operator\\">:</span> Vive Pro\\n</span><span class=\\"code-line\\">    2019 <span class=\\"token operator\\">:</span> Oculus Rift S\\n</span><span class=\\"code-line\\">         <span class=\\"token operator\\">:</span> Quest\\n</span><span class=\\"code-line\\">    2020 <span class=\\"token operator\\">:</span> Quest 2\\n</span></code></pre></div>\\n<h3>Product Development Timeline</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">timeline\\n</span><span class=\\"code-line\\">    title Product Development Lifecycle\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Research Phase\\n</span><span class=\\"code-line\\">        Q1 2024 <span class=\\"token operator\\">:</span> Market Research\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> User Interviews\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> Competitive Analysis\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Design Phase\\n</span><span class=\\"code-line\\">        Q2 2024 <span class=\\"token operator\\">:</span> Wireframes\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> Prototypes\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> User Testing\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Development Phase\\n</span><span class=\\"code-line\\">        Q3 2024 <span class=\\"token operator\\">:</span> MVP Development\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> Alpha Testing\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> Beta Release\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Launch Phase\\n</span><span class=\\"code-line\\">        Q4 2024 <span class=\\"token operator\\">:</span> Product Launch\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> Marketing Campaign\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> Customer Feedback\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    section Growth Phase\\n</span><span class=\\"code-line\\">        Q1 2025 <span class=\\"token operator\\">:</span> Feature Updates\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> Market Expansion\\n</span><span class=\\"code-line\\">                <span class=\\"token operator\\">:</span> Performance Optimization\\n</span></code></pre></div>\\n<h2>zenUML</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/zenuml.html\\">Documentation</a></p>\\n<p>A Sequence diagram is an interaction diagram that shows how processes operate with one another and in what order.</p>\\n<p>These types of diagrams are not supported by the blog system yet, they throw an error:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"plaintext\\"><div class=\\"code-language-label\\">PLAINTEXT</div><pre class=\\"language-plaintext\\" data-processed data-language=\\"plaintext\\"><code class=\\"language-plaintext code-highlight\\"><span class=\\"code-line\\">No diagram type detected matching given configuration for text: zenuml\\n</span></code></pre></div>\\n<p>Example mermaid code for this type of diagram:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"text\\"><div class=\\"code-language-label\\">TEXT</div><pre class=\\"language-text\\" data-processed data-language=\\"text\\"><code class=\\"language-text code-highlight\\"><span class=\\"code-line\\">zenuml\\n</span><span class=\\"code-line\\">    // 1. assign a variable from a sync message.\\n</span><span class=\\"code-line\\">    a = A.SyncMessage()\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    // 1.1. optionally give the variable a type\\n</span><span class=\\"code-line\\">    SomeType a = A.SyncMessage()\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    // 2. use return keyword\\n</span><span class=\\"code-line\\">    A.SyncMessage() {\\n</span><span class=\\"code-line\\">    return result\\n</span><span class=\\"code-line\\">    }\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    // 3. use @return or @reply annotator on an async message\\n</span><span class=\\"code-line\\">    @return\\n</span><span class=\\"code-line\\">    A-&gt;B: result\\n</span></code></pre></div>\\n<h2>15. Sankey Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/sankey.html\\">Documentation</a></p>\\n<p>Sankey diagrams show flow and quantity through a system.</p>\\n<h3>Basic Sankey Diagram</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">sankey-beta\\n</span><span class=\\"code-line\\">    Agriculture,Bio-conversion,124.729\\n</span><span class=\\"code-line\\">    Bio-conversion,Liquid,0.597\\n</span><span class=\\"code-line\\">    Bio-conversion,Losses,26.862\\n</span><span class=\\"code-line\\">    Bio-conversion,Solid,280.322\\n</span><span class=\\"code-line\\">    Bio-conversion,Gas,81.144\\n</span></code></pre></div>\\n<h3>Energy Flow Sankey</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">sankey-beta\\n</span><span class=\\"code-line\\">    Coal,Electricity Generation,50\\n</span><span class=\\"code-line\\">    Natural Gas,Electricity Generation,30\\n</span><span class=\\"code-line\\">    Nuclear,Electricity Generation,15\\n</span><span class=\\"code-line\\">    Renewables,Electricity Generation,25\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Electricity Generation,Residential,35\\n</span><span class=\\"code-line\\">    Electricity Generation,Commercial,25\\n</span><span class=\\"code-line\\">    Electricity Generation,Industrial,45\\n</span><span class=\\"code-line\\">    Electricity Generation,Transportation,5\\n</span><span class=\\"code-line\\">    Electricity Generation,Losses,10\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Oil,Transportation,40\\n</span><span class=\\"code-line\\">    Oil,Industrial,15\\n</span><span class=\\"code-line\\">    Oil,Residential,5\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Natural Gas,Residential,20\\n</span><span class=\\"code-line\\">    Natural Gas,Commercial,15\\n</span><span class=\\"code-line\\">    Natural Gas,Industrial,10\\n</span></code></pre></div>\\n<h2>16. XY Charts</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/xyChart.html\\">Documentation</a></p>\\n<p>XY charts show relationships between two quantitative variables.</p>\\n<h3>Basic XY Chart</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">xychart-beta\\n</span><span class=\\"code-line\\">    title <span class=\\"token string\\">\\"Sales Revenue\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token arrow operator\\">x-</span>axis <span class=\\"token text string\\">[Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec]</span>\\n</span><span class=\\"code-line\\">    y-axis <span class=\\"token string\\">\\"Revenue (in $)\\"</span> 4000 <span class=\\"token arrow operator\\">--&gt;</span> 11000\\n</span><span class=\\"code-line\\">    bar <span class=\\"token text string\\">[5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 8800, 9000]</span>\\n</span></code></pre></div>\\n<h3>Advanced Performance Metrics Chart</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">xychart-beta\\n</span><span class=\\"code-line\\">    title <span class=\\"token string\\">\\"Website Performance Metrics\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token arrow operator\\">x-</span>axis <span class=\\"token text string\\">[Week 1, Week 2, Week 3, Week 4, Week 5, Week 6]</span>\\n</span><span class=\\"code-line\\">    y-axis <span class=\\"token string\\">\\"Metrics\\"</span> 0 <span class=\\"token arrow operator\\">--&gt;</span> 100\\n</span><span class=\\"code-line\\">    line <span class=\\"token string\\">\\"Page Load Time (ms/10)\\"</span> <span class=\\"token text string\\">[45, 42, 38, 35, 33, 30]</span>\\n</span><span class=\\"code-line\\">    line <span class=\\"token string\\">\\"User Satisfaction (%)\\"</span> <span class=\\"token text string\\">[78, 82, 85, 88, 91, 94]</span>\\n</span><span class=\\"code-line\\">    bar <span class=\\"token string\\">\\"Conversion Rate (%)\\"</span> <span class=\\"token text string\\">[12, 15, 18, 22, 25, 28]</span>\\n</span></code></pre></div>\\n<h2>17. Block Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/block.html\\">Documentation</a></p>\\n<p>Block diagrams show system components and their relationships.</p>\\n<p>These types of diagrams are not supported by the blog system yet, they throw an error:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"plaintext\\"><div class=\\"code-language-label\\">PLAINTEXT</div><pre class=\\"language-plaintext\\" data-processed data-language=\\"plaintext\\"><code class=\\"language-plaintext code-highlight\\"><span class=\\"code-line\\">Converting circular structure to JSON --&gt; starting at object with constructor 'HTMLHtmlElement' | property '__reactFiber$45ydlvxhz2f' -&gt; object with constructor 'FiberNode' --- property 'stateNode' closes the circle\\n</span></code></pre></div>\\n<p>To resolve that there was a lot of code needed to monkey-patch the JSON, a better solution is needed to be\\nable to support those.</p>\\n<p>Example mermaid code for this type of diagram:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"text\\"><div class=\\"code-language-label\\">TEXT</div><pre class=\\"language-text\\" data-processed data-language=\\"text\\"><code class=\\"language-text code-highlight\\"><span class=\\"code-line\\">block-beta\\n</span><span class=\\"code-line\\">columns 1\\n</span><span class=\\"code-line\\">  db((\\"DB\\"))\\n</span><span class=\\"code-line\\">  blockArrowId6&lt;[\\"&amp;nbsp;&amp;nbsp;&amp;nbsp;\\"]&gt;(down)\\n</span><span class=\\"code-line\\">  block:ID\\n</span><span class=\\"code-line\\">    A\\n</span><span class=\\"code-line\\">    B[\\"A wide one in the middle\\"]\\n</span><span class=\\"code-line\\">    C\\n</span><span class=\\"code-line\\">  end\\n</span><span class=\\"code-line\\">  space\\n</span><span class=\\"code-line\\">  D\\n</span><span class=\\"code-line\\">  ID --&gt; D\\n</span><span class=\\"code-line\\">  C --&gt; D\\n</span><span class=\\"code-line\\">  style B fill:#969,stroke:#333,stroke-width:4px\\n</span></code></pre></div>\\n<h2>18. Packet Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/packet.html\\">Documentation</a></p>\\n<p>Packet diagrams show network packet structure.</p>\\n<h3>Basic Packet Diagram</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">packet-beta\\n</span><span class=\\"code-line\\">title UDP Packet\\n</span><span class=\\"code-line\\">0-15<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Source Port\\"</span>\\n</span><span class=\\"code-line\\">16-31<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Destination Port\\"</span>\\n</span><span class=\\"code-line\\">32-47<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Length\\"</span>\\n</span><span class=\\"code-line\\">48-63<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Checksum\\"</span>\\n</span><span class=\\"code-line\\">64-95<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Data\\"</span>\\n</span></code></pre></div>\\n<h3>Advanced TCP Packet Structure</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">packet-beta\\n</span><span class=\\"code-line\\">title TCP Packet Header\\n</span><span class=\\"code-line\\">0-15<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Source Port\\"</span>\\n</span><span class=\\"code-line\\">16-31<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Destination Port\\"</span>\\n</span><span class=\\"code-line\\">32-63<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Sequence Number\\"</span>\\n</span><span class=\\"code-line\\">64-95<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Acknowledgment Number\\"</span>\\n</span><span class=\\"code-line\\">96-99<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Data Offset\\"</span>\\n</span><span class=\\"code-line\\">100-105<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Reserved\\"</span>\\n</span><span class=\\"code-line\\">106-111<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Flags\\"</span>\\n</span><span class=\\"code-line\\">112-127<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Window Size\\"</span>\\n</span><span class=\\"code-line\\">128-143<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Checksum\\"</span>\\n</span><span class=\\"code-line\\">144-159<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Urgent Pointer\\"</span>\\n</span><span class=\\"code-line\\">160-191<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Options (if any)\\"</span>\\n</span><span class=\\"code-line\\">192-223<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Data\\"</span>\\n</span></code></pre></div>\\n<h2>19. Architecture Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/architecture.html\\">Documentation</a></p>\\n<p>Architecture diagrams show system structure and component relationships.</p>\\n<h3>Microservices Architecture</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">architecture-beta\\n</span><span class=\\"code-line\\">    group api<span class=\\"token text string\\">(cloud)</span><span class=\\"token text string\\">[API Gateway]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    service db<span class=\\"token text string\\">(database)</span><span class=\\"token text string\\">[Database]</span> in api\\n</span><span class=\\"code-line\\">    service disk1<span class=\\"token text string\\">(disk)</span><span class=\\"token text string\\">[Storage]</span> in api\\n</span><span class=\\"code-line\\">    service disk2<span class=\\"token text string\\">(disk)</span><span class=\\"token text string\\">[Storage]</span> in api\\n</span><span class=\\"code-line\\">    service server<span class=\\"token text string\\">(server)</span><span class=\\"token text string\\">[Server]</span> in api\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    db<span class=\\"token operator\\">:</span>L <span class=\\"token arrow operator\\">--</span> R<span class=\\"token operator\\">:</span>server\\n</span><span class=\\"code-line\\">    disk1<span class=\\"token operator\\">:</span>T <span class=\\"token arrow operator\\">--</span> B<span class=\\"token operator\\">:</span>server\\n</span><span class=\\"code-line\\">    disk2<span class=\\"token operator\\">:</span>T <span class=\\"token arrow operator\\">--</span> B<span class=\\"token operator\\">:</span>db\\n</span></code></pre></div>\\n<p>Icons are very <a href=\\"https://mermaid.js.org/syntax/architecture.html#icons\\">limitied</a> unless using <a href=\\"https://icon-sets.iconify.design/\\">Iconify Icons</a> (and accepting the licenses), example psuedo-code:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"typescript\\"><div class=\\"code-language-label\\">TYPESCRIPT</div><pre class=\\"language-typescript\\" data-processed data-language=\\"typescript\\"><code class=\\"language-typescript code-highlight\\"><span class=\\"code-line\\">mermaid<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">registerIconPacks</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    name<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'logos'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function-variable function\\">loader</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\u2026/logos@1/icons.json'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span>r <span class=\\"token operator\\">=&gt;</span> r<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">json</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<p>This is currently not suppported in the blog system.</p>\\n<h2>20. Kanban Boards</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/kanban.html\\">Documentation</a></p>\\n<p>Kanban boards show work items and their progress through workflow stages.</p>\\n<h3>Basic Kanban Board</h3>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">kanban\\n</span><span class=\\"code-line\\">    Todo\\n</span><span class=\\"code-line\\">        Add login page\\n</span><span class=\\"code-line\\">        Fix navigation bug\\n</span><span class=\\"code-line\\">        Update documentation\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    In Progress\\n</span><span class=\\"code-line\\">        Implement user authentication\\n</span><span class=\\"code-line\\">        Design dashboard layout\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Code Review\\n</span><span class=\\"code-line\\">        Add payment integration\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Done\\n</span><span class=\\"code-line\\">        Setup project structure\\n</span><span class=\\"code-line\\">        Create landing page\\n</span><span class=\\"code-line\\">        Configure CI/CD pipeline\\n</span></code></pre></div>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">kanban\\n</span><span class=\\"code-line\\">  Todo\\n</span><span class=\\"code-line\\">    <span class=\\"token text string\\">[Create Documentation]</span>\\n</span><span class=\\"code-line\\">    docs<span class=\\"token text string\\">[Create Blog about the new diagram]</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token text string\\">[In progress]</span>\\n</span><span class=\\"code-line\\">    id6<span class=\\"token text string\\">[Create renderer so that it works in all cases. We also add some extra text here for testing purposes. And some more just for the extra flare.]</span>\\n</span><span class=\\"code-line\\">  id9<span class=\\"token text string\\">[Ready for deploy]</span>\\n</span><span class=\\"code-line\\">    id8<span class=\\"token text string\\">[Design grammar]</span>@<span class=\\"token text string\\">{ assigned: 'knsv' }</span>\\n</span><span class=\\"code-line\\">  id10<span class=\\"token text string\\">[Ready for test]</span>\\n</span><span class=\\"code-line\\">    id4<span class=\\"token text string\\">[Create parsing tests]</span>@<span class=\\"token text string\\">{ ticket: MC-2038, assigned: 'K.Sveidqvist', priority: 'High' }</span>\\n</span><span class=\\"code-line\\">    id66<span class=\\"token text string\\">[last item]</span>@<span class=\\"token text string\\">{ priority: 'Very Low', assigned: 'knsv' }</span>\\n</span><span class=\\"code-line\\">  id11<span class=\\"token text string\\">[Done]</span>\\n</span><span class=\\"code-line\\">    id5<span class=\\"token text string\\">[define getData]</span>\\n</span><span class=\\"code-line\\">    id2<span class=\\"token text string\\">[Title of diagram is more than 100 chars when user duplicates diagram with 100 char]</span>@<span class=\\"token text string\\">{ ticket: MC-2036, priority: 'Very High'}</span>\\n</span><span class=\\"code-line\\">    id3<span class=\\"token text string\\">[Update DB function]</span>@<span class=\\"token text string\\">{ ticket: MC-2037, assigned: knsv, priority: 'High' }</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  id12<span class=\\"token text string\\">[Can't reproduce]</span>\\n</span><span class=\\"code-line\\">    id3<span class=\\"token text string\\">[Weird flickering in Firefox]</span>\\n</span></code></pre></div>\\n<h2>Radar Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/radar.html\\">Documentation</a></p>\\n<p>A simple way to plot low-dimensional data in a circular format</p>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">radar-beta\\n</span><span class=\\"code-line\\">  title Grades\\n</span><span class=\\"code-line\\">  axis m<span class=\\"token text string\\">[\\"Math\\"]</span>, s<span class=\\"token text string\\">[\\"Science\\"]</span>, e<span class=\\"token text string\\">[\\"English\\"]</span>\\n</span><span class=\\"code-line\\">  axis h<span class=\\"token text string\\">[\\"History\\"]</span>, g<span class=\\"token text string\\">[\\"Geography\\"]</span>, a<span class=\\"token text string\\">[\\"Art\\"]</span>\\n</span><span class=\\"code-line\\">  curve a<span class=\\"token text string\\">[\\"Alice\\"]</span><span class=\\"token text string\\">{85, 90, 80, 70, 75, 90}</span>\\n</span><span class=\\"code-line\\">  curve b<span class=\\"token text string\\">[\\"Bob\\"]</span><span class=\\"token text string\\">{70, 75, 85, 80, 90, 85}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  max 100\\n</span><span class=\\"code-line\\">  min 0\\n</span></code></pre></div>\\n<h2>Treemap Diagrams</h2>\\n<p><a href=\\"https://mermaid.js.org/syntax/treemap.html\\">Documentation</a></p>\\n<p>Displays hierarchical data as a set of nested rectangles</p>\\n<div class=\\"code-block-wrapper mermaid-code-block\\" data-language=\\"mermaid\\"><div class=\\"code-language-label\\">MERMAID DIAGRAM</div><pre class=\\"language-mermaid\\" data-processed data-language=\\"mermaid\\" data-mermaid=\\"true\\"><code class=\\"language-mermaid code-highlight\\"><span class=\\"code-line\\">treemap-beta\\n</span><span class=\\"code-line\\"><span class=\\"token string\\">\\"Products\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Electronics\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token string\\">\\"Phones\\"</span><span class=\\"token operator\\">:</span> 50\\n</span><span class=\\"code-line\\">        <span class=\\"token string\\">\\"Computers\\"</span><span class=\\"token operator\\">:</span> 30\\n</span><span class=\\"code-line\\">        <span class=\\"token string\\">\\"Accessories\\"</span><span class=\\"token operator\\">:</span> 20\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"Clothing\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token string\\">\\"Men's\\"</span><span class=\\"token operator\\">:</span> 40\\n</span><span class=\\"code-line\\">        <span class=\\"token string\\">\\"Women's\\"</span><span class=\\"token operator\\">:</span> 40\\n</span></code></pre></div>\\n<h2>Best Practices for Mermaid Diagrams</h2>\\n<h3>1. Syntax and Structure</h3>\\n<ul>\\n<li>Always test your diagrams before publishing</li>\\n<li>Use consistent naming conventions</li>\\n<li>Keep diagrams simple and focused</li>\\n<li>Use proper indentation for readability</li>\\n</ul>\\n<h3>2. Visual Design</h3>\\n<ul>\\n<li>Apply consistent styling across similar diagrams</li>\\n<li>Use meaningful colors and shapes</li>\\n<li>Ensure text is readable at different sizes</li>\\n<li>Consider accessibility in color choices</li>\\n</ul>\\n<h3>3. Documentation Integration</h3>\\n<ul>\\n<li>Add descriptive text before and after diagrams</li>\\n<li>Explain complex relationships in prose</li>\\n<li>Use diagrams to supplement, not replace, written documentation</li>\\n<li>Keep diagrams up-to-date with code changes</li>\\n</ul>\\n<h3>4. Performance Considerations</h3>\\n<ul>\\n<li>Avoid overly complex diagrams that are slow to render</li>\\n<li>Break large diagrams into smaller, focused ones</li>\\n<li>Consider diagram loading impact on page performance</li>\\n</ul>\\n<h2>Common Pitfalls and Solutions</h2>\\n<h3>Syntax Errors</h3>\\n<ul>\\n<li><strong>Problem</strong>: Diagram fails to render</li>\\n<li><strong>Solution</strong>: Validate syntax using Mermaid live editor</li>\\n<li><strong>Prevention</strong>: Use consistent indentation and proper keywords</li>\\n</ul>\\n<h3>Overcomplicated Diagrams</h3>\\n<ul>\\n<li><strong>Problem</strong>: Diagrams become unreadable</li>\\n<li><strong>Solution</strong>: Break into multiple simpler diagrams</li>\\n<li><strong>Prevention</strong>: Focus on one concept per diagram</li>\\n</ul>\\n<h3>Inconsistent Styling</h3>\\n<ul>\\n<li><strong>Problem</strong>: Mixed visual styles across diagrams</li>\\n<li><strong>Solution</strong>: Define and reuse CSS classes</li>\\n<li><strong>Prevention</strong>: Create a style guide for your diagrams</li>\\n</ul>\\n<h2>Conclusion</h2>\\n<p>Mermaid diagrams are incredibly versatile tools for technical documentation. Each diagram type serves specific purposes:</p>\\n<ul>\\n<li><strong>Flowcharts</strong> for processes and workflows</li>\\n<li><strong>Sequence diagrams</strong> for interactions over time</li>\\n<li><strong>Class diagrams</strong> for object-oriented design</li>\\n<li><strong>State diagrams</strong> for system states and transitions</li>\\n<li><strong>ERDs</strong> for database design</li>\\n<li><strong>Gantt charts</strong> for project planning</li>\\n<li><strong>And many more</strong> for specialized use cases</li>\\n</ul>\\n<p>Choose the right diagram type for your needs, keep them simple and focused, and maintain consistency across your documentation. With practice, you'll create clear, maintainable visual documentation that enhances understanding and communication.</p>\\n<h2>Additional Resources</h2>\\n<ul>\\n<li><a href=\\"https://mermaid.js.org/\\">Mermaid Official Documentation</a></li>\\n<li><a href=\\"https://mermaid.live/\\">Mermaid Live Editor</a></li>\\n<li><a href=\\"https://github.com/mermaid-js/mermaid\\">Mermaid GitHub Repository</a></li>\\n<li><a href=\\"https://mermaid.js.org/syntax/flowchart.html\\">Mermaid Syntax Reference</a></li>\\n<li><a href=\\"https://www.writethedocs.org/\\">Visual Documentation Best Practices</a></li>\\n</ul>\\n<p><em>This comprehensive guide covers all major Mermaid diagram types. Bookmark this page as a reference when creating visual documentation for your projects. Each diagram type has its strengths - choose the one that best communicates your specific information.</em></p>"},{"slug":"blockquotes-examples","title":"Block Quotes Examples","date":"2025-04-22","author":"Johan Ljunggren","excerpt":"Demonstrates available blockquote styles in Markdown.","image":"https://images.unsplash.com/photo-1455390582262-044cdead277a?w=1200&h=600&fit=crop&crop=center","imageAlt":"Close-up of a fountain pen writing in cursive on lined paper.","tags":["GitHub","Markdown","Alerts","Examples"],"readTime":"3 min read","category":"Template","content":"<p>This post demonstrates the new regular blockquote and GitHub-style markdown alerts that support different types with distinct colors and icons.</p>\\n<h2>Regular</h2>\\n<p>Regular block quotations are indented passages, typographically set apart:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"markdown\\"><div class=\\"code-language-label\\">MARKDOWN</div><pre class=\\"language-markdown\\" data-processed data-language=\\"markdown\\"><code class=\\"language-markdown code-highlight\\"><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> This is a regular blockquote without any special alert type. It maintains the original styling and behavior.\\n</span></code></pre></div>\\n<blockquote>\\n<p>This is a regular blockquote without any special alert type. It maintains the original styling and behavior.</p>\\n</blockquote>\\n<h2>Quote</h2>\\n<p>This style places quotation marks around a passage. Source references (for example, author, title, or page number) are not yet supported.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"markdown\\"><div class=\\"code-language-label\\">MARKDOWN</div><pre class=\\"language-markdown\\" data-processed data-language=\\"markdown\\"><code class=\\"language-markdown code-highlight\\"><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> [!QUOTE]\\n</span><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> The best way to learn programming is not just by reading about it, but by actually writing code and solving real problems.\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-quote\\" data-alert-type=\\"quote\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"quote\\">Quote</div>\\n<div class=\\"github-alert-content\\">\\n<p>The best way to learn programming is not just by reading about it, but by actually writing code and solving real problems.</p>\\n</div>\\n</div>\\n<h2>DocFX-style</h2>\\n<p>These DocFX-style alerts make your documentation more visually appealing and help readers quickly identify important information based on the color coding and iconography.</p>\\n<p>You can use the following alert types in your markdown:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"markdown\\"><div class=\\"code-language-label\\">MARKDOWN</div><pre class=\\"language-markdown\\" data-processed data-language=\\"markdown\\"><code class=\\"language-markdown code-highlight\\"><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> [!NOTE]\\n</span><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> Highlights information that users should consider, even when skimming.\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-note\\" data-alert-type=\\"note\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"note\\">Note</div>\\n<div class=\\"github-alert-content\\">\\n<p>Highlights information that users should take into account, even when skimming.</p>\\n</div>\\n</div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"markdown\\"><div class=\\"code-language-label\\">MARKDOWN</div><pre class=\\"language-markdown\\" data-processed data-language=\\"markdown\\"><code class=\\"language-markdown code-highlight\\"><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> [!TIP]\\n</span><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> Optional information to help a user be more successful.\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-tip\\" data-alert-type=\\"tip\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"tip\\">Tip</div>\\n<div class=\\"github-alert-content\\">\\n<p>Optional information to help a user be more successful.</p>\\n</div>\\n</div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"markdown\\"><div class=\\"code-language-label\\">MARKDOWN</div><pre class=\\"language-markdown\\" data-processed data-language=\\"markdown\\"><code class=\\"language-markdown code-highlight\\"><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> [!IMPORTANT]\\n</span><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> Crucial information necessary for users to succeed.\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>Crucial information necessary for users to succeed.</p>\\n</div>\\n</div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"markdown\\"><div class=\\"code-language-label\\">MARKDOWN</div><pre class=\\"language-markdown\\" data-processed data-language=\\"markdown\\"><code class=\\"language-markdown code-highlight\\"><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> [!WARNING]\\n</span><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> Critical content demanding immediate user attention due to potential risks.\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-warning\\" data-alert-type=\\"warning\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"warning\\">Warning</div>\\n<div class=\\"github-alert-content\\">\\n<p>Critical content demanding immediate user attention due to potential risks.</p>\\n</div>\\n</div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"markdown\\"><div class=\\"code-language-label\\">MARKDOWN</div><pre class=\\"language-markdown\\" data-processed data-language=\\"markdown\\"><code class=\\"language-markdown code-highlight\\"><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> [!CAUTION]\\n</span><span class=\\"code-line\\"><span class=\\"token blockquote punctuation\\">&gt;</span> Negative potential consequences of an action.\\n</span></code></pre></div>\\n<div class=\\"github-alert github-alert-caution\\" data-alert-type=\\"caution\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"caution\\">Caution</div>\\n<div class=\\"github-alert-content\\">\\n<p>Negative potential consequences of an action.</p>\\n</div>\\n</div>\\n<h2>Real-World Examples</h2>\\n<h3>Regular</h3>\\n<blockquote>\\n<p>This is a regular blockquote without quote marks, perfect for general emphasis or citations where you don't want the traditional quotation styling.</p>\\n</blockquote>\\n<h3>Quotations with Visual Quote Marks</h3>\\n<div class=\\"github-alert github-alert-quote\\" data-alert-type=\\"quote\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"quote\\">Quote</div>\\n<div class=\\"github-alert-content\\">\\n<p>The best way to learn programming is not just by reading about it, but by actually writing code and solving real problems. Start small, be consistent, and don't be afraid to make mistakes \u2013 they're part of the learning process.</p>\\n</div>\\n</div>\\n<h3>Configuration Notes</h3>\\n<div class=\\"github-alert github-alert-note\\" data-alert-type=\\"note\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"note\\">Note</div>\\n<div class=\\"github-alert-content\\">\\n<p>Make sure to back up your configuration files before making any changes. This will allow you to restore your settings if something goes wrong.</p>\\n</div>\\n</div>\\n<h3>Performance Tips</h3>\\n<div class=\\"github-alert github-alert-tip\\" data-alert-type=\\"tip\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"tip\\">Tip</div>\\n<div class=\\"github-alert-content\\">\\n<p>Use caching mechanisms like Redis or Memcached to improve application performance. This can reduce database load by up to 80% in typical web applications.</p>\\n</div>\\n</div>\\n<h3>Security Requirements</h3>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>Always validate user input on both client and server sides. Client-side validation is for user experience, but server-side validation is essential for security.</p>\\n</div>\\n</div>\\n<h3>Potential Issues</h3>\\n<div class=\\"github-alert github-alert-warning\\" data-alert-type=\\"warning\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"warning\\">Warning</div>\\n<div class=\\"github-alert-content\\">\\n<p>Running this command will permanently delete all data in the specified database. Make sure you have created a backup before proceeding.</p>\\n</div>\\n</div>\\n<h3>Breaking Changes</h3>\\n<div class=\\"github-alert github-alert-caution\\" data-alert-type=\\"caution\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"caution\\">Caution</div>\\n<div class=\\"github-alert-content\\">\\n<p>This update contains breaking changes that will require code modifications. Review the migration guide carefully before upgrading to avoid application failures.</p>\\n</div>\\n</div>\\n<h2>Multi-paragraph Alerts</h2>\\n<p>Alerts can contain multiple paragraphs and even other markdown elements:</p>\\n<div class=\\"github-alert github-alert-important\\" data-alert-type=\\"important\\">\\n<div class=\\"github-alert-title\\" data-alert-icon=\\"important\\">Important</div>\\n<div class=\\"github-alert-content\\">\\n<p>This is a complex alert with multiple paragraphs.</p>\\n<p>It can contain <strong>bold text</strong>, <em>italic text</em>, and even code snippets like <code>npm install</code>.</p>\\n<p>Use this for detailed explanations that require more context.</p>\\n</div>\\n</div>\\n<p>The blockquote handles inline code-blocks, e.g. <code>npm install</code>.</p>"},{"slug":"syntax-highlighting-test","title":"Syntax Highlighting Test","date":"2025-04-08","author":"Blog Author","excerpt":"Testing different code block language syntax highlighting, including PowerShell.","image":"https://images.unsplash.com/photo-1518186285589-2f7649de83e0?w=800&h=600&fit=crop&crop=center","imageAlt":"Syntax Highlighting Test","tags":["syntax","highlighting","test"],"readTime":"1 min read","category":"Template","content":"<p>This article tests various code blocks with different languages and ensures syntax highlighting works as expected without altering the current design or background colors.</p>\\n<h2>JavaScript Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"javascript\\"><div class=\\"code-language-label\\">JAVASCRIPT</div><pre class=\\"language-javascript\\" data-processed data-language=\\"javascript\\"><code class=\\"language-javascript code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// JavaScript example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">greet</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">name</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token console class-name\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token method function property-access\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">Hello, </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>name<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">!</span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">greet</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'World'</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<h2>Python Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"python\\"><div class=\\"code-language-label\\">PYTHON</div><pre class=\\"language-python\\" data-processed data-language=\\"python\\"><code class=\\"language-python code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Python example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">def</span> <span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">+</span> b\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>add<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<h2>PowerShell Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># PowerShell example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">Param</span><span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token namespace\\">[string]</span><span class=\\"token variable\\">$name</span> = <span class=\\"token string\\">'World'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Write-Host</span> <span class=\\"token string\\">\\"Hello, <span class=\\"token variable\\">$name</span>!\\"</span>\\n</span></code></pre></div>\\n<h2>Bash Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"bash\\"><div class=\\"code-language-label\\">BASH</div><pre class=\\"language-bash\\" data-processed data-language=\\"bash\\"><code class=\\"language-bash code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Bash example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">#!/bin/bash</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">for</span> <span class=\\"token for-or-select variable\\">i</span> <span class=\\"token keyword\\">in</span> <span class=\\"token punctuation\\">{</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">..</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span> <span class=\\"token keyword\\">do</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token builtin class-name\\">echo</span> <span class=\\"token string\\">\\"Iteration <span class=\\"token variable\\">$i</span>\\"</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">done</span>\\n</span></code></pre></div>\\n<h2>HTML Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"html\\"><div class=\\"code-language-label\\">HTML</div><pre class=\\"language-html\\" data-processed data-language=\\"html\\"><code class=\\"language-html code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">&lt;!-- HTML example --&gt;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token doctype\\"><span class=\\"token punctuation\\">&lt;!</span><span class=\\"token doctype-tag\\">DOCTYPE</span> <span class=\\"token name\\">html</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\"><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>html</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>en<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>head</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>meta</span> <span class=\\"token attr-name\\">charset</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>UTF-8<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>title</span><span class=\\"token punctuation\\">&gt;</span></span>Test<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>title</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>head</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>body</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>h1</span><span class=\\"token punctuation\\">&gt;</span></span>Syntax Highlighting Test<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>h1</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>body</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\"><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>html</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span></code></pre></div>\\n<h2>TypeScript Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"typescript\\"><div class=\\"code-language-label\\">TYPESCRIPT</div><pre class=\\"language-typescript\\" data-processed data-language=\\"typescript\\"><code class=\\"language-typescript code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// TypeScript example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">User</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  id<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span>\\n</span><span class=\\"code-line\\">  name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span>\\n</span><span class=\\"code-line\\">  email<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">UserService</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">private</span> users<span class=\\"token operator\\">:</span> User<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token function\\">addUser</span><span class=\\"token punctuation\\">(</span>user<span class=\\"token operator\\">:</span> User<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">void</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>user<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token function\\">getUserById</span><span class=\\"token punctuation\\">(</span>id<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> User <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">undefined</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">find</span><span class=\\"token punctuation\\">(</span>user <span class=\\"token operator\\">=&gt;</span> user<span class=\\"token punctuation\\">.</span>id <span class=\\"token operator\\">===</span> id<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>C# Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"csharp\\"><div class=\\"code-language-label\\">CSHARP</div><pre class=\\"language-csharp\\" data-processed data-language=\\"csharp\\"><code class=\\"language-csharp code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// C# example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">System</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">System<span class=\\"token punctuation\\">.</span>Collections<span class=\\"token punctuation\\">.</span>Generic</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Calculator</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">double</span></span> <span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">double</span></span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">double</span></span> b<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">double</span></span> <span class=\\"token function\\">Multiply</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">double</span></span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">double</span></span> b<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Program</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">Main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> calc <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Calculator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">        Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span><span class=\\"token interpolation-string\\"><span class=\\"token string\\">$\\"5 + 3 = </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token expression language-csharp\\">calc<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>C# Example</h2>\\n<p>This second equally named section is to test unique anchoring when section has same names.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"csharp\\"><div class=\\"code-language-label\\">CSHARP</div><pre class=\\"language-csharp\\" data-processed data-language=\\"csharp\\"><code class=\\"language-csharp code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// C# example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">System</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">using</span> <span class=\\"token namespace\\">System<span class=\\"token punctuation\\">.</span>Collections<span class=\\"token punctuation\\">.</span>Generic</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Calculator</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">double</span></span> <span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">double</span></span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">double</span></span> b<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">+</span> b<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">double</span></span> <span class=\\"token function\\">Multiply</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\"><span class=\\"token keyword\\">double</span></span> a<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\"><span class=\\"token keyword\\">double</span></span> b<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> a <span class=\\"token operator\\">*</span> b<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Program</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">static</span> <span class=\\"token return-type class-name\\"><span class=\\"token keyword\\">void</span></span> <span class=\\"token function\\">Main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token class-name\\"><span class=\\"token keyword\\">var</span></span> calc <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token constructor-invocation class-name\\">Calculator</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">        Console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">WriteLine</span><span class=\\"token punctuation\\">(</span><span class=\\"token interpolation-string\\"><span class=\\"token string\\">$\\"5 + 3 = </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token expression language-csharp\\">calc<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>Java Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"java\\"><div class=\\"code-language-label\\">JAVA</div><pre class=\\"language-java\\" data-processed data-language=\\"java\\"><code class=\\"language-java code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// Java example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">ArrayList</span></span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">List</span></span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> name<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Person</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>age <span class=\\"token operator\\">=</span> age<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> name<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">getAge</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> age<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token annotation punctuation\\">@Override</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Person{name='%s', age=%d}\\"</span><span class=\\"token punctuation\\">,</span> name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>Go Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"go\\"><div class=\\"code-language-label\\">GO</div><pre class=\\"language-go\\" data-processed data-language=\\"go\\"><code class=\\"language-go code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// Go example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">package</span> main\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"fmt\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token string\\">\\"net/http\\"</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">handler</span><span class=\\"token punctuation\\">(</span>w http<span class=\\"token punctuation\\">.</span>ResponseWriter<span class=\\"token punctuation\\">,</span> r <span class=\\"token operator\\">*</span>http<span class=\\"token punctuation\\">.</span>Request<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Fprintf</span><span class=\\"token punctuation\\">(</span>w<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Hello, World!\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    http<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">HandleFunc</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/\\"</span><span class=\\"token punctuation\\">,</span> handler<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Server starting on port 8080...\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    http<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">ListenAndServe</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\":8080\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">nil</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>Rust Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"rust\\"><div class=\\"code-language-label\\">RUST</div><pre class=\\"language-rust\\" data-processed data-language=\\"rust\\"><code class=\\"language-rust code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// Rust example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">use</span> <span class=\\"token namespace\\">std<span class=\\"token punctuation\\">::</span>collections<span class=\\"token punctuation\\">::</span></span><span class=\\"token class-name\\">HashMap</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token attribute attr-name\\">#[derive(Debug)]</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">struct</span> <span class=\\"token type-definition class-name\\">Student</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    name<span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    grade<span class=\\"token punctuation\\">:</span> <span class=\\"token keyword\\">u8</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">impl</span> <span class=\\"token class-name\\">Student</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">fn</span> <span class=\\"token function-definition function\\">new</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">,</span> grade<span class=\\"token punctuation\\">:</span> <span class=\\"token keyword\\">u8</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">-&gt;</span> <span class=\\"token keyword\\">Self</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token class-name\\">Student</span> <span class=\\"token punctuation\\">{</span> name<span class=\\"token punctuation\\">,</span> grade <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">fn</span> <span class=\\"token function-definition function\\">is_passing</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span><span class=\\"token keyword\\">self</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">-&gt;</span> <span class=\\"token keyword\\">bool</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">self</span><span class=\\"token punctuation\\">.</span>grade <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">60</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">fn</span> <span class=\\"token function-definition function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">let</span> <span class=\\"token keyword\\">mut</span> students <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">HashMap</span><span class=\\"token punctuation\\">::</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    students<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">insert</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">::</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Alice\\"</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">to_string</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">85</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    students<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">insert</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Student</span><span class=\\"token punctuation\\">::</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Bob\\"</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">to_string</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">72</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">,</span> student<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">in</span> <span class=\\"token operator\\">&amp;</span>students <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token macro property\\">println!</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Student {}: {:?} - Passing: {}\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                 id<span class=\\"token punctuation\\">,</span> student<span class=\\"token punctuation\\">,</span> student<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">is_passing</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>C++ Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"cpp\\"><div class=\\"code-language-label\\">CPP</div><pre class=\\"language-cpp\\" data-processed data-language=\\"cpp\\"><code class=\\"language-cpp code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// C++ example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n</span><span class=\\"code-line\\"><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;vector&gt;</span></span>\\n</span><span class=\\"code-line\\"><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;algorithm&gt;</span></span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">NumberProcessor</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">private</span><span class=\\"token operator\\">:</span>\\n</span><span class=\\"code-line\\">    std<span class=\\"token double-colon punctuation\\">::</span>vector<span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">int</span><span class=\\"token operator\\">&gt;</span> numbers<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">public</span><span class=\\"token operator\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">addNumber</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> num<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        numbers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push_back</span><span class=\\"token punctuation\\">(</span>num<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sortNumbers</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        std<span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">sort</span><span class=\\"token punctuation\\">(</span>numbers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">begin</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> numbers<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">printNumbers</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> <span class=\\"token keyword\\">auto</span><span class=\\"token operator\\">&amp;</span> num <span class=\\"token operator\\">:</span> numbers<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> num <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\" \\"</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">        std<span class=\\"token double-colon punctuation\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token double-colon punctuation\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    NumberProcessor processor<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    processor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addNumber</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    processor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addNumber</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    processor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addNumber</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">8</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    processor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sortNumbers</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">    processor<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printNumbers</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>PHP Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"php\\"><div class=\\"code-language-label\\">PHP</div><pre class=\\"language-php\\" data-processed data-language=\\"php\\"><code class=\\"language-php code-highlight\\"><span class=\\"code-line\\"><span class=\\"token php language-php\\"><span class=\\"token delimiter important\\">&lt;?php</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\"><span class=\\"token comment\\">// PHP example</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\"><span class=\\"token keyword\\">class</span> <span class=\\"token class-name-definition class-name\\">Database</span> <span class=\\"token punctuation\\">{</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token variable\\">$host</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token variable\\">$username</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token variable\\">$password</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token variable\\">$database</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token variable\\">$connection</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">__construct</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$host</span><span class=\\"token punctuation\\">,</span> <span class=\\"token variable\\">$username</span><span class=\\"token punctuation\\">,</span> <span class=\\"token variable\\">$password</span><span class=\\"token punctuation\\">,</span> <span class=\\"token variable\\">$database</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">        <span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">host</span> <span class=\\"token operator\\">=</span> <span class=\\"token variable\\">$host</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">        <span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">username</span> <span class=\\"token operator\\">=</span> <span class=\\"token variable\\">$username</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">        <span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">password</span> <span class=\\"token operator\\">=</span> <span class=\\"token variable\\">$password</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">        <span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">database</span> <span class=\\"token operator\\">=</span> <span class=\\"token variable\\">$database</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">connect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">            <span class=\\"token variable\\">$dsn</span> <span class=\\"token operator\\">=</span> <span class=\\"token string double-quoted-string\\">\\"mysql:host=<span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">host</span><span class=\\"token punctuation\\">}</span></span>;dbname=<span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">database</span><span class=\\"token punctuation\\">}</span></span>\\"</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">            <span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">connection</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">PDO</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$dsn</span><span class=\\"token punctuation\\">,</span> <span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">username</span><span class=\\"token punctuation\\">,</span> <span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">password</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">            <span class=\\"token this keyword\\">$this</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token property\\">connection</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">setAttribute</span><span class=\\"token punctuation\\">(</span><span class=\\"token scope\\">PDO<span class=\\"token punctuation\\">::</span></span><span class=\\"token constant\\">ATTR_ERRMODE</span><span class=\\"token punctuation\\">,</span> <span class=\\"token scope\\">PDO<span class=\\"token punctuation\\">::</span></span><span class=\\"token constant\\">ERRMODE_EXCEPTION</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token constant boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">PDOException</span> <span class=\\"token variable\\">$e</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">            <span class=\\"token keyword\\">echo</span> <span class=\\"token string double-quoted-string\\">\\"Connection failed: \\"</span> <span class=\\"token operator\\">.</span> <span class=\\"token variable\\">$e</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">getMessage</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token constant boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">        <span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">    <span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\"><span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\">\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\"><span class=\\"token variable\\">$db</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Database</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'localhost'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'user'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'pass'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'mydb'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\"><span class=\\"token variable\\">$db</span><span class=\\"token operator\\">-&gt;</span><span class=\\"token function\\">connect</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token php language-php\\"><span class=\\"token delimiter important\\">?&gt;</span></span>\\n</span></code></pre></div>\\n<h2>Ruby Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"ruby\\"><div class=\\"code-language-label\\">RUBY</div><pre class=\\"language-ruby\\" data-processed data-language=\\"ruby\\"><code class=\\"language-ruby code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Ruby example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Book</span>\\n</span><span class=\\"code-line\\">  attr_accessor <span class=\\"token symbol\\">:title</span><span class=\\"token punctuation\\">,</span> <span class=\\"token symbol\\">:author</span><span class=\\"token punctuation\\">,</span> <span class=\\"token symbol\\">:pages</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">def</span> <span class=\\"token method-definition\\"><span class=\\"token function\\">initialize</span></span><span class=\\"token punctuation\\">(</span>title<span class=\\"token punctuation\\">,</span> author<span class=\\"token punctuation\\">,</span> pages<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token variable\\">@title</span> <span class=\\"token operator\\">=</span> title\\n</span><span class=\\"code-line\\">    <span class=\\"token variable\\">@author</span> <span class=\\"token operator\\">=</span> author\\n</span><span class=\\"code-line\\">    <span class=\\"token variable\\">@pages</span> <span class=\\"token operator\\">=</span> pages\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">def</span> <span class=\\"token method-definition\\"><span class=\\"token function\\">description</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"</span><span class=\\"token interpolation\\"><span class=\\"token delimiter punctuation\\">#{</span><span class=\\"token content\\"><span class=\\"token variable\\">@title</span></span><span class=\\"token delimiter punctuation\\">}</span></span><span class=\\"token string\\"> by </span><span class=\\"token interpolation\\"><span class=\\"token delimiter punctuation\\">#{</span><span class=\\"token content\\"><span class=\\"token variable\\">@author</span></span><span class=\\"token delimiter punctuation\\">}</span></span><span class=\\"token string\\"> (</span><span class=\\"token interpolation\\"><span class=\\"token delimiter punctuation\\">#{</span><span class=\\"token content\\"><span class=\\"token variable\\">@pages</span></span><span class=\\"token delimiter punctuation\\">}</span></span><span class=\\"token string\\"> pages)\\"</span></span>\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">def</span> <span class=\\"token method-definition\\"><span class=\\"token function\\">long_book</span></span><span class=\\"token operator\\">?</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token variable\\">@pages</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">300</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Usage</span>\\n</span><span class=\\"code-line\\">books <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token class-name\\">Book</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal\\"><span class=\\"token string\\">\\"1984\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"George Orwell\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">328</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token class-name\\">Book</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal\\"><span class=\\"token string\\">\\"To Kill a Mockingbird\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"Harper Lee\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">281</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token class-name\\">Book</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal\\"><span class=\\"token string\\">\\"The Great Gatsby\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"F. Scott Fitzgerald\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">180</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">books<span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">each</span> <span class=\\"token keyword\\">do</span> <span class=\\"token operator\\">|</span>book<span class=\\"token operator\\">|</span>\\n</span><span class=\\"code-line\\">  puts book<span class=\\"token punctuation\\">.</span>description\\n</span><span class=\\"code-line\\">  puts <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"This is a long book!\\"</span></span> <span class=\\"token keyword\\">if</span> book<span class=\\"token punctuation\\">.</span>long_book<span class=\\"token operator\\">?</span>\\n</span><span class=\\"code-line\\">  puts <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"---\\"</span></span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span></code></pre></div>\\n<h2>Swift Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"swift\\"><div class=\\"code-language-label\\">SWIFT</div><pre class=\\"language-swift\\" data-processed data-language=\\"swift\\"><code class=\\"language-swift code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// Swift example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">import</span> <span class=\\"token class-name\\">Foundation</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">protocol</span> <span class=\\"token class-name\\">Animal</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">var</span> name<span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">String</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">get</span> <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">func</span> <span class=\\"token function-definition function\\">makeSound</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Dog</span><span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">Animal</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">let</span> name<span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">String</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">let</span> breed<span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">String</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">func</span> <span class=\\"token function-definition function\\">makeSound</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"Woof!\\"</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">func</span> <span class=\\"token function-definition function\\">fetch</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"</span><span class=\\"token interpolation-punctuation punctuation\\">\\\\(</span><span class=\\"token interpolation\\">name</span><span class=\\"token interpolation-punctuation punctuation\\">)</span><span class=\\"token string\\"> is fetching the ball!\\"</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">Cat</span><span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">Animal</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">let</span> name<span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">String</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">let</span> isIndoor<span class=\\"token punctuation\\">:</span> <span class=\\"token class-name\\">Bool</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">func</span> <span class=\\"token function-definition function\\">makeSound</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"Meow!\\"</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">func</span> <span class=\\"token function-definition function\\">purr</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token class-name\\">String</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"</span><span class=\\"token interpolation-punctuation punctuation\\">\\\\(</span><span class=\\"token interpolation\\">name</span><span class=\\"token interpolation-punctuation punctuation\\">)</span><span class=\\"token string\\"> is purring contentedly.\\"</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">// Usage</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">let</span> animals<span class=\\"token punctuation\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token class-name\\">Animal</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token class-name\\">Dog</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">:</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"Buddy\\"</span></span><span class=\\"token punctuation\\">,</span> breed<span class=\\"token punctuation\\">:</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"Golden Retriever\\"</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token class-name\\">Cat</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">:</span> <span class=\\"token string-literal\\"><span class=\\"token string\\">\\"Whiskers\\"</span></span><span class=\\"token punctuation\\">,</span> isIndoor<span class=\\"token punctuation\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">for</span> animal <span class=\\"token keyword\\">in</span> animals <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal\\"><span class=\\"token string\\">\\"</span><span class=\\"token interpolation-punctuation punctuation\\">\\\\(</span><span class=\\"token interpolation\\">animal<span class=\\"token punctuation\\">.</span>name</span><span class=\\"token interpolation-punctuation punctuation\\">)</span><span class=\\"token string\\"> says: </span><span class=\\"token interpolation-punctuation punctuation\\">\\\\(</span><span class=\\"token interpolation\\">animal<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">makeSound</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token interpolation-punctuation punctuation\\">)</span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>Kotlin Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"kotlin\\"><div class=\\"code-language-label\\">KOTLIN</div><pre class=\\"language-kotlin\\" data-processed data-language=\\"kotlin\\"><code class=\\"language-kotlin code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// Kotlin example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">data</span> <span class=\\"token keyword\\">class</span> <span class=\\"token function\\">Person</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">val</span> name<span class=\\"token operator\\">:</span> String<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">val</span> age<span class=\\"token operator\\">:</span> Int<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> PersonRepository <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">val</span> people <span class=\\"token operator\\">=</span> mutableListOf<span class=\\"token operator\\">&lt;</span>Person<span class=\\"token operator\\">&gt;</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">addPerson</span><span class=\\"token punctuation\\">(</span>person<span class=\\"token operator\\">:</span> Person<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        people<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">add</span><span class=\\"token punctuation\\">(</span>person<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">findPeopleByAge</span><span class=\\"token punctuation\\">(</span>age<span class=\\"token operator\\">:</span> Int<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> List<span class=\\"token operator\\">&lt;</span>Person<span class=\\"token operator\\">&gt;</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> people<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">filter</span> <span class=\\"token punctuation\\">{</span> it<span class=\\"token punctuation\\">.</span>age <span class=\\"token operator\\">==</span> age <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">getAverageAge</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> Double <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>people<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isNotEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            people<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span> <span class=\\"token punctuation\\">{</span> it<span class=\\"token punctuation\\">.</span>age <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">average</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token number\\">0.0</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">fun</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">val</span> repository <span class=\\"token operator\\">=</span> <span class=\\"token function\\">PersonRepository</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    repository<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addPerson</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Person</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"Alice\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">25</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    repository<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addPerson</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Person</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"Bob\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    repository<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addPerson</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">Person</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"Charlie\\"</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">25</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"People aged 25: </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span><span class=\\"token expression\\">repository<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">findPeopleByAge</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">25</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-literal singleline\\"><span class=\\"token string\\">\\"Average age: </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span><span class=\\"token expression\\">repository<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getAverageAge</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>SQL Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"sql\\"><div class=\\"code-language-label\\">SQL</div><pre class=\\"language-sql\\" data-processed data-language=\\"sql\\"><code class=\\"language-sql code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">-- SQL example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">TABLE</span> employees <span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">    id <span class=\\"token keyword\\">SERIAL</span> <span class=\\"token keyword\\">PRIMARY</span> <span class=\\"token keyword\\">KEY</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    first_name <span class=\\"token keyword\\">VARCHAR</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">NOT</span> <span class=\\"token boolean\\">NULL</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    last_name <span class=\\"token keyword\\">VARCHAR</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">NOT</span> <span class=\\"token boolean\\">NULL</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    email <span class=\\"token keyword\\">VARCHAR</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">UNIQUE</span> <span class=\\"token operator\\">NOT</span> <span class=\\"token boolean\\">NULL</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    department <span class=\\"token keyword\\">VARCHAR</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">50</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    salary <span class=\\"token keyword\\">DECIMAL</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    hire_date <span class=\\"token keyword\\">DATE</span> <span class=\\"token keyword\\">DEFAULT</span> <span class=\\"token keyword\\">CURRENT_DATE</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> employees <span class=\\"token punctuation\\">(</span>first_name<span class=\\"token punctuation\\">,</span> last_name<span class=\\"token punctuation\\">,</span> email<span class=\\"token punctuation\\">,</span> department<span class=\\"token punctuation\\">,</span> salary<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">VALUES</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'John'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Doe'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'john.doe@example.com'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Engineering'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">75000.00</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Jane'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Smith'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'jane.smith@example.com'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Marketing'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">65000.00</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Bob'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Johnson'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'bob.johnson@example.com'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Engineering'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">80000.00</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">SELECT</span>\\n</span><span class=\\"code-line\\">    department<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">AVG</span><span class=\\"token punctuation\\">(</span>salary<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> avg_salary<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">COUNT</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> employee_count\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">FROM</span> employees\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">GROUP</span> <span class=\\"token keyword\\">BY</span> department\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">HAVING</span> <span class=\\"token function\\">COUNT</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">1</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">ORDER</span> <span class=\\"token keyword\\">BY</span> avg_salary <span class=\\"token keyword\\">DESC</span><span class=\\"token punctuation\\">;</span>\\n</span></code></pre></div>\\n<h2>CSS Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"css\\"><div class=\\"code-language-label\\">CSS</div><pre class=\\"language-css\\" data-processed data-language=\\"css\\"><code class=\\"language-css code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">/* CSS example */</span>\\n</span><span class=\\"code-line\\"><span class=\\"token selector\\"><span class=\\"token pseudo-class\\">:root</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token variable\\">--primary-color</span><span class=\\"token punctuation\\">:</span> <span class=\\"token hexcode color\\">#3498db</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token variable\\">--secondary-color</span><span class=\\"token punctuation\\">:</span> <span class=\\"token hexcode color\\">#2ecc71</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token variable\\">--text-color</span><span class=\\"token punctuation\\">:</span> <span class=\\"token hexcode color\\">#333</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token variable\\">--bg-color</span><span class=\\"token punctuation\\">:</span> <span class=\\"token hexcode color\\">#f8f9fa</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token selector\\"><span class=\\"token class\\">.container</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">max-width</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1200</span><span class=\\"token unit\\">px</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">margin</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">0</span> auto<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">2</span><span class=\\"token unit\\">rem</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">background-color</span><span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">var</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">--bg-color</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token selector\\"><span class=\\"token class\\">.card</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">background</span><span class=\\"token punctuation\\">:</span> <span class=\\"token color\\">white</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">8</span><span class=\\"token unit\\">px</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">box-shadow</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">0</span> <span class=\\"token number\\">2</span><span class=\\"token unit\\">px</span> <span class=\\"token number\\">10</span><span class=\\"token unit\\">px</span> <span class=\\"token color\\"><span class=\\"token function\\">rgba</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0.1</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1.5</span><span class=\\"token unit\\">rem</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">margin-bottom</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token unit\\">rem</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">transition</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    transform <span class=\\"token number\\">0.3</span><span class=\\"token unit\\">s</span> ease<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    box-shadow <span class=\\"token number\\">0.3</span><span class=\\"token unit\\">s</span> ease<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token selector\\"><span class=\\"token class\\">.card</span><span class=\\"token pseudo-class\\">:hover</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">transform</span><span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">translateY</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">-5</span><span class=\\"token unit\\">px</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">box-shadow</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">0</span> <span class=\\"token number\\">5</span><span class=\\"token unit\\">px</span> <span class=\\"token number\\">20</span><span class=\\"token unit\\">px</span> <span class=\\"token color\\"><span class=\\"token function\\">rgba</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0.15</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token selector\\"><span class=\\"token class\\">.btn</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">display</span><span class=\\"token punctuation\\">:</span> inline-block<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">0.75</span><span class=\\"token unit\\">rem</span> <span class=\\"token number\\">1.5</span><span class=\\"token unit\\">rem</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">background-color</span><span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">var</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">--primary-color</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> <span class=\\"token color\\">white</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">text-decoration</span><span class=\\"token punctuation\\">:</span> none<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">border-radius</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">4</span><span class=\\"token unit\\">px</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">transition</span><span class=\\"token punctuation\\">:</span> background-color <span class=\\"token number\\">0.3</span><span class=\\"token unit\\">s</span> ease<span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token selector\\"><span class=\\"token class\\">.btn</span><span class=\\"token pseudo-class\\">:hover</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">background-color</span><span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">darken</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">var</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">--primary-color</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10</span><span class=\\"token unit\\">%</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token atrule\\"><span class=\\"token rule\\">@media</span> <span class=\\"token punctuation\\">(</span><span class=\\"token property\\">max-width</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">768</span><span class=\\"token unit\\">px</span><span class=\\"token punctuation\\">)</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token selector\\"><span class=\\"token class\\">.container</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token unit\\">rem</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token selector\\"><span class=\\"token class\\">.card</span></span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">padding</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token unit\\">rem</span><span class=\\"token punctuation\\">;</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>YAML Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yaml\\"><div class=\\"code-language-label\\">YAML</div><pre class=\\"language-yaml\\" data-processed data-language=\\"yaml\\"><code class=\\"language-yaml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># YAML example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">apiVersion</span><span class=\\"token punctuation\\">:</span> apps/v1\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">kind</span><span class=\\"token punctuation\\">:</span> Deployment\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">metadata</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> web<span class=\\"token punctuation\\">-</span>app\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">labels</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">app</span><span class=\\"token punctuation\\">:</span> web<span class=\\"token punctuation\\">-</span>app\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">version</span><span class=\\"token punctuation\\">:</span> v1.0.0\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">spec</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">replicas</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">3</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">selector</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">matchLabels</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">app</span><span class=\\"token punctuation\\">:</span> web<span class=\\"token punctuation\\">-</span>app\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">template</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">metadata</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">labels</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token key atrule\\">app</span><span class=\\"token punctuation\\">:</span> web<span class=\\"token punctuation\\">-</span>app\\n</span><span class=\\"code-line\\">    <span class=\\"token key atrule\\">spec</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token key atrule\\">containers</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> web<span class=\\"token punctuation\\">-</span>app\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">image</span><span class=\\"token punctuation\\">:</span> nginx<span class=\\"token punctuation\\">:</span><span class=\\"token number\\">1.21</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">ports</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">containerPort</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">80</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">env</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">name</span><span class=\\"token punctuation\\">:</span> NODE_ENV\\n</span><span class=\\"code-line\\">              <span class=\\"token key atrule\\">value</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'production'</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">resources</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">requests</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token key atrule\\">memory</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'64Mi'</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token key atrule\\">cpu</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'250m'</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">limits</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token key atrule\\">memory</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'128Mi'</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token key atrule\\">cpu</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'500m'</span>\\n</span><span class=\\"code-line\\">          <span class=\\"token key atrule\\">livenessProbe</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">httpGet</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">              <span class=\\"token key atrule\\">path</span><span class=\\"token punctuation\\">:</span> /health\\n</span><span class=\\"code-line\\">              <span class=\\"token key atrule\\">port</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">80</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">initialDelaySeconds</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">30</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token key atrule\\">periodSeconds</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">10</span>\\n</span></code></pre></div>\\n<h2>JSON Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"json\\"><div class=\\"code-language-label\\">JSON</div><pre class=\\"language-json\\" data-processed data-language=\\"json\\"><code class=\\"language-json code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"sample-project\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"version\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"1.0.0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"description\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"A sample project configuration\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"main\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"index.js\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"scripts\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"start\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"node index.js\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"dev\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"nodemon index.js\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"test\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"jest\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"build\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"webpack --mode=production\\"</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"dependencies\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"express\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"^4.18.0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"lodash\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"^4.17.21\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"axios\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"^0.27.0\\"</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"devDependencies\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"jest\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"^28.0.0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"nodemon\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"^2.0.0\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"webpack\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"^5.70.0\\"</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"author\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"name\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"John Doe\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"email\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"john@example.com\\"</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"license\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"MIT\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"repository\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"type\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"git\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token property\\">\\"url\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://github.com/user/sample-project.git\\"</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token property\\">\\"keywords\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"javascript\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"node\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"web\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"api\\"</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>Docker Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"dockerfile\\"><div class=\\"code-language-label\\">DOCKERFILE</div><pre class=\\"language-dockerfile\\" data-processed data-language=\\"dockerfile\\"><code class=\\"language-dockerfile code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Dockerfile example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">FROM</span> node:18-alpine <span class=\\"token keyword\\">AS</span> base</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Install dependencies only when needed</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">FROM</span> base <span class=\\"token keyword\\">AS</span> deps</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">WORKDIR</span> /app</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Install dependencies based on the preferred package manager</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">COPY</span> package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">RUN</span> <span class=\\"token operator\\">\\\\</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token instruction\\">  if [ -f yarn.lock ]; then yarn --frozen-lockfile; <span class=\\"token operator\\">\\\\</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token instruction\\">  elif [ -f package-lock.json ]; then npm ci; <span class=\\"token operator\\">\\\\</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token instruction\\">  elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm &amp;&amp; pnpm i --frozen-lockfile; <span class=\\"token operator\\">\\\\</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token instruction\\">  else echo <span class=\\"token string\\">\\"Lockfile not found.\\"</span> &amp;&amp; exit 1; <span class=\\"token operator\\">\\\\</span>\\n</span></span><span class=\\"code-line\\"><span class=\\"token instruction\\">  fi</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Rebuild the source code only when needed</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">FROM</span> base <span class=\\"token keyword\\">AS</span> builder</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">WORKDIR</span> /app</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">COPY</span> <span class=\\"token options\\"><span class=\\"token property\\">--from</span><span class=\\"token punctuation\\">=</span><span class=\\"token string\\">deps</span></span> /app/node_modules ./node_modules</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">COPY</span> . .</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">RUN</span> yarn build</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Production image, copy all the files and run next</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">FROM</span> base <span class=\\"token keyword\\">AS</span> runner</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">WORKDIR</span> /app</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">ENV</span> NODE_ENV production</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">RUN</span> addgroup --system --gid 1001 nodejs</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">RUN</span> adduser --system --uid 1001 nextjs</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">COPY</span> <span class=\\"token options\\"><span class=\\"token property\\">--from</span><span class=\\"token punctuation\\">=</span><span class=\\"token string\\">builder</span></span> /app/public ./public</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Automatically leverage output traces to reduce image size</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">COPY</span> <span class=\\"token options\\"><span class=\\"token property\\">--from</span><span class=\\"token punctuation\\">=</span><span class=\\"token string\\">builder</span> <span class=\\"token property\\">--chown</span><span class=\\"token punctuation\\">=</span><span class=\\"token string\\">nextjs:nodejs</span></span> /app/.next/standalone ./</span>\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">COPY</span> <span class=\\"token options\\"><span class=\\"token property\\">--from</span><span class=\\"token punctuation\\">=</span><span class=\\"token string\\">builder</span> <span class=\\"token property\\">--chown</span><span class=\\"token punctuation\\">=</span><span class=\\"token string\\">nextjs:nodejs</span></span> /app/.next/static ./.next/static</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">USER</span> nextjs</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">EXPOSE</span> 3000</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">ENV</span> PORT 3000</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token instruction\\"><span class=\\"token keyword\\">CMD</span> [<span class=\\"token string\\">\\"node\\"</span>, <span class=\\"token string\\">\\"server.js\\"</span>]</span>\\n</span></code></pre></div>\\n<h2>Regex Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"regex\\"><div class=\\"code-language-label\\">REGEX</div><pre class=\\"language-regex\\" data-processed data-language=\\"regex\\"><code class=\\"language-regex code-highlight\\"><span class=\\"code-line\\"># Regex examples\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"># Email validation\\n</span><span class=\\"code-line\\"><span class=\\"token anchor function\\">^</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">a<span class=\\"token range-punctuation operator\\">-</span>z</span><span class=\\"token range\\">A<span class=\\"token range-punctuation operator\\">-</span>Z</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span>._%+-<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">+</span>@<span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">a<span class=\\"token range-punctuation operator\\">-</span>z</span><span class=\\"token range\\">A<span class=\\"token range-punctuation operator\\">-</span>Z</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span>.-<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">+</span><span class=\\"token special-escape escape\\">\\\\.</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">a<span class=\\"token range-punctuation operator\\">-</span>z</span><span class=\\"token range\\">A<span class=\\"token range-punctuation operator\\">-</span>Z</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">{2,}</span><span class=\\"token anchor function\\">$</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"># Phone number <span class=\\"token group punctuation\\">(</span>US format<span class=\\"token group punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token anchor function\\">^</span><span class=\\"token special-escape escape\\">\\\\(</span><span class=\\"token char-set class-name\\">\\\\d</span><span class=\\"token quantifier number\\">{3}</span><span class=\\"token special-escape escape\\">\\\\)</span><span class=\\"token char-set class-name\\">\\\\s</span><span class=\\"token char-set class-name\\">\\\\d</span><span class=\\"token quantifier number\\">{3}</span>-<span class=\\"token char-set class-name\\">\\\\d</span><span class=\\"token quantifier number\\">{4}</span><span class=\\"token anchor function\\">$</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"># URL validation\\n</span><span class=\\"code-line\\"><span class=\\"token anchor function\\">^</span>https<span class=\\"token quantifier number\\">?</span>:<span class=\\"token escape\\">\\\\/</span><span class=\\"token escape\\">\\\\/</span><span class=\\"token group punctuation\\">(</span>www<span class=\\"token special-escape escape\\">\\\\.</span><span class=\\"token group punctuation\\">)</span><span class=\\"token quantifier number\\">?</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span>-<span class=\\"token range\\">a<span class=\\"token range-punctuation operator\\">-</span>z</span><span class=\\"token range\\">A<span class=\\"token range-punctuation operator\\">-</span>Z</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span>@:%._<span class=\\"token special-escape escape\\">\\\\+</span>~#=<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">{1,256}</span><span class=\\"token special-escape escape\\">\\\\.</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">a<span class=\\"token range-punctuation operator\\">-</span>z</span><span class=\\"token range\\">A<span class=\\"token range-punctuation operator\\">-</span>Z</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span>()<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">{1,6}</span><span class=\\"token anchor function\\">\\\\b</span><span class=\\"token group punctuation\\">(</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span>-<span class=\\"token range\\">a<span class=\\"token range-punctuation operator\\">-</span>z</span><span class=\\"token range\\">A<span class=\\"token range-punctuation operator\\">-</span>Z</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span>()@:%_<span class=\\"token special-escape escape\\">\\\\+</span>.~#?&amp;//=<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">*</span><span class=\\"token group punctuation\\">)</span><span class=\\"token anchor function\\">$</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"># Password strength <span class=\\"token group punctuation\\">(</span>8<span class=\\"token quantifier number\\">+</span> chars, uppercase, lowercase, number, special char<span class=\\"token group punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token anchor function\\">^</span><span class=\\"token group punctuation\\">(?=</span><span class=\\"token char-set class-name\\">.</span><span class=\\"token quantifier number\\">*</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">a<span class=\\"token range-punctuation operator\\">-</span>z</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token group punctuation\\">)</span><span class=\\"token group punctuation\\">(?=</span><span class=\\"token char-set class-name\\">.</span><span class=\\"token quantifier number\\">*</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">A<span class=\\"token range-punctuation operator\\">-</span>Z</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token group punctuation\\">)</span><span class=\\"token group punctuation\\">(?=</span><span class=\\"token char-set class-name\\">.</span><span class=\\"token quantifier number\\">*</span><span class=\\"token char-set class-name\\">\\\\d</span><span class=\\"token group punctuation\\">)</span><span class=\\"token group punctuation\\">(?=</span><span class=\\"token char-set class-name\\">.</span><span class=\\"token quantifier number\\">*</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span>@$!%*?&amp;<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token group punctuation\\">)</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">A<span class=\\"token range-punctuation operator\\">-</span>Z</span><span class=\\"token range\\">a<span class=\\"token range-punctuation operator\\">-</span>z</span><span class=\\"token char-set class-name\\">\\\\d</span>@$!%*?&amp;<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">{8,}</span><span class=\\"token anchor function\\">$</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"># IPv4 address\\n</span><span class=\\"code-line\\"><span class=\\"token anchor function\\">^</span><span class=\\"token group punctuation\\">(?:</span><span class=\\"token group punctuation\\">(?:</span>25<span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>5</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token alternation keyword\\">|</span>2<span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>4</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token alternation keyword\\">|</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span>01<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">?</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">?</span><span class=\\"token group punctuation\\">)</span><span class=\\"token special-escape escape\\">\\\\.</span><span class=\\"token group punctuation\\">)</span><span class=\\"token quantifier number\\">{3}</span><span class=\\"token group punctuation\\">(?:</span>25<span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>5</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token alternation keyword\\">|</span>2<span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>4</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token alternation keyword\\">|</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span>01<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">?</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token range\\">0<span class=\\"token range-punctuation operator\\">-</span>9</span><span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">?</span><span class=\\"token group punctuation\\">)</span><span class=\\"token anchor function\\">$</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"># Credit card number <span class=\\"token group punctuation\\">(</span>basic format<span class=\\"token group punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token anchor function\\">^</span><span class=\\"token char-set class-name\\">\\\\d</span><span class=\\"token quantifier number\\">{4}</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token char-set class-name\\">\\\\s</span>-<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">?</span><span class=\\"token char-set class-name\\">\\\\d</span><span class=\\"token quantifier number\\">{4}</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token char-set class-name\\">\\\\s</span>-<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">?</span><span class=\\"token char-set class-name\\">\\\\d</span><span class=\\"token quantifier number\\">{4}</span><span class=\\"token char-class\\"><span class=\\"token char-class-punctuation punctuation\\">[</span><span class=\\"token char-set class-name\\">\\\\s</span>-<span class=\\"token char-class-punctuation punctuation\\">]</span></span><span class=\\"token quantifier number\\">?</span><span class=\\"token char-set class-name\\">\\\\d</span><span class=\\"token quantifier number\\">{4}</span><span class=\\"token anchor function\\">$</span>\\n</span></code></pre></div>\\n<h2>XML Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"xml\\"><div class=\\"code-language-label\\">XML</div><pre class=\\"language-xml\\" data-processed data-language=\\"xml\\"><code class=\\"language-xml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token prolog\\">&lt;?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?&gt;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">&lt;!-- XML example --&gt;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>bookstore</span> <span class=\\"token attr-name\\"><span class=\\"token namespace\\">xmlns:</span>fiction</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>http://example.com/fiction<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>book</span> <span class=\\"token attr-name\\">id</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>1<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">category</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>fiction<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>title</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>en<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>The Great Gatsby<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>title</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>author</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>first-name</span><span class=\\"token punctuation\\">&gt;</span></span>F. Scott<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>first-name</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>last-name</span><span class=\\"token punctuation\\">&gt;</span></span>Fitzgerald<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>last-name</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>author</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>year</span><span class=\\"token punctuation\\">&gt;</span></span>1925<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>year</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>price</span> <span class=\\"token attr-name\\">currency</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>USD<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>12.99<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>price</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>description</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">            <span class=\\"token cdata\\">&lt;![CDATA[\\n</span></span><span class=\\"code-line\\"><span class=\\"token cdata\\">                A classic American novel set in the Jazz Age.\\n</span></span><span class=\\"code-line\\"><span class=\\"token cdata\\">                It explores themes of wealth, love, and the American Dream.\\n</span></span><span class=\\"code-line\\"><span class=\\"token cdata\\">            ]]&gt;</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>description</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>book</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>book</span> <span class=\\"token attr-name\\">id</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>2<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">category</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>science<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>title</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>en<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>A Brief History of Time<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>title</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>author</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>first-name</span><span class=\\"token punctuation\\">&gt;</span></span>Stephen<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>first-name</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>last-name</span><span class=\\"token punctuation\\">&gt;</span></span>Hawking<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>last-name</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>author</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>year</span><span class=\\"token punctuation\\">&gt;</span></span>1988<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>year</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>price</span> <span class=\\"token attr-name\\">currency</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>USD<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>15.99<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>price</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>topics</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>topic</span><span class=\\"token punctuation\\">&gt;</span></span>Cosmology<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>topic</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>topic</span><span class=\\"token punctuation\\">&gt;</span></span>Black Holes<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>topic</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>topic</span><span class=\\"token punctuation\\">&gt;</span></span>Quantum Mechanics<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>topic</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>topics</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\">    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>book</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span><span class=\\"code-line\\"><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>bookstore</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</span></code></pre></div>\\n<h2>Scala Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"scala\\"><div class=\\"code-language-label\\">SCALA</div><pre class=\\"language-scala\\" data-processed data-language=\\"scala\\"><code class=\\"language-scala code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// Scala example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">import</span> <span class=\\"token namespace\\">scala<span class=\\"token punctuation\\">.</span>collection<span class=\\"token punctuation\\">.</span>mutable</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">case</span> <span class=\\"token keyword\\">class</span> Product<span class=\\"token punctuation\\">(</span>id<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Int</span><span class=\\"token punctuation\\">,</span> name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">String</span><span class=\\"token punctuation\\">,</span> price<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Double</span><span class=\\"token punctuation\\">,</span> category<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">String</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> ShoppingCart <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">val</span> items <span class=\\"token operator\\">=</span> mutable<span class=\\"token punctuation\\">.</span>Map<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">Int</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span>Product<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">Int</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">def</span> addItem<span class=\\"token punctuation\\">(</span>product<span class=\\"token operator\\">:</span> Product<span class=\\"token punctuation\\">,</span> quantity<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Int</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Unit</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    items<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>product<span class=\\"token punctuation\\">.</span>id<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">match</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token keyword\\">case</span> Some<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>existingProduct<span class=\\"token punctuation\\">,</span> existingQuantity<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">=&gt;</span>\\n</span><span class=\\"code-line\\">        items<span class=\\"token punctuation\\">(</span>product<span class=\\"token punctuation\\">.</span>id<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>existingProduct<span class=\\"token punctuation\\">,</span> existingQuantity <span class=\\"token operator\\">+</span> quantity<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">      <span class=\\"token keyword\\">case</span> None <span class=\\"token keyword\\">=&gt;</span>\\n</span><span class=\\"code-line\\">        items<span class=\\"token punctuation\\">(</span>product<span class=\\"token punctuation\\">.</span>id<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>product<span class=\\"token punctuation\\">,</span> quantity<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">def</span> removeItem<span class=\\"token punctuation\\">(</span>productId<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Int</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Unit</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    items<span class=\\"token punctuation\\">.</span>remove<span class=\\"token punctuation\\">(</span>productId<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">def</span> getTotalPrice<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Double</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    items<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">.</span>map <span class=\\"token punctuation\\">{</span> <span class=\\"token keyword\\">case</span> <span class=\\"token punctuation\\">(</span>product<span class=\\"token punctuation\\">,</span> quantity<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">=&gt;</span>\\n</span><span class=\\"code-line\\">      product<span class=\\"token punctuation\\">.</span>price <span class=\\"token operator\\">*</span> quantity\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">.</span>sum\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">def</span> getItemCount<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Int</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    items<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">.</span>map<span class=\\"token punctuation\\">(</span>_<span class=\\"token punctuation\\">.</span>_2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>sum\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">def</span> getItemsByCategory<span class=\\"token punctuation\\">(</span>category<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">String</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> List<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">(</span>Product<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">Int</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    items<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">.</span>filter<span class=\\"token punctuation\\">(</span>_<span class=\\"token punctuation\\">.</span>_1<span class=\\"token punctuation\\">.</span>category <span class=\\"token operator\\">==</span> category<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>toList\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">object</span> ShoppingApp <span class=\\"token keyword\\">extends</span> App <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">val</span> cart <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> ShoppingCart<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">val</span> laptop <span class=\\"token operator\\">=</span> Product<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"MacBook Pro\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1999.99</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Electronics\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">val</span> book <span class=\\"token operator\\">=</span> Product<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Scala Programming\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">45.99</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Books\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  cart<span class=\\"token punctuation\\">.</span>addItem<span class=\\"token punctuation\\">(</span>laptop<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  cart<span class=\\"token punctuation\\">.</span>addItem<span class=\\"token punctuation\\">(</span>book<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  println<span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token id function\\">s</span><span class=\\"token string\\">\\"Total items: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">\${</span><span class=\\"token expression\\">cart<span class=\\"token punctuation\\">.</span>getItemCount</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  println<span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token id function\\">f</span><span class=\\"token string\\">\\"Total price: </span><span class=\\"token escape symbol\\">$$</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">\${</span><span class=\\"token expression\\">cart<span class=\\"token punctuation\\">.</span>getTotalPrice</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">%.2f\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h2>Haskell Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"haskell\\"><div class=\\"code-language-label\\">HASKELL</div><pre class=\\"language-haskell\\" data-processed data-language=\\"haskell\\"><code class=\\"language-haskell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">-- Haskell example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">module</span> <span class=\\"token constant\\">Main</span> <span class=\\"token keyword\\">where</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token import-statement\\"><span class=\\"token keyword\\">import</span> Data<span class=\\"token punctuation\\">.</span>List</span> <span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">sort</span><span class=\\"token punctuation\\">,</span> <span class=\\"token hvariable\\">nub</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Define a custom data type</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">data</span> <span class=\\"token constant\\">Person</span> <span class=\\"token operator\\">=</span> <span class=\\"token constant\\">Person</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span> <span class=\\"token hvariable\\">name</span> <span class=\\"token operator\\">::</span> <span class=\\"token constant\\">String</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">,</span> <span class=\\"token hvariable\\">age</span> <span class=\\"token operator\\">::</span> <span class=\\"token constant\\">Int</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">,</span> <span class=\\"token hvariable\\">email</span> <span class=\\"token operator\\">::</span> <span class=\\"token constant\\">String</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">deriving</span> <span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">Show</span><span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">Eq</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Function to check if a person is an adult</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">isAdult</span> <span class=\\"token operator\\">::</span> <span class=\\"token constant\\">Person</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token constant\\">Bool</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">isAdult</span> <span class=\\"token hvariable\\">person</span> <span class=\\"token operator\\">=</span> <span class=\\"token hvariable\\">age</span> <span class=\\"token hvariable\\">person</span> <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">18</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Function to get unique ages from a list of people</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">getUniqueAges</span> <span class=\\"token operator\\">::</span> <span class=\\"token punctuation\\">[</span><span class=\\"token constant\\">Person</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token punctuation\\">[</span><span class=\\"token constant\\">Int</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">getUniqueAges</span> <span class=\\"token hvariable\\">people</span> <span class=\\"token operator\\">=</span> <span class=\\"token hvariable\\">nub</span> <span class=\\"token operator\\">$</span> <span class=\\"token builtin\\">sort</span> <span class=\\"token operator\\">$</span> <span class=\\"token builtin\\">map</span> <span class=\\"token hvariable\\">age</span> <span class=\\"token hvariable\\">people</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Function to filter adults and sort by age</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">getAdultsSortedByAge</span> <span class=\\"token operator\\">::</span> <span class=\\"token punctuation\\">[</span><span class=\\"token constant\\">Person</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token punctuation\\">[</span><span class=\\"token constant\\">Person</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">getAdultsSortedByAge</span> <span class=\\"token hvariable\\">people</span> <span class=\\"token operator\\">=</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token hvariable\\">sortBy</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">\\\\</span><span class=\\"token hvariable\\">p1</span> <span class=\\"token hvariable\\">p2</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token builtin\\">compare</span> <span class=\\"token punctuation\\">(</span><span class=\\"token hvariable\\">age</span> <span class=\\"token hvariable\\">p1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token hvariable\\">age</span> <span class=\\"token hvariable\\">p2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">$</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">filter</span> <span class=\\"token hvariable\\">isAdult</span> <span class=\\"token hvariable\\">people</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token keyword\\">where</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token hvariable\\">sortBy</span> <span class=\\"token hvariable\\">cmp</span> <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">map</span> <span class=\\"token builtin\\">snd</span> <span class=\\"token operator\\">.</span> <span class=\\"token builtin\\">sort</span> <span class=\\"token operator\\">.</span> <span class=\\"token builtin\\">map</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">\\\\</span><span class=\\"token hvariable\\">x</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token punctuation\\">(</span><span class=\\"token hvariable\\">cmp</span> <span class=\\"token hvariable\\">x</span> <span class=\\"token builtin\\">undefined</span><span class=\\"token punctuation\\">,</span> <span class=\\"token hvariable\\">x</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Recursive function to calculate factorial</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">factorial</span> <span class=\\"token operator\\">::</span> <span class=\\"token constant\\">Integer</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token constant\\">Integer</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">factorial</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">factorial</span> <span class=\\"token hvariable\\">n</span> <span class=\\"token operator\\">=</span> <span class=\\"token hvariable\\">n</span> <span class=\\"token operator\\">*</span> <span class=\\"token hvariable\\">factorial</span> <span class=\\"token punctuation\\">(</span><span class=\\"token hvariable\\">n</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Function using list comprehension</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">generatePairs</span> <span class=\\"token operator\\">::</span> <span class=\\"token punctuation\\">[</span><span class=\\"token constant\\">Int</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">Int</span><span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">Int</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">generatePairs</span> <span class=\\"token hvariable\\">xs</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">(</span><span class=\\"token hvariable\\">x</span><span class=\\"token punctuation\\">,</span> <span class=\\"token hvariable\\">y</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token hvariable\\">x</span> <span class=\\"token operator\\">&lt;-</span> <span class=\\"token hvariable\\">xs</span><span class=\\"token punctuation\\">,</span> <span class=\\"token hvariable\\">y</span> <span class=\\"token operator\\">&lt;-</span> <span class=\\"token hvariable\\">xs</span><span class=\\"token punctuation\\">,</span> <span class=\\"token hvariable\\">x</span> <span class=\\"token operator\\">&lt;</span> <span class=\\"token hvariable\\">y</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">main</span> <span class=\\"token operator\\">::</span> <span class=\\"token constant\\">IO</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token hvariable\\">main</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">do</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">let</span> <span class=\\"token hvariable\\">people</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span> <span class=\\"token constant\\">Person</span> <span class=\\"token string\\">\\"Alice\\"</span> <span class=\\"token number\\">25</span> <span class=\\"token string\\">\\"alice@example.com\\"</span>\\n</span><span class=\\"code-line\\">                 <span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">Person</span> <span class=\\"token string\\">\\"Bob\\"</span> <span class=\\"token number\\">17</span> <span class=\\"token string\\">\\"bob@example.com\\"</span>\\n</span><span class=\\"code-line\\">                 <span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">Person</span> <span class=\\"token string\\">\\"Charlie\\"</span> <span class=\\"token number\\">30</span> <span class=\\"token string\\">\\"charlie@example.com\\"</span>\\n</span><span class=\\"code-line\\">                 <span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">putStrLn</span> <span class=\\"token string\\">\\"All people:\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">mapM_</span> <span class=\\"token builtin\\">print</span> <span class=\\"token hvariable\\">people</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">putStrLn</span> <span class=\\"token string\\">\\"\\\\nAdults only:\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">mapM_</span> <span class=\\"token builtin\\">print</span> <span class=\\"token operator\\">$</span> <span class=\\"token hvariable\\">getAdultsSortedByAge</span> <span class=\\"token hvariable\\">people</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">putStrLn</span> <span class=\\"token operator\\">$</span> <span class=\\"token string\\">\\"\\\\nUnique ages: \\"</span> <span class=\\"token operator\\">++</span> <span class=\\"token builtin\\">show</span> <span class=\\"token punctuation\\">(</span><span class=\\"token hvariable\\">getUniqueAges</span> <span class=\\"token hvariable\\">people</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">putStrLn</span> <span class=\\"token operator\\">$</span> <span class=\\"token string\\">\\"Factorial of 5: \\"</span> <span class=\\"token operator\\">++</span> <span class=\\"token builtin\\">show</span> <span class=\\"token punctuation\\">(</span><span class=\\"token hvariable\\">factorial</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">putStrLn</span> <span class=\\"token operator\\">$</span> <span class=\\"token string\\">\\"Pairs from [1,2,3,4]: \\"</span> <span class=\\"token operator\\">++</span> <span class=\\"token builtin\\">show</span> <span class=\\"token punctuation\\">(</span><span class=\\"token hvariable\\">generatePairs</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<h2>Lua Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"lua\\"><div class=\\"code-language-label\\">LUA</div><pre class=\\"language-lua\\" data-processed data-language=\\"lua\\"><code class=\\"language-lua code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">-- Lua example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">local</span> json <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"json\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Define a class-like table</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">local</span> Person <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">Person<span class=\\"token punctuation\\">.</span>__index <span class=\\"token operator\\">=</span> Person\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">function</span> Person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> occupation<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">local</span> instance <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        age <span class=\\"token operator\\">=</span> age<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        occupation <span class=\\"token operator\\">=</span> occupation <span class=\\"token keyword\\">or</span> <span class=\\"token string\\">\\"Unemployed\\"</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">setmetatable</span><span class=\\"token punctuation\\">(</span>instance<span class=\\"token punctuation\\">,</span> Person<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> instance\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">function</span> Person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">introduce</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> string<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hi, I'm %s, %d years old, working as %s\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                        self<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span> self<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">,</span> self<span class=\\"token punctuation\\">.</span>occupation<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">function</span> Person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">canVote</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> self<span class=\\"token punctuation\\">.</span>age <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">18</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">function</span> Person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">toJSON</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> json<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">encode</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        name <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        age <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        occupation <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>occupation\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Employee class inherits from Person</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">local</span> Employee <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">Employee<span class=\\"token punctuation\\">.</span>__index <span class=\\"token operator\\">=</span> Employee\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">setmetatable</span><span class=\\"token punctuation\\">(</span>Employee<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>__index <span class=\\"token operator\\">=</span> Person<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">function</span> Employee<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> occupation<span class=\\"token punctuation\\">,</span> salary<span class=\\"token punctuation\\">,</span> department<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">local</span> instance <span class=\\"token operator\\">=</span> Person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">,</span> occupation<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    instance<span class=\\"token punctuation\\">.</span>salary <span class=\\"token operator\\">=</span> salary\\n</span><span class=\\"code-line\\">    instance<span class=\\"token punctuation\\">.</span>department <span class=\\"token operator\\">=</span> department\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">setmetatable</span><span class=\\"token punctuation\\">(</span>instance<span class=\\"token punctuation\\">,</span> Employee<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> instance\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">function</span> Employee<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">getAnnualSalary</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> self<span class=\\"token punctuation\\">.</span>salary <span class=\\"token operator\\">*</span> <span class=\\"token number\\">12</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">function</span> Employee<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">promote</span><span class=\\"token punctuation\\">(</span>newSalary<span class=\\"token punctuation\\">,</span> newDepartment<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    self<span class=\\"token punctuation\\">.</span>salary <span class=\\"token operator\\">=</span> newSalary <span class=\\"token keyword\\">or</span> self<span class=\\"token punctuation\\">.</span>salary\\n</span><span class=\\"code-line\\">    self<span class=\\"token punctuation\\">.</span>department <span class=\\"token operator\\">=</span> newDepartment <span class=\\"token keyword\\">or</span> self<span class=\\"token punctuation\\">.</span>department\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">print</span><span class=\\"token punctuation\\">(</span>string<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%s has been promoted!\\"</span><span class=\\"token punctuation\\">,</span> self<span class=\\"token punctuation\\">.</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">-- Usage example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">local</span> <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">local</span> people <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token comment\\">-- Create some people</span>\\n</span><span class=\\"code-line\\">    table<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">insert</span><span class=\\"token punctuation\\">(</span>people<span class=\\"token punctuation\\">,</span> Person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Alice\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">25</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Designer\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    table<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">insert</span><span class=\\"token punctuation\\">(</span>people<span class=\\"token punctuation\\">,</span> Employee<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Bob\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Developer\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5000</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Engineering\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    table<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">insert</span><span class=\\"token punctuation\\">(</span>people<span class=\\"token punctuation\\">,</span> Person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">new</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Charlie\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">16</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Student\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token comment\\">-- Process each person</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">for</span> i<span class=\\"token punctuation\\">,</span> person <span class=\\"token keyword\\">in</span> <span class=\\"token function\\">ipairs</span><span class=\\"token punctuation\\">(</span>people<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">do</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">print</span><span class=\\"token punctuation\\">(</span>string<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d. %s\\"</span><span class=\\"token punctuation\\">,</span> i<span class=\\"token punctuation\\">,</span> person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">introduce</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">print</span><span class=\\"token punctuation\\">(</span>string<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"   Can vote: %s\\"</span><span class=\\"token punctuation\\">,</span> person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">canVote</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">and</span> <span class=\\"token string\\">\\"Yes\\"</span> <span class=\\"token keyword\\">or</span> <span class=\\"token string\\">\\"No\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\">-- Check if it's an employee</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> person<span class=\\"token punctuation\\">.</span>salary <span class=\\"token keyword\\">then</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token function\\">print</span><span class=\\"token punctuation\\">(</span>string<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"   Annual salary: $%d\\"</span><span class=\\"token punctuation\\">,</span> person<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">getAnnualSalary</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token comment\\">-- Demonstrate promotion</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">local</span> bob <span class=\\"token operator\\">=</span> people<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">if</span> bob<span class=\\"token punctuation\\">.</span>salary <span class=\\"token keyword\\">then</span>\\n</span><span class=\\"code-line\\">        bob<span class=\\"token punctuation\\">:</span><span class=\\"token function\\">promote</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">6000</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Senior Engineering\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">end</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<h2>R Example</h2>\\n<div class=\\"code-block-wrapper\\" data-language=\\"r\\"><div class=\\"code-language-label\\">R</div><pre class=\\"language-r\\" data-processed data-language=\\"r\\"><code class=\\"language-r code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># R example</span>\\n</span><span class=\\"code-line\\">library<span class=\\"token punctuation\\">(</span>ggplot2<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">library<span class=\\"token punctuation\\">(</span>dplyr<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Create sample data</span>\\n</span><span class=\\"code-line\\">set.seed<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">123</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">students <span class=\\"token operator\\">&lt;-</span> data.frame<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">  id <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  name <span class=\\"token operator\\">=</span> paste<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Student\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token operator\\">:</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  math_score <span class=\\"token operator\\">=</span> rnorm<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> mean <span class=\\"token operator\\">=</span> <span class=\\"token number\\">75</span><span class=\\"token punctuation\\">,</span> sd <span class=\\"token operator\\">=</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  science_score <span class=\\"token operator\\">=</span> rnorm<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> mean <span class=\\"token operator\\">=</span> <span class=\\"token number\\">80</span><span class=\\"token punctuation\\">,</span> sd <span class=\\"token operator\\">=</span> <span class=\\"token number\\">12</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  english_score <span class=\\"token operator\\">=</span> rnorm<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> mean <span class=\\"token operator\\">=</span> <span class=\\"token number\\">78</span><span class=\\"token punctuation\\">,</span> sd <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  grade_level <span class=\\"token operator\\">=</span> sample<span class=\\"token punctuation\\">(</span>c<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Freshman\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Sophomore\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Junior\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"Senior\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> replace <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">TRUE</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">  stringsAsFactors <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">FALSE</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Data analysis functions</span>\\n</span><span class=\\"code-line\\">calculate_gpa <span class=\\"token operator\\">&lt;-</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span>math<span class=\\"token punctuation\\">,</span> science<span class=\\"token punctuation\\">,</span> english<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  avg_score <span class=\\"token operator\\">&lt;-</span> <span class=\\"token punctuation\\">(</span>math <span class=\\"token operator\\">+</span> science <span class=\\"token operator\\">+</span> english<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">3</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  <span class=\\"token comment\\"># Convert to GPA scale (4.0)</span>\\n</span><span class=\\"code-line\\">  gpa <span class=\\"token operator\\">&lt;-</span> case_when<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">97</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">4.0</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">93</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">3.7</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">90</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">3.3</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">87</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">3.0</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">83</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">2.7</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">80</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">2.3</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">77</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">2.0</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">73</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">1.7</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">70</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">1.3</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_score <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">67</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">1.0</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token boolean\\">TRUE</span> <span class=\\"token operator\\">~</span> <span class=\\"token number\\">0.0</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">  return<span class=\\"token punctuation\\">(</span>gpa<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Add calculated columns</span>\\n</span><span class=\\"code-line\\">students <span class=\\"token operator\\">&lt;-</span> students <span class=\\"token percent-operator operator\\">%&gt;%</span>\\n</span><span class=\\"code-line\\">  mutate<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">    gpa <span class=\\"token operator\\">=</span> calculate_gpa<span class=\\"token punctuation\\">(</span>math_score<span class=\\"token punctuation\\">,</span> science_score<span class=\\"token punctuation\\">,</span> english_score<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    total_score <span class=\\"token operator\\">=</span> math_score <span class=\\"token operator\\">+</span> science_score <span class=\\"token operator\\">+</span> english_score<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    honor_roll <span class=\\"token operator\\">=</span> gpa <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">3.5</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Summary statistics by grade level</span>\\n</span><span class=\\"code-line\\">grade_summary <span class=\\"token operator\\">&lt;-</span> students <span class=\\"token percent-operator operator\\">%&gt;%</span>\\n</span><span class=\\"code-line\\">  group_by<span class=\\"token punctuation\\">(</span>grade_level<span class=\\"token punctuation\\">)</span> <span class=\\"token percent-operator operator\\">%&gt;%</span>\\n</span><span class=\\"code-line\\">  summarise<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">    count <span class=\\"token operator\\">=</span> n<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_gpa <span class=\\"token operator\\">=</span> round<span class=\\"token punctuation\\">(</span>mean<span class=\\"token punctuation\\">(</span>gpa<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_math <span class=\\"token operator\\">=</span> round<span class=\\"token punctuation\\">(</span>mean<span class=\\"token punctuation\\">(</span>math_score<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_science <span class=\\"token operator\\">=</span> round<span class=\\"token punctuation\\">(</span>mean<span class=\\"token punctuation\\">(</span>science_score<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    avg_english <span class=\\"token operator\\">=</span> round<span class=\\"token punctuation\\">(</span>mean<span class=\\"token punctuation\\">(</span>english_score<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    honor_roll_pct <span class=\\"token operator\\">=</span> round<span class=\\"token punctuation\\">(</span>mean<span class=\\"token punctuation\\">(</span>honor_roll<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">100</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    .groups <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'drop'</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">print<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Grade Level Summary:\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">print<span class=\\"token punctuation\\">(</span>grade_summary<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Create visualization</span>\\n</span><span class=\\"code-line\\">gpa_plot <span class=\\"token operator\\">&lt;-</span> ggplot<span class=\\"token punctuation\\">(</span>students<span class=\\"token punctuation\\">,</span> aes<span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">=</span> grade_level<span class=\\"token punctuation\\">,</span> y <span class=\\"token operator\\">=</span> gpa<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span>\\n</span><span class=\\"code-line\\">  geom_boxplot<span class=\\"token punctuation\\">(</span>aes<span class=\\"token punctuation\\">(</span>fill <span class=\\"token operator\\">=</span> grade_level<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> alpha <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0.7</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span>\\n</span><span class=\\"code-line\\">  geom_jitter<span class=\\"token punctuation\\">(</span>width <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0.2</span><span class=\\"token punctuation\\">,</span> alpha <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0.5</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span>\\n</span><span class=\\"code-line\\">  scale_fill_brewer<span class=\\"token punctuation\\">(</span>type <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"qual\\"</span><span class=\\"token punctuation\\">,</span> palette <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Set2\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span>\\n</span><span class=\\"code-line\\">  labs<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">    title <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"GPA Distribution by Grade Level\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    x <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Grade Level\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    y <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"GPA (4.0 scale)\\"</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    fill <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Grade Level\\"</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span>\\n</span><span class=\\"code-line\\">  theme_minimal<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span>\\n</span><span class=\\"code-line\\">  theme<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">    plot.title <span class=\\"token operator\\">=</span> element_text<span class=\\"token punctuation\\">(</span>hjust <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0.5</span><span class=\\"token punctuation\\">,</span> size <span class=\\"token operator\\">=</span> <span class=\\"token number\\">14</span><span class=\\"token punctuation\\">,</span> face <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"bold\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">    legend.position <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"none\\"</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Display the plot</span>\\n</span><span class=\\"code-line\\">print<span class=\\"token punctuation\\">(</span>gpa_plot<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Find top performers</span>\\n</span><span class=\\"code-line\\">top_students <span class=\\"token operator\\">&lt;-</span> students <span class=\\"token percent-operator operator\\">%&gt;%</span>\\n</span><span class=\\"code-line\\">  arrange<span class=\\"token punctuation\\">(</span>desc<span class=\\"token punctuation\\">(</span>gpa<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token percent-operator operator\\">%&gt;%</span>\\n</span><span class=\\"code-line\\">  head<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span> <span class=\\"token percent-operator operator\\">%&gt;%</span>\\n</span><span class=\\"code-line\\">  select<span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">,</span> grade_level<span class=\\"token punctuation\\">,</span> gpa<span class=\\"token punctuation\\">,</span> math_score<span class=\\"token punctuation\\">,</span> science_score<span class=\\"token punctuation\\">,</span> english_score<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">print<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Top 10 Students by GPA:\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">print<span class=\\"token punctuation\\">(</span>top_students<span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<h2>Long Line Examples</h2>\\n<p>Test cases for horizontal scrolling when code lines are very long:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"javascript\\"><div class=\\"code-language-label\\">JAVASCRIPT</div><pre class=\\"language-javascript\\" data-processed data-language=\\"javascript\\"><code class=\\"language-javascript code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// Very long JavaScript line example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">const</span> veryLongVariableName <span class=\\"token operator\\">=</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token string\\">'This is an extremely long string that should definitely cause horizontal scrolling in the code block when displayed in a web browser because it contains way more text than can fit in a normal width container and should demonstrate the horizontal scrollbar functionality that we just implemented for code blocks'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">// Another long line with method chaining</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">const</span> result <span class=\\"token operator\\">=</span> someVeryLongObjectNameWithManyProperties\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">.</span><span class=\\"token method function property-access\\">methodWithAVeryLongName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">.</span><span class=\\"token method function property-access\\">anotherMethodWithAnEvenLongerName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">.</span><span class=\\"token method function property-access\\">yetAnotherMethodThatHasAnExtremelyLongNameForDemonstrationPurposes</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token punctuation\\">.</span><span class=\\"token method function property-access\\">finalMethod</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"bash\\"><div class=\\"code-language-label\\">BASH</div><pre class=\\"language-bash\\" data-processed data-language=\\"bash\\"><code class=\\"language-bash code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Very long bash command example</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">curl</span> <span class=\\"token parameter variable\\">-X</span> POST <span class=\\"token string\\">\\"https://api.example.com/v1/very/long/endpoint/path/that/goes/on/forever/and/should/cause/horizontal/scrolling\\"</span> <span class=\\"token parameter variable\\">-H</span> <span class=\\"token string\\">\\"Authorization: Bearer very_long_token_here_that_makes_the_line_extremely_wide_for_testing_purposes\\"</span> <span class=\\"token parameter variable\\">-H</span> <span class=\\"token string\\">\\"Content-Type: application/json\\"</span> <span class=\\"token parameter variable\\">-d</span> <span class=\\"token string\\">'{\\"key\\": \\"value\\", \\"anotherKey\\": \\"anotherValue\\", \\"yetAnotherKey\\": \\"yetAnotherValue\\"}'</span>\\n</span></code></pre></div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"python\\"><div class=\\"code-language-label\\">PYTHON</div><pre class=\\"language-python\\" data-processed data-language=\\"python\\"><code class=\\"language-python code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Very long Python line with many parameters</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">def</span> <span class=\\"token function\\">very_long_function_name_for_demonstration_purposes</span><span class=\\"token punctuation\\">(</span>parameter_one_with_long_name<span class=\\"token punctuation\\">,</span> parameter_two_with_even_longer_name<span class=\\"token punctuation\\">,</span> parameter_three_that_is_ridiculously_long<span class=\\"token punctuation\\">,</span> parameter_four_for_good_measure<span class=\\"token punctuation\\">,</span> parameter_five_just_because<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">return</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"This function has a very long signature that should cause horizontal scrolling: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>parameter_one_with_long_name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">, </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>parameter_two_with_even_longer_name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">, </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>parameter_three_that_is_ridiculously_long<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span>\\n</span></code></pre></div>\\n<h2>Vertical Scrolling Test</h2>\\n<p>This section contains a very long code block to test the vertical scrollbar functionality:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"python\\"><div class=\\"code-language-label\\">PYTHON</div><pre class=\\"language-python\\" data-processed data-language=\\"python\\"><code class=\\"language-python code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Very long Python code block for testing vertical scrollbar</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">import</span> json\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">import</span> datetime\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">from</span> typing <span class=\\"token keyword\\">import</span> List<span class=\\"token punctuation\\">,</span> Dict<span class=\\"token punctuation\\">,</span> Optional<span class=\\"token punctuation\\">,</span> Union<span class=\\"token punctuation\\">,</span> Tuple\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">from</span> dataclasses <span class=\\"token keyword\\">import</span> dataclass\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token decorator annotation punctuation\\">@dataclass</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">User</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">int</span>\\n</span><span class=\\"code-line\\">    username<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span>\\n</span><span class=\\"code-line\\">    email<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span>\\n</span><span class=\\"code-line\\">    first_name<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span>\\n</span><span class=\\"code-line\\">    last_name<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span>\\n</span><span class=\\"code-line\\">    created_at<span class=\\"token punctuation\\">:</span> datetime<span class=\\"token punctuation\\">.</span>datetime\\n</span><span class=\\"code-line\\">    updated_at<span class=\\"token punctuation\\">:</span> datetime<span class=\\"token punctuation\\">.</span>datetime\\n</span><span class=\\"code-line\\">    is_active<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">bool</span>\\n</span><span class=\\"code-line\\">    profile_picture<span class=\\"token punctuation\\">:</span> Optional<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">    bio<span class=\\"token punctuation\\">:</span> Optional<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">    website<span class=\\"token punctuation\\">:</span> Optional<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">    location<span class=\\"token punctuation\\">:</span> Optional<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">    phone_number<span class=\\"token punctuation\\">:</span> Optional<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">    date_of_birth<span class=\\"token punctuation\\">:</span> Optional<span class=\\"token punctuation\\">[</span>datetime<span class=\\"token punctuation\\">.</span>date<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">full_name</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>self<span class=\\"token punctuation\\">.</span>first_name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\"> </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>self<span class=\\"token punctuation\\">.</span>last_name<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">age</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> Optional<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> self<span class=\\"token punctuation\\">.</span>date_of_birth<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            today <span class=\\"token operator\\">=</span> datetime<span class=\\"token punctuation\\">.</span>date<span class=\\"token punctuation\\">.</span>today<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> today<span class=\\"token punctuation\\">.</span>year <span class=\\"token operator\\">-</span> self<span class=\\"token punctuation\\">.</span>date_of_birth<span class=\\"token punctuation\\">.</span>year <span class=\\"token operator\\">-</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>today<span class=\\"token punctuation\\">.</span>month<span class=\\"token punctuation\\">,</span> today<span class=\\"token punctuation\\">.</span>day<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;</span> <span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>date_of_birth<span class=\\"token punctuation\\">.</span>month<span class=\\"token punctuation\\">,</span> self<span class=\\"token punctuation\\">.</span>date_of_birth<span class=\\"token punctuation\\">.</span>day<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">to_dict</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> Dict<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'id'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'email'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>email<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'first_name'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>first_name<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'last_name'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>last_name<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'full_name'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>full_name<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'created_at'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>created_at<span class=\\"token punctuation\\">.</span>isoformat<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'updated_at'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>updated_at<span class=\\"token punctuation\\">.</span>isoformat<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'is_active'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>is_active<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'profile_picture'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>profile_picture<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'bio'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>bio<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'website'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>website<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'location'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>location<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'phone_number'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>phone_number<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>date_of_birth<span class=\\"token punctuation\\">.</span>isoformat<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> self<span class=\\"token punctuation\\">.</span>date_of_birth <span class=\\"token keyword\\">else</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'age'</span><span class=\\"token punctuation\\">:</span> self<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">UserRepository</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">__init__</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> database_url<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        self<span class=\\"token punctuation\\">.</span>database_url <span class=\\"token operator\\">=</span> database_url\\n</span><span class=\\"code-line\\">        self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">:</span> Dict<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> User<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>  <span class=\\"token comment\\"># Primary storage keyed by user ID</span>\\n</span><span class=\\"code-line\\">        self<span class=\\"token punctuation\\">.</span>users_by_username<span class=\\"token punctuation\\">:</span> Dict<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">,</span> User<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>  <span class=\\"token comment\\"># Secondary index by username</span>\\n</span><span class=\\"code-line\\">        self<span class=\\"token punctuation\\">.</span>users_by_email<span class=\\"token punctuation\\">:</span> Dict<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">,</span> User<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>  <span class=\\"token comment\\"># Secondary index by email</span>\\n</span><span class=\\"code-line\\">        self<span class=\\"token punctuation\\">.</span>connection <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">connect</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Establish database connection\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\"># Simulated database connection</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Connecting to database: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>self<span class=\\"token punctuation\\">.</span>database_url<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            self<span class=\\"token punctuation\\">.</span>connection <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">True</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">True</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">except</span> Exception <span class=\\"token keyword\\">as</span> e<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Failed to connect to database: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>e<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">False</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">disconnect</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Close database connection\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> self<span class=\\"token punctuation\\">.</span>connection<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            self<span class=\\"token punctuation\\">.</span>connection <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Database connection closed\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">create_user</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> user_data<span class=\\"token punctuation\\">:</span> Dict<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> User<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Create a new user\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        user_id <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">max</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>keys<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> default<span class=\\"token operator\\">=</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>  <span class=\\"token comment\\"># Generate next ID</span>\\n</span><span class=\\"code-line\\">        user <span class=\\"token operator\\">=</span> User<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token builtin\\">id</span><span class=\\"token operator\\">=</span>user_id<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            username<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            email<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'email'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            first_name<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'first_name'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            last_name<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'last_name'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            created_at<span class=\\"token operator\\">=</span>datetime<span class=\\"token punctuation\\">.</span>datetime<span class=\\"token punctuation\\">.</span>now<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            updated_at<span class=\\"token operator\\">=</span>datetime<span class=\\"token punctuation\\">.</span>datetime<span class=\\"token punctuation\\">.</span>now<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            is_active<span class=\\"token operator\\">=</span><span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            profile_picture<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'profile_picture'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            bio<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'bio'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            website<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'website'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            location<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'location'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            phone_number<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'phone_number'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            date_of_birth<span class=\\"token operator\\">=</span>user_data<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Store in primary dictionary and secondary indexes</span>\\n</span><span class=\\"code-line\\">        self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> user\\n</span><span class=\\"code-line\\">        self<span class=\\"token punctuation\\">.</span>users_by_username<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> user\\n</span><span class=\\"code-line\\">        self<span class=\\"token punctuation\\">.</span>users_by_email<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>email<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> user\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> user\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_user_by_id</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> user_id<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> Optional<span class=\\"token punctuation\\">[</span>User<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Retrieve user by ID - O(1) lookup\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>user_id<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_user_by_username</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> username<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> Optional<span class=\\"token punctuation\\">[</span>User<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Retrieve user by username - O(1) lookup\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> self<span class=\\"token punctuation\\">.</span>users_by_username<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>username<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_user_by_email</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> email<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> Optional<span class=\\"token punctuation\\">[</span>User<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Retrieve user by email - O(1) lookup\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> self<span class=\\"token punctuation\\">.</span>users_by_email<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>email<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_all_users</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> List<span class=\\"token punctuation\\">[</span>User<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Retrieve all users\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token builtin\\">list</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_active_users</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> List<span class=\\"token punctuation\\">[</span>User<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Retrieve all active users\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span>user <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> user<span class=\\"token punctuation\\">.</span>is_active<span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_users_by_location</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> location<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> List<span class=\\"token punctuation\\">[</span>User<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Retrieve users by location\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span>user <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> user<span class=\\"token punctuation\\">.</span>location <span class=\\"token keyword\\">and</span> user<span class=\\"token punctuation\\">.</span>location<span class=\\"token punctuation\\">.</span>lower<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> location<span class=\\"token punctuation\\">.</span>lower<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">update_user</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> user_id<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> update_data<span class=\\"token punctuation\\">:</span> Dict<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> Optional<span class=\\"token punctuation\\">[</span>User<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Update user information\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        user <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>get_user_by_id<span class=\\"token punctuation\\">(</span>user_id<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> user<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">None</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Handle username change - update secondary index</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> <span class=\\"token string\\">'username'</span> <span class=\\"token keyword\\">in</span> update_data <span class=\\"token keyword\\">and</span> update_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">!=</span> user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\"># Remove old username from index</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">del</span> self<span class=\\"token punctuation\\">.</span>users_by_username<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\"># Update username</span>\\n</span><span class=\\"code-line\\">            user<span class=\\"token punctuation\\">.</span>username <span class=\\"token operator\\">=</span> update_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\"># Add new username to index</span>\\n</span><span class=\\"code-line\\">            self<span class=\\"token punctuation\\">.</span>users_by_username<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> user\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Handle email change - update secondary index</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> <span class=\\"token string\\">'email'</span> <span class=\\"token keyword\\">in</span> update_data <span class=\\"token keyword\\">and</span> update_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'email'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">!=</span> user<span class=\\"token punctuation\\">.</span>email<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\"># Remove old email from index</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">del</span> self<span class=\\"token punctuation\\">.</span>users_by_email<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>email<span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\"># Update email</span>\\n</span><span class=\\"code-line\\">            user<span class=\\"token punctuation\\">.</span>email <span class=\\"token operator\\">=</span> update_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'email'</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\"># Add new email to index</span>\\n</span><span class=\\"code-line\\">            self<span class=\\"token punctuation\\">.</span>users_by_email<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>email<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> user\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Define allowed fields that can be updated directly</span>\\n</span><span class=\\"code-line\\">        allowed_fields <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'first_name'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'last_name'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'profile_picture'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'bio'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'website'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'location'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'phone_number'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'is_active'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Update other fields if provided</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">for</span> field <span class=\\"token keyword\\">in</span> allowed_fields<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">if</span> field <span class=\\"token keyword\\">in</span> update_data<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token builtin\\">setattr</span><span class=\\"token punctuation\\">(</span>user<span class=\\"token punctuation\\">,</span> field<span class=\\"token punctuation\\">,</span> update_data<span class=\\"token punctuation\\">[</span>field<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        user<span class=\\"token punctuation\\">.</span>updated_at <span class=\\"token operator\\">=</span> datetime<span class=\\"token punctuation\\">.</span>datetime<span class=\\"token punctuation\\">.</span>now<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> user\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">delete_user</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> user_id<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token builtin\\">bool</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Delete user by ID\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        user <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>get_user_by_id<span class=\\"token punctuation\\">(</span>user_id<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> user<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token comment\\"># Remove from all dictionaries</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">del</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">del</span> self<span class=\\"token punctuation\\">.</span>users_by_username<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">del</span> self<span class=\\"token punctuation\\">.</span>users_by_email<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>email<span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">True</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">False</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">deactivate_user</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> user_id<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token builtin\\">bool</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Deactivate user instead of deleting\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        user <span class=\\"token operator\\">=</span> self<span class=\\"token punctuation\\">.</span>get_user_by_id<span class=\\"token punctuation\\">(</span>user_id<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> user<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            user<span class=\\"token punctuation\\">.</span>is_active <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">False</span>\\n</span><span class=\\"code-line\\">            user<span class=\\"token punctuation\\">.</span>updated_at <span class=\\"token operator\\">=</span> datetime<span class=\\"token punctuation\\">.</span>datetime<span class=\\"token punctuation\\">.</span>now<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">True</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">False</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">search_users</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> query<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> List<span class=\\"token punctuation\\">[</span>User<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Search users by name, username, or email\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        query <span class=\\"token operator\\">=</span> query<span class=\\"token punctuation\\">.</span>lower<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        results <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>query <span class=\\"token keyword\\">in</span> user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">.</span>lower<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">or</span>\\n</span><span class=\\"code-line\\">                query <span class=\\"token keyword\\">in</span> user<span class=\\"token punctuation\\">.</span>email<span class=\\"token punctuation\\">.</span>lower<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">or</span>\\n</span><span class=\\"code-line\\">                query <span class=\\"token keyword\\">in</span> user<span class=\\"token punctuation\\">.</span>first_name<span class=\\"token punctuation\\">.</span>lower<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">or</span>\\n</span><span class=\\"code-line\\">                query <span class=\\"token keyword\\">in</span> user<span class=\\"token punctuation\\">.</span>last_name<span class=\\"token punctuation\\">.</span>lower<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">or</span>\\n</span><span class=\\"code-line\\">                query <span class=\\"token keyword\\">in</span> user<span class=\\"token punctuation\\">.</span>full_name<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>lower<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">                results<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>user<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> results\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">get_user_statistics</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> Dict<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Get user statistics\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        total_users <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        active_users <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">.</span>get_active_users<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        inactive_users <span class=\\"token operator\\">=</span> total_users <span class=\\"token operator\\">-</span> active_users\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        locations <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">if</span> user<span class=\\"token punctuation\\">.</span>location<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">                locations<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>location<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> locations<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span>user<span class=\\"token punctuation\\">.</span>location<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        ages <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>a <span class=\\"token keyword\\">for</span> a <span class=\\"token keyword\\">in</span> <span class=\\"token punctuation\\">(</span>u<span class=\\"token punctuation\\">.</span>age<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">for</span> u <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> a <span class=\\"token keyword\\">is</span> <span class=\\"token keyword\\">not</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">        avg_age <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">sum</span><span class=\\"token punctuation\\">(</span>ages<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>ages<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> ages <span class=\\"token keyword\\">else</span> <span class=\\"token number\\">0</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'total_users'</span><span class=\\"token punctuation\\">:</span> total_users<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'active_users'</span><span class=\\"token punctuation\\">:</span> active_users<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'inactive_users'</span><span class=\\"token punctuation\\">:</span> inactive_users<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'locations'</span><span class=\\"token punctuation\\">:</span> locations<span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'average_age'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">round</span><span class=\\"token punctuation\\">(</span>avg_age<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'users_with_bio'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>user <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> user<span class=\\"token punctuation\\">.</span>bio<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'users_with_website'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>user <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> user<span class=\\"token punctuation\\">.</span>website<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'users_with_phone'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>user <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">if</span> user<span class=\\"token punctuation\\">.</span>phone_number<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">export_users_to_json</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> filename<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token builtin\\">bool</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Export all users to JSON file\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            users_data <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>to_dict<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">.</span>values<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">with</span> <span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span>filename<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'w'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> f<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">                json<span class=\\"token punctuation\\">.</span>dump<span class=\\"token punctuation\\">(</span>users_data<span class=\\"token punctuation\\">,</span> f<span class=\\"token punctuation\\">,</span> indent<span class=\\"token operator\\">=</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> default<span class=\\"token operator\\">=</span><span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Users exported to </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>filename<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">True</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">except</span> Exception <span class=\\"token keyword\\">as</span> e<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Error exporting users: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>e<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">False</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">import_users_from_json</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> filename<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token builtin\\">bool</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Import users from JSON file\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">with</span> <span class=\\"token builtin\\">open</span><span class=\\"token punctuation\\">(</span>filename<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'r'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">as</span> f<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">                users_data <span class=\\"token operator\\">=</span> json<span class=\\"token punctuation\\">.</span>load<span class=\\"token punctuation\\">(</span>f<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">for</span> user_data <span class=\\"token keyword\\">in</span> users_data<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token comment\\"># Convert string dates back to datetime objects</span>\\n</span><span class=\\"code-line\\">                user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'created_at'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> datetime<span class=\\"token punctuation\\">.</span>datetime<span class=\\"token punctuation\\">.</span>fromisoformat<span class=\\"token punctuation\\">(</span>user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'created_at'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">                user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'updated_at'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> datetime<span class=\\"token punctuation\\">.</span>datetime<span class=\\"token punctuation\\">.</span>fromisoformat<span class=\\"token punctuation\\">(</span>user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'updated_at'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token keyword\\">if</span> user_data<span class=\\"token punctuation\\">.</span>get<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">                    user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> datetime<span class=\\"token punctuation\\">.</span>date<span class=\\"token punctuation\\">.</span>fromisoformat<span class=\\"token punctuation\\">(</span>user_data<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">                <span class=\\"token comment\\"># Remove computed fields</span>\\n</span><span class=\\"code-line\\">                user_data<span class=\\"token punctuation\\">.</span>pop<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'full_name'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">                user_data<span class=\\"token punctuation\\">.</span>pop<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'age'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">None</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">                user <span class=\\"token operator\\">=</span> User<span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">**</span>user_data<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token comment\\"># Store in primary dictionary and secondary indexes</span>\\n</span><span class=\\"code-line\\">                self<span class=\\"token punctuation\\">.</span>users<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">id</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> user\\n</span><span class=\\"code-line\\">                self<span class=\\"token punctuation\\">.</span>users_by_username<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> user\\n</span><span class=\\"code-line\\">                self<span class=\\"token punctuation\\">.</span>users_by_email<span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>email<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> user\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Users imported from </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>filename<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">True</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">except</span> Exception <span class=\\"token keyword\\">as</span> e<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Error importing users: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>e<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">False</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Example usage and demonstration</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">def</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Main function to demonstrate the UserRepository functionality\\"\\"\\"</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token comment\\"># Initialize repository</span>\\n</span><span class=\\"code-line\\">    repo <span class=\\"token operator\\">=</span> UserRepository<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"postgresql://user:pass@localhost/users_db\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token comment\\"># Connect to database</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> repo<span class=\\"token punctuation\\">.</span>connect<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Failed to connect to database\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">return</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">try</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Create sample users</span>\\n</span><span class=\\"code-line\\">        sample_users <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'johndoe'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'email'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'john.doe@example.com'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'first_name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'John'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'last_name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Doe'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'bio'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Software developer with 5 years of experience'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'location'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'New York'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'website'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'https://johndoe.dev'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'phone_number'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'+1-555-0123'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">:</span> datetime<span class=\\"token punctuation\\">.</span>date<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1990</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">15</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'janesmith'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'email'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'jane.smith@example.com'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'first_name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Jane'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'last_name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Smith'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'bio'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'UX Designer passionate about creating beautiful interfaces'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'location'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'San Francisco'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'website'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'https://janesmith.design'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'phone_number'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'+1-555-0456'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">:</span> datetime<span class=\\"token punctuation\\">.</span>date<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1988</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">12</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'bobwilson'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'email'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'bob.wilson@example.com'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'first_name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Bob'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'last_name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Wilson'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'bio'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Data scientist and machine learning enthusiast'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'location'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'New York'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">:</span> datetime<span class=\\"token punctuation\\">.</span>date<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1992</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'username'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'alicejohnson'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'email'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'alice.johnson@example.com'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'first_name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Alice'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'last_name'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Johnson'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'bio'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Product manager with a passion for innovation'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'location'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Seattle'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'website'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'https://alicejohnson.com'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'phone_number'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'+1-555-0789'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">                <span class=\\"token string\\">'date_of_birth'</span><span class=\\"token punctuation\\">:</span> datetime<span class=\\"token punctuation\\">.</span>date<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1985</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Create users</span>\\n</span><span class=\\"code-line\\">        created_users <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">for</span> user_data <span class=\\"token keyword\\">in</span> sample_users<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            user <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">.</span>create_user<span class=\\"token punctuation\\">(</span>user_data<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            created_users<span class=\\"token punctuation\\">.</span>append<span class=\\"token punctuation\\">(</span>user<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Created user: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>user<span class=\\"token punctuation\\">.</span>full_name<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\"> (@</span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">)\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"\\\\nTotal users created: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>created_users<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Demonstrate various queries</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\\\n=== User Queries ===\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Get user by ID</span>\\n</span><span class=\\"code-line\\">        user_1 <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">.</span>get_user_by_id<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> user_1<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"User with ID 1: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>user_1<span class=\\"token punctuation\\">.</span>full_name<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Get user by username</span>\\n</span><span class=\\"code-line\\">        john <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">.</span>get_user_by_username<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'johndoe'</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> john<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Found user by username: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>john<span class=\\"token punctuation\\">.</span>full_name<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Get users by location</span>\\n</span><span class=\\"code-line\\">        ny_users <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">.</span>get_users_by_location<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'New York'</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Users in New York: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>full_name<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> ny_users<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Search users</span>\\n</span><span class=\\"code-line\\">        search_results <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">.</span>search_users<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'john'</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Search results for 'john': </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">[</span>user<span class=\\"token punctuation\\">.</span>full_name<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">for</span> user <span class=\\"token keyword\\">in</span> search_results<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Update user</span>\\n</span><span class=\\"code-line\\">        update_data <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'bio'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'Senior Software Developer with expertise in Python and web development'</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token string\\">'website'</span><span class=\\"token punctuation\\">:</span> <span class=\\"token string\\">'https://johndoe-dev.com'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">        updated_user <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">.</span>update_user<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> update_data<span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> updated_user<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Updated user: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>updated_user<span class=\\"token punctuation\\">.</span>username<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\"> - </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>updated_user<span class=\\"token punctuation\\">.</span>bio<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Get statistics</span>\\n</span><span class=\\"code-line\\">        stats <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">.</span>get_user_statistics<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"\\\\n=== User Statistics ===\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Total users: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>stats<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'total_users'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Active users: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>stats<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'active_users'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Average age: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>stats<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'average_age'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Location distribution: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>stats<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'locations'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Export users</span>\\n</span><span class=\\"code-line\\">        export_filename <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"users_backup.json\\"</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> repo<span class=\\"token punctuation\\">.</span>export_users_to_json<span class=\\"token punctuation\\">(</span>export_filename<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Users exported to </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>export_filename<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Deactivate a user</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">if</span> repo<span class=\\"token punctuation\\">.</span>deactivate_user<span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"User with ID 2 has been deactivated\\"</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Show updated statistics</span>\\n</span><span class=\\"code-line\\">        updated_stats <span class=\\"token operator\\">=</span> repo<span class=\\"token punctuation\\">.</span>get_user_statistics<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"\\\\nUpdated active users: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>updated_stats<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'active_users'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"Updated inactive users: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>updated_stats<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'inactive_users'</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">except</span> Exception <span class=\\"token keyword\\">as</span> e<span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string-interpolation\\"><span class=\\"token string\\">f\\"An error occurred: </span><span class=\\"token interpolation\\"><span class=\\"token punctuation\\">{</span>e<span class=\\"token punctuation\\">}</span></span><span class=\\"token string\\">\\"</span></span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">finally</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token comment\\"># Always disconnect</span>\\n</span><span class=\\"code-line\\">        repo<span class=\\"token punctuation\\">.</span>disconnect<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">if</span> __name__ <span class=\\"token operator\\">==</span> <span class=\\"token string\\">\\"__main__\\"</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">    main<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>"},{"slug":"template","title":"Blog Post Template","date":"2025-04-01","author":"Blog Author","excerpt":"Brief 1-2 sentence summary that will appear in blog listings and social media previews","image":"https://images.unsplash.com/photo-1593505681742-8cbb6f44de25?w=1200&h=600&fit=crop&crop=center","imageAlt":"Blog Post Template","tags":["Tag1","Tag2","Tag3"],"readTime":"1 min read","category":"Template","content":"<h1>Blog Post Template</h1>\\n<p>[REPLACE: Write an engaging opening paragraph that hooks the reader and clearly states what they'll learn or gain from reading this post. This should expand on your excerpt and set expectations.]</p>\\n<h2>Introduction</h2>\\n<p>[REPLACE: Provide background context and explain why this topic matters. You might include:</p>\\n<ul>\\n<li>Why you decided to write about this topic</li>\\n<li>Who this post is for (target audience)</li>\\n<li>What problem this post solves</li>\\n<li>Brief overview of what you'll cover]</li>\\n</ul>\\n<h2>[REPLACE: Main Section 1 - Use Descriptive Headers]</h2>\\n<p>[REPLACE: Write your main content here. Break up large sections with subheadings for better readability.]</p>\\n<h3>[REPLACE: Subsection if needed]</h3>\\n<p>[REPLACE: Detailed content with examples, code snippets, images, or other supporting materials.]</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"javascript\\"><div class=\\"code-language-label\\">JAVASCRIPT</div><pre class=\\"language-javascript\\" data-processed data-language=\\"javascript\\"><code class=\\"language-javascript code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">// [REPLACE: If including code, use proper syntax highlighting]</span>\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\">// Example code block</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">const</span> example <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'Replace with your actual code'</span>\\n</span></code></pre></div>\\n<h2>[REPLACE: Main Section 2]</h2>\\n<p>[REPLACE: Continue with your main content. Consider including:</p>\\n<ul>\\n<li>Practical examples</li>\\n<li>Step-by-step instructions</li>\\n<li>Screenshots or diagrams</li>\\n<li>Personal experiences or insights]</li>\\n</ul>\\n<h3>Key Points to Remember</h3>\\n<p>[REPLACE: Create a bulleted list of important takeaways:]</p>\\n<ul>\\n<li>[REPLACE: Key point 1]</li>\\n<li>[REPLACE: Key point 2]</li>\\n<li>[REPLACE: Key point 3]</li>\\n</ul>\\n<h2>Common Pitfalls and Solutions</h2>\\n<p>[REPLACE: Share common mistakes and how to avoid them. This adds value and shows expertise.]</p>\\n<h2>Best Practices</h2>\\n<p>[REPLACE: Provide actionable advice and recommendations based on your experience.]</p>\\n<h2>Real-World Example</h2>\\n<p>[REPLACE: Include a concrete example that demonstrates the concepts you've discussed. This could be a case study, walkthrough, or practical application.]</p>\\n<h2>Conclusion</h2>\\n<p>[REPLACE: Summarize the main points and provide a clear call-to-action. You might:</p>\\n<ul>\\n<li>Recap the key benefits or learnings</li>\\n<li>Encourage readers to try what you've taught</li>\\n<li>Ask questions to encourage engagement</li>\\n<li>Suggest next steps or related topics]</li>\\n</ul>\\n<h2>Additional Resources</h2>\\n<p>[REPLACE: Include helpful links, documentation, or related reading:]</p>\\n<ul>\\n<li><a href=\\"https://example.com\\">Link 1 description</a></li>\\n<li><a href=\\"https://example.com\\">Link 2 description</a></li>\\n<li><a href=\\"https://example.com\\">Link 3 description</a></li>\\n</ul>\\n<hr />\\n<p><em>[REPLACE: Optional author note or call-to-action, such as encouraging comments, sharing, or connecting on social media]</em></p>"},{"slug":"powershell-dsc-introduction","title":"Getting Started with PowerShell DSC","date":"2024-12-20","author":"Johan Ljunggren","excerpt":"A beginner's guide to PowerShell Desired State Configuration (DSC) and how to automate Windows server management.","image":"https://images.unsplash.com/photo-1516259762381-22954d7d3ad2?w=800&h=600&fit=crop&crop=center","imageAlt":"Getting Started with PowerShell DSC","tags":["PowerShell","DSC","Windows","Automation","Configuration Management"],"readTime":"10 min read","category":"PowerShell DSC","content":"<h1>Getting Started with PowerShell DSC</h1>\\n<p>PowerShell Desired State Configuration (DSC) is a powerful configuration management framework that enables you to manage your Windows infrastructure declaratively. Instead of writing imperative scripts that tell the system what to do step by step, DSC allows you to describe the desired state of your systems, and it handles the implementation details.</p>\\n<h2>What is PowerShell DSC?</h2>\\n<p>DSC is built on three core components:</p>\\n<ol>\\n<li><strong>Configurations</strong>: PowerShell scripts that define the desired state</li>\\n<li><strong>Resources</strong>: The building blocks that perform the actual work</li>\\n<li><strong>Local Configuration Manager (LCM)</strong>: The engine that applies configurations</li>\\n</ol>\\n<h2>Key Benefits</h2>\\n<h3>Declarative Approach</h3>\\n<p>With DSC, you describe what you want, not how to achieve it:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">Configuration WebServerConfig <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    Node <span class=\\"token string\\">'WebServer01'</span> <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        WindowsFeature IIS <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure = <span class=\\"token string\\">'Present'</span>\\n</span><span class=\\"code-line\\">            Name = <span class=\\"token string\\">'Web-Server'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">        File DefaultPage <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure = <span class=\\"token string\\">'Present'</span>\\n</span><span class=\\"code-line\\">            DestinationPath = <span class=\\"token string\\">'C:\\\\inetpub\\\\wwwroot\\\\index.html'</span>\\n</span><span class=\\"code-line\\">            Contents = <span class=\\"token string\\">'&lt;h1&gt;Welcome to our website!&lt;/h1&gt;'</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token function\\">Type</span> = <span class=\\"token string\\">'File'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Idempotency</h3>\\n<p>DSC configurations are idempotent, meaning you can run them multiple times safely. The system will only make changes when the current state doesn't match the desired state.</p>\\n<h3>Self-Healing</h3>\\n<p>The LCM can be configured to continuously monitor and correct configuration drift, ensuring your systems stay in the desired state.</p>\\n<h2>Getting Started</h2>\\n<h3>Step 1: Install PowerShell DSC</h3>\\n<p>DSC comes built-in with Windows PowerShell 5.0 and later. For newer versions, you can install the PSDesiredStateConfiguration module:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Install-Module</span> <span class=\\"token operator\\">-</span>Name PSDesiredStateConfiguration <span class=\\"token operator\\">-</span>Force\\n</span></code></pre></div>\\n<h3>Step 2: Write Your First Configuration</h3>\\n<p>Create a simple configuration that ensures a directory exists:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">Configuration EnsureDirectory <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">param</span><span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token namespace\\">[string]</span><span class=\\"token variable\\">$Path</span> = <span class=\\"token string\\">'C:\\\\MyApp'</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Node localhost <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        File CreateDirectory <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure = <span class=\\"token string\\">'Present'</span>\\n</span><span class=\\"code-line\\">            DestinationPath = <span class=\\"token variable\\">$Path</span>\\n</span><span class=\\"code-line\\">            <span class=\\"token function\\">Type</span> = <span class=\\"token string\\">'Directory'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>Step 3: Compile and Apply</h3>\\n<p>Compile the configuration to create a MOF file, then apply it:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\"># Compile the configuration</span>\\n</span><span class=\\"code-line\\">EnsureDirectory <span class=\\"token operator\\">-</span>OutputPath <span class=\\"token string\\">'C:\\\\DSC\\\\Configs'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token comment\\"># Apply the configuration</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Start-DscConfiguration</span> <span class=\\"token operator\\">-</span>Path <span class=\\"token string\\">'C:\\\\DSC\\\\Configs'</span> <span class=\\"token operator\\">-</span>Wait <span class=\\"token operator\\">-</span>Verbose\\n</span></code></pre></div>\\n<h2>Common DSC Resources</h2>\\n<h3>Built-in Resources</h3>\\n<ul>\\n<li><strong>File</strong>: Manage files and directories</li>\\n<li><strong>Registry</strong>: Configure registry settings</li>\\n<li><strong>WindowsFeature</strong>: Install/remove Windows features</li>\\n<li><strong>Service</strong>: Manage Windows services</li>\\n<li><strong>User</strong>: Manage local user accounts</li>\\n</ul>\\n<h3>Community Resources</h3>\\n<p>The PowerShell Gallery contains hundreds of community-contributed DSC resources for managing:</p>\\n<ul>\\n<li>IIS configurations</li>\\n<li>SQL Server installations</li>\\n<li>Active Directory</li>\\n<li>Network settings</li>\\n<li>And much more</li>\\n</ul>\\n<h2>Best Practices</h2>\\n<h3>1. Use Composite Resources</h3>\\n<p>Create reusable components by combining multiple resources:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">Configuration WebServer <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token keyword\\">param</span><span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token namespace\\">[string]</span><span class=\\"token variable\\">$SiteName</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token namespace\\">[string]</span><span class=\\"token variable\\">$PhysicalPath</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    WindowsFeature IIS <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        Ensure = <span class=\\"token string\\">'Present'</span>\\n</span><span class=\\"code-line\\">        Name = <span class=\\"token string\\">'Web-Server'</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    WindowsFeature IISManagement <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        Ensure = <span class=\\"token string\\">'Present'</span>\\n</span><span class=\\"code-line\\">        Name = <span class=\\"token string\\">'Web-Mgmt-Tools'</span>\\n</span><span class=\\"code-line\\">        DependsOn = <span class=\\"token string\\">'[WindowsFeature]IIS'</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    File WebContent <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        Ensure = <span class=\\"token string\\">'Present'</span>\\n</span><span class=\\"code-line\\">        DestinationPath = <span class=\\"token variable\\">$PhysicalPath</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">Type</span> = <span class=\\"token string\\">'Directory'</span>\\n</span><span class=\\"code-line\\">        DependsOn = <span class=\\"token string\\">'[WindowsFeature]IIS'</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>2. Implement Configuration Data</h3>\\n<p>Separate your configuration logic from environment-specific data:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$ConfigData</span> = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    AllNodes = @<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">        @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            NodeName = <span class=\\"token string\\">'WebServer01'</span>\\n</span><span class=\\"code-line\\">            SiteName = <span class=\\"token string\\">'Production Site'</span>\\n</span><span class=\\"code-line\\">            PhysicalPath = <span class=\\"token string\\">'C:\\\\inetpub\\\\wwwroot\\\\prod'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n</span><span class=\\"code-line\\">        @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            NodeName = <span class=\\"token string\\">'WebServer02'</span>\\n</span><span class=\\"code-line\\">            SiteName = <span class=\\"token string\\">'Test Site'</span>\\n</span><span class=\\"code-line\\">            PhysicalPath = <span class=\\"token string\\">'C:\\\\inetpub\\\\wwwroot\\\\test'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<h3>3. Use Pull Servers for Scale</h3>\\n<p>For larger environments, implement a DSC Pull Server to centrally manage configurations and reduce administrative overhead.</p>\\n<h2>Troubleshooting Tips</h2>\\n<h3>Check DSC Status</h3>\\n<p>Monitor the status of your DSC configurations:</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token function\\">Get-DscConfigurationStatus</span>\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-DscLocalConfigurationManager</span>\\n</span></code></pre></div>\\n<h3>Review Event Logs</h3>\\n<p>DSC writes detailed information to Windows Event Logs:</p>\\n<ul>\\n<li>Applications and Services Logs \u2192 Microsoft \u2192 Windows \u2192 Desired State Configuration</li>\\n</ul>\\n<h3>Test Configurations</h3>\\n<p>Always test your configurations in a development environment before applying to production.</p>\\n<h2>Conclusion</h2>\\n<p>PowerShell DSC provides a robust foundation for configuration management in Windows environments. By adopting DSC, you can:</p>\\n<ul>\\n<li>Reduce configuration drift</li>\\n<li>Improve system reliability</li>\\n<li>Automate repetitive tasks</li>\\n<li>Maintain consistent environments</li>\\n</ul>\\n<p>Start small with simple configurations and gradually build more complex automation as your confidence and expertise grow.</p>\\n<h2>Next Steps</h2>\\n<ul>\\n<li>Explore the <a href=\\"https://docs.microsoft.com/en-us/powershell/scripting/dsc/\\">PowerShell DSC documentation</a></li>\\n<li>Join the <a href=\\"https://github.com/PowerShell/DscCommunity\\">PowerShell DSC Community</a></li>\\n<li>Practice with the <a href=\\"https://docs.microsoft.com/en-us/learn/paths/powershell-dsc/\\">DSC Learning Path</a></li>\\n</ul>\\n<p>Ready to take your infrastructure automation to the next level? <a href=\\"/contact\\">Contact Viscalyx</a> for expert PowerShell DSC consulting and training.</p>"},{"slug":"dsc-configuration-repository","title":"Create a dsc configuration repository","date":"2017-08-13","author":"Johan Ljunggren","excerpt":"Learn how to create a PowerShell DSC configuration repository using Microsoft's templates and common tests. This comprehensive guide walks you through setting up GitHub, AppVeyor, and Azure integration to build, test, and deploy DSC configurations for automated infrastructure management.","image":"https://images.unsplash.com/photo-1580894894513-541e068a3e2b?w=800&h=600&fit=crop&crop=center","imageAlt":"Create a dsc configuration repository","tags":["Infrastructure as Code","PowerShell","DSC","Desired State Configuration","Automation"],"readTime":"10 min read","category":"PowerShell DSC","content":"<h2>Abstract</h2>\\n<p>The Microsoft PowerShell DSC Team has provided a GitHub repository\\n<a href=\\"https://github.com/PowerShell/DscConfigurations\\">DscConfigurations</a>\\nwhich, together with the community, will provide a structured list, or a\\nconnection point if you will, for community created DSC configurations.</p>\\n<p>This blog post is the first of a series that will explain how to create a DSC\\nconfiguration repository using the templates and common tests provided in the\\n<a href=\\"https://github.com/PowerShell/DscConfigurations\\">DscConfigurations</a> repository.</p>\\n<p>We will setup a DSC configuration that will configure two target nodes (servers),\\nwhere the first configuration will create and configure a local group on the first\\nserver, and on the second server we will change the power plan.</p>\\n<h2>Preparations</h2>\\n<p>This assumes that you have all the required software installed on the client you\\nwill be working on, and that you have all the necessary accounts on dependent\\nservices.</p>\\n<blockquote>\\n<p>This blog post is only tested on Windows, but will hopefully work on any platform\\nwith PowerShell installed.</p>\\n</blockquote>\\n<h3>Services that are required</h3>\\n<ul>\\n<li>An <a href=\\"https://azure.microsoft.com/free\\">Azure subscription</a> with\\n<a href=\\"https://docs.microsoft.com/en-us/azure/billing/billing-add-change-azure-subscription-administrator\\">administrator permission</a>.</li>\\n<li><a href=\\"https://github.com/\\">GitHub</a> free account.</li>\\n<li><a href=\\"https://www.appveyor.com/\\">AppVeyor</a> free account</li>\\n</ul>\\n<blockquote>\\n<p><strong>GitHub</strong> and <strong>AppVeyor</strong> are free for public open source repositories.\\nFor this you only need a free account, since the whole point of this is that\\nthis repository should be publicly shared with and by the community.</p>\\n<p>An <strong>Azure subscription</strong> comes in different forms, you can get a 30-day trial,\\nor you get one through the MSDN subscription, or maybe your company has a subscription\\nthat you are allowed to use. To test this, it's enough to have the trial, for\\na real project I would recommended having an MSDN subscription.</p>\\n</blockquote>\\n<h3>Software that are required on the client</h3>\\n<ul>\\n<li>Git (can be downloaded <a href=\\"https://git-scm.com/downloads\\">here</a>).</li>\\n<li>Your favorite text editor (Or <a href=\\"https://code.visualstudio.com/\\">Visual Studio Code</a>\\nwhich I think is awesome, and free on every platform).</li>\\n<li>AzureRm PowerShell Modules (see this article\\n<a href=\\"https://docs.microsoft.com/en-us/powershell/azure/install-azurerm-ps?view=azurermps-4.2.0\\">Install and configure Azure PowerShell</a>\\non how to install the modules).</li>\\n</ul>\\n<h3>Properties used by this article</h3>\\n<p>There are some properties that you can or must change in the steps below. Make\\nsure to use the same values throughout the steps.</p>\\n<ul>\\n<li>Public repository name: <strong>DscConfigurationExample</strong></li>\\n<li>Local root path for local repositories: <strong>c:\\\\source</strong></li>\\n<li>Tenant ID for the Azure subscription.</li>\\n<li>Subscription ID for the Azure subscription.</li>\\n<li>Application ID for the Azure Active Directory application registration (in the\\nAzure subscription).</li>\\n<li>Application password (key) for the Azure Active Directory application registration\\nabove.</li>\\n</ul>\\n<blockquote>\\n<p><strong>Note:</strong> The repository name must not contain a hyphen ('-') because that will\\n(currently) not be allowed when your configuration is uploaded to <strong>Azure Automation</strong>.\\nSee <a href=\\"https://github.com/PowerShell/TemplateConfig/issues/7\\">issue PowerShell/TemplateConfig#7</a>\\nfor more information.</p>\\n</blockquote>\\n<h2>How to set up a repository using the templates and common tests</h2>\\n<h3>Prepare a repository with the template</h3>\\n<p>If you don't already have and account on <a href=\\"https://github.com/\\">GitHub</a> then please\\nregister for a free account.</p>\\n<ol>\\n<li>\\n<p>Browse to <a href=\\"https://github.com/\\">GitHub</a> and log in.</p>\\n</li>\\n<li>\\n<p>Create a new repository named 'DscConfigurationExample'.</p>\\n<ol>\\n<li>Add an optional description (can be left empty).</li>\\n<li>Leave the repository type as 'Public'.</li>\\n<li>Check the box for 'Initialize this repository with a README'.</li>\\n<li>Leave the choice for \\".gitignore\\" as 'None'.</li>\\n<li>Add correct license for your repository, normally MIT is used for\\nOpen Source Software (OSS).</li>\\n</ol>\\n</li>\\n<li>\\n<p>Clone the repository locally. This will make a local copy of the repository on\\nyour hard drive. <em>Please replace <strong>USERNAME</strong> with you github account\\nusername, for example, my account username is 'johlju'.</em></p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">cd <span class=\\"token string\\">'c:\\\\source'</span>\\n</span><span class=\\"code-line\\">git clone https:<span class=\\"token operator\\">/</span><span class=\\"token operator\\">/</span>github<span class=\\"token punctuation\\">.</span>com/USERNAME/DscConfigurationExample\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Clone the template repository locally.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">cd <span class=\\"token string\\">'c:\\\\source'</span>\\n</span><span class=\\"code-line\\">git clone https:<span class=\\"token operator\\">/</span><span class=\\"token operator\\">/</span>github<span class=\\"token punctuation\\">.</span>com/PowerShell/TemplateConfig\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Copy everything except the LICENSE and README.md from the template folder.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">cd c:\\\\source\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$copyItemParameters</span> = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">   Path = <span class=\\"token string\\">'.\\\\TemplateConfig\\\\*'</span>\\n</span><span class=\\"code-line\\">   Destination = <span class=\\"token string\\">'.\\\\DscConfigurationExample'</span>\\n</span><span class=\\"code-line\\">   Exclude = <span class=\\"token string\\">'LICENSE'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'README.md'</span>\\n</span><span class=\\"code-line\\">   Recurse = <span class=\\"token boolean\\">$true</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Copy-Item</span> @copyItemParameters\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Enter you newly cloned repository</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">cd <span class=\\"token string\\">'DscConfigurationExample'</span>\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Start you favorite code editor. I will assume VS Code :wink:.\\nIf you are using any other editor, please open the project (repository) at this\\nfolder location 'c:\\\\source\\\\DscConfigurationExample'.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">code <span class=\\"token punctuation\\">.</span>\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>If everything is correct, it should look like this.</p>\\n<p>In the PowerShell console running <strong>git</strong>.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">git status <span class=\\"token operator\\">-</span>u\\n</span></code></pre></div>\\n<div class=\\"code-block-wrapper\\" data-language=\\"plaintext\\"><div class=\\"code-language-label\\">PLAINTEXT</div><pre class=\\"language-plaintext\\" data-processed data-language=\\"plaintext\\"><code class=\\"language-plaintext code-highlight\\"><span class=\\"code-line\\">On branch master\\n</span><span class=\\"code-line\\">Your branch is up-to-date with 'origin/master'.\\n</span><span class=\\"code-line\\">Untracked files:\\n</span><span class=\\"code-line\\">(use \\"git add &lt;file&gt;...\\" to include in what will be committed)\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">     ConfigurationData/TemplateConfig.ConfigData.psd1\\n</span><span class=\\"code-line\\">     TemplateConfig.ps1\\n</span><span class=\\"code-line\\">     TemplateConfigModule/TemplateConfigModule.psd1\\n</span><span class=\\"code-line\\">     TemplateConfigModule/Tests/Acceptance/TemplateConfig.Acceptance.Tests.ps1\\n</span><span class=\\"code-line\\">     appveyor.yml\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">nothing added to commit but untracked files present (use \\"git add\\" to track)\\n</span></code></pre></div>\\n<p>In Visual Studio Code click on the Source Control icon\\n(![Visual Studio Source Control Icon]({{ site.url }}/images/VisualStudioCode/VisualStudioCodeSourceControlIcon.PNG)).</p>\\n<p>![Untracked files in Visual Studio Code]({{ site.url }}/images/2017-08-05-create-a-dsc-configuration-repository/VisualStudioCodeTemplateUntrackedFiles.PNG)</p>\\n</li>\\n</ol>\\n<h3>Preparing Azure subscription</h3>\\n<p>If you don't already have an Azure subscription then then please register for a\\n<a href=\\"https://azure.microsoft.com/free\\">30-day trial Azure subscription</a>.</p>\\n<p>We need a new Azure Active Directory Application account that will be used to\\nlogin to Azure, it needs to have the correct permission to create the resources\\nbeing used during testing.\\nCurrently that permission needs to be Contributor on the entire subscription.</p>\\n<p>There are two ways to create the requirements for running the tests. I will show\\nboth methods.</p>\\n<ol>\\n<li>Using the Azure Portal.</li>\\n<li>Using PowerShell using the script that <a href=\\"https://github.com/PlagueHO\\">@PlagueHO</a>\\ncreated <a href=\\"https://github.com/PowerShell/DscConfigurations/issues/5#issue-234996357\\">here</a>.</li>\\n</ol>\\n<h4>Prepare Azure using Azure Portal</h4>\\n<ol>\\n<li>\\n<p>Login in to the <a href=\\"https://portal.azure.com\\">Azure Portal</a>.</p>\\n</li>\\n<li>\\n<p>Create the Azure Active Directory application account.</p>\\n<ol>\\n<li>\\n<p>Go to <strong>Azure Active Directory</strong>.\\n<em>I assume you are in the correct directory, if not, change to the correct directory</em>.</p>\\n</li>\\n<li>\\n<p>Click on <strong>App registrations</strong>.</p>\\n</li>\\n<li>\\n<p>Click on <strong>New application registration</strong>.</p>\\n</li>\\n<li>\\n<p>Enter a descriptive name in the <em>Name</em> field. For example '<strong>DscConfigurationExampleAppId</strong>'.\\n<em>This name is only for your records, and will only be used for setting</em>\\n<em>permission later.</em>.</p>\\n</li>\\n<li>\\n<p>Leave <em>Application type</em> as <strong>Web app / API</strong>.</p>\\n</li>\\n<li>\\n<p>For the mandatory field <em>Sign-on URL</em> enter any URL. For example\\n<code>https://dummy</code>. <em>This URL is not of interest since it will not be used</em>.</p>\\n</li>\\n<li>\\n<p>Click on <strong>Create</strong>.</p>\\n</li>\\n<li>\\n<p>On the list of application registrations, click on the newly created application.</p>\\n</li>\\n<li>\\n<p>In the blade, look for <strong>Application ID</strong> and save this somewhere as your\\napplication id. We need this in a later step.\\nApplication ID looks something like this; 'ed978ce1-4d9c-4cd0-9374-4888e0fcab36'.</p>\\n</li>\\n<li>\\n<p>On the <strong>Settings</strong> blade, click on <strong>Keys</strong>.</p>\\n</li>\\n<li>\\n<p>Add a descriptive key description in the <em>Description</em> field. For example\\n'<strong>DscConfigurationExampleAppPassword</strong>'.</p>\\n</li>\\n<li>\\n<p>Choose when the key password will expire, in the <em>Expires</em> field. For example\\n'<strong>In 1 year</strong>'.</p>\\n</li>\\n<li>\\n<p>Click <strong>Save</strong>, and please, keep the blade open until you completed the following\\nsteps.</p>\\n</li>\\n<li>\\n<p>From the value field, copy the password key to a secure location, for example\\na password manager. We need this in a later step.\\nThe password will look something like this 'B5zwEx6B+fj92mEk5LC7IPa4P+d28NY7QuqhLP1Dehs='.</p>\\n<blockquote>\\n<p><strong>Note:</strong> When leaving this blade you will not be able to see the key password\\nagain. If you do then you need to create a new key password and optionally\\ndelete the old one.</p>\\n</blockquote>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>Copy the <strong>Tenant ID</strong> and save this somewhere. We need this in a later step.</p>\\n<ol>\\n<li>Go back to <strong>Azure Active Directory</strong>.</li>\\n<li>Click on <strong>Properties</strong>.</li>\\n<li>Look for the field <em>Directory ID</em>, this value is the same as your\\n<strong>Tenant ID</strong>. Copy the <strong>Directory ID</strong> and save this somewhere as your\\ntenant id.\\nTenant ID looks something like this; '84a06b73-5842-4d03-8123-ee27708b7f36'.</li>\\n</ol>\\n</li>\\n<li>\\n<p>Copy the <strong>Subscription ID</strong> and save this somewhere. We need this in a later\\nstep.</p>\\n<ol>\\n<li>\\n<p>Go to <strong>Subscriptions</strong> (same place as Azure Active Directory)</p>\\n<blockquote>\\n<p><strong>Note:</strong> If you don't see subscriptions in the list, then you need to\\nclick on <strong>More services</strong> and search for <strong>Subscriptions</strong>.</p>\\n</blockquote>\\n</li>\\n<li>\\n<p>Look for the field <strong>Subscription ID</strong> column. Copy and save this somewhere\\nas your subscription id.\\nSubscription ID looks something like this; '4de0edba-1816-4f9b-880f-db90ee863d11'.</p>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>Set the required permission for the Azure Active Directory Application on the\\nsubscription.</p>\\n<ol>\\n<li>While still in the subscriptions list, please click on the subscription with\\nthe same id as you copied above.</li>\\n<li>Click on <strong>Access control (IAM)</strong>.</li>\\n<li>Click <strong>Add</strong>.</li>\\n<li>In the field <em>Role</em> select <strong>Contributor</strong>.</li>\\n<li>In the field Select (the search box), write the name of the Azure Active\\nDirectory Application, for example '<strong>DscConfigurationExampleAppId</strong>'.</li>\\n<li>When the name of the Azure Active Directory Application returns in search\\nresult, click on the name to move it to selected members.</li>\\n<li>Click <strong>Save</strong>.</li>\\n</ol>\\n</li>\\n</ol>\\n<h4>Prepare Azure using PowerShell</h4>\\n<p>For this we are going to use the script that <a href=\\"https://github.com/PlagueHO\\">@PlagueHO</a>\\ncreated <a href=\\"https://github.com/PowerShell/DscConfigurations/issues/5#issue-234996357\\">here</a>\\nwith some minor modifications.\\nWe will use the modified script <a href=\\"https://gist.github.com/johlju/301490cc813e4b490a3cecc1f010d921\\">here</a>.</p>\\n<p>The script will login to Azure and create a new Azure Active Directory application\\naccount and give the application account Contributor permission on the subscription.</p>\\n<ol>\\n<li>\\n<p>Copy the script to a script file named 'New-AzureServicePrincipal.ps1'.</p>\\n<p>{% gist 301490cc813e4b490a3cecc1f010d921 %}</p>\\n</li>\\n<li>\\n<p>Start a PowerShell session and change the directory to the location where you\\nsave the script file 'New-AzureServicePrincipal.ps1'.</p>\\n</li>\\n<li>\\n<p>If you already know your subscription id, skip to the next step.</p>\\n<ol>\\n<li>\\n<p>Run the following in the PowerShell session</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">Login-AzureRmAccount\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">Get-AzureRmSubscription</span>\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Look for the <em>Id</em> property, this is the <strong>Subscription ID</strong>.\\nCopy the <strong>Subscription ID</strong> and save this somewhere.\\nSubscription ID looks something like this; '4de0edba-1816-4f9b-880f-db90ee863d11'.</p>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>Run the following in the PowerShell session.</p>\\n<ul>\\n<li>\\n<p>Change variable <code>$azureActiveDirectoryApplicationName</code> to something descriptive.</p>\\n<blockquote>\\n<p><strong>Note:</strong> The application name is only for your records, it will only show\\nas the account having permission on the subscription.</p>\\n</blockquote>\\n</li>\\n<li>\\n<p>Change variable <code>$azureSubscriptionId</code> to the subscription id copied in the\\nprevious step.</p>\\n</li>\\n<li>\\n<p>Change variable <code>$azureDomain</code> to your domain name (this is optional).</p>\\n<blockquote>\\n<p><strong>Note:</strong> Domain is used to build the URL for the parameters home page and\\nidentifiers URI but is is not of interest since it will not be used.</p>\\n</blockquote>\\n</li>\\n<li>\\n<p>When the script is run, you will be asked for a password. This is the\\npassword key that will will need later to login using the application account.\\nSave the password key to a secure location, for example a password manager.</p>\\n</li>\\n</ul>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$azureActiveDirectoryApplicationName</span> = <span class=\\"token string\\">'DscConfigurationExampleAppId'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$azureSubscriptionId</span> = <span class=\\"token string\\">'4de0edba-1816-4f9b-880f-db90ee863d11'</span>\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$azureDomain</span> = <span class=\\"token string\\">'dummy'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$getCredentialParameters</span> = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">   Message = <span class=\\"token string\\">'Azure Active Directory Application password'</span>\\n</span><span class=\\"code-line\\">   UserName = <span class=\\"token variable\\">$azureActiveDirectoryApplicationName</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$applicationCredential</span> = <span class=\\"token function\\">Get-Credential</span> @getCredentialParameters\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token variable\\">$newAzureServicePrincipalParameters</span> = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">  Name = <span class=\\"token variable\\">$azureActiveDirectoryApplicationName</span>\\n</span><span class=\\"code-line\\">  SubscriptionId = <span class=\\"token variable\\">$azureSubscriptionId</span>\\n</span><span class=\\"code-line\\">  ADDomain = <span class=\\"token variable\\">$azureDomain</span>\\n</span><span class=\\"code-line\\">  ApplicationPassword = <span class=\\"token variable\\">$applicationCredential</span><span class=\\"token punctuation\\">.</span>Password\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">.</span>\\\\<span class=\\"token function\\">New-AzureServicePrincipal</span><span class=\\"token punctuation\\">.</span>ps1 @newAzureServicePrincipalParameters\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>When <code>New-AzureServicePrincipal</code> successfully finishes it returns a hash table\\nwith values that we will need later. Please save these for later use.\\nThe result will look something like this.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"plaintext\\"><div class=\\"code-language-label\\">PLAINTEXT</div><pre class=\\"language-plaintext\\" data-processed data-language=\\"plaintext\\"><code class=\\"language-plaintext code-highlight\\"><span class=\\"code-line\\">Name                           Value\\n</span><span class=\\"code-line\\">----                           -----\\n</span><span class=\\"code-line\\">SubscriptionID                 4de0edba-1816-4f9b-880f-db90ee863d11\\n</span><span class=\\"code-line\\">ApplicationID                  ed978ce1-4d9c-4cd0-9374-4888e0fcab36\\n</span><span class=\\"code-line\\">TenantID                       84a06b73-5842-4d03-8123-ee27708b7f36\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h3>Configure AppVeyor for running tests</h3>\\n<p>If you not already have and account on <a href=\\"https://www.appveyor.com/\\">AppVeyor</a> then\\nplease register for a free account.</p>\\n<h4>Add repository as a AppVeyor project</h4>\\n<ol>\\n<li>Login in to <a href=\\"https://ci.appveyor.com\\">AppVeyor</a></li>\\n<li>Once in AppVeyor, add the project.\\n<ol>\\n<li>Go to the <a href=\\"https://ci.appveyor.com/projects\\">Project tab</a>.</li>\\n<li>Click <strong>New Project</strong>.</li>\\n<li>Choose GitHub</li>\\n<li>Hover over 'DscConfigurationExample' and click on Add.</li>\\n</ol>\\n</li>\\n</ol>\\n<h4>Move encrypted environment variables to</h4>\\n<p>If we look in the repository that we created above, the file appveyor.yml has\\nall the id's and password in that file. Even if they are stored encrypted, that\\nis not best security wise. Instead we need to remove the secure variables from the\\nappveyor.yml file and add them to your AppVeyor account.</p>\\n<blockquote>\\n<p><strong>Note:</strong> If you want to keep the ID's and password encrypted in the appveyor.yml\\nfile, then you should encrypt the strings using <a href=\\"https://ci.appveyor.com/tools/encrypt\\">Encrypt configuration data</a>.\\nIf you choose to keep the values in appveyor.yml, then you can skip this step.</p>\\n</blockquote>\\n<ol>\\n<li>\\n<p>Go back to your project in Visual Studio Code (or whatever editor you are using).</p>\\n</li>\\n<li>\\n<p>Remove the following block from the appveyor.yml.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yml\\"><div class=\\"code-language-label\\">YML</div><pre class=\\"language-yml\\" data-processed data-language=\\"yml\\"><code class=\\"language-yml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token key atrule\\">ApplicationID</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">secure</span><span class=\\"token punctuation\\">:</span> mHB9K9ItLkpdxUR7WgBnuBiBOl3qgJT1yizvFZDOgkRxvTV5KoZJ8QuAp+F+EbV0\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">SubscriptionID</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">secure</span><span class=\\"token punctuation\\">:</span> fhB5mHXLFRRc1/iwqCA9ibCqwg7qKqkayknhebLsM+FdlrmL80HCRm1vJYafomei\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">TenantID</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">secure</span><span class=\\"token punctuation\\">:</span> J/my7xsOE9jewR0DDhD+EU5jeo5Bp83/nmIK8a8QI0QLoZXStCOtk1vUjVsKylW2\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">ApplicationPassword</span><span class=\\"token punctuation\\">:</span>\\n</span><span class=\\"code-line\\">  <span class=\\"token key atrule\\">secure</span><span class=\\"token punctuation\\">:</span> zV3r4bwG65rWRfF1L23RYLj7GXVxsMdZtasCsX0+pYA=\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Add the environment variables to the AppVeyor project settings.</p>\\n<ol>\\n<li>\\n<p>If you just did the previous section, then you should have the correct page\\nalready up and can skip this step.</p>\\n<ol>\\n<li>Go to the <a href=\\"https://ci.appveyor.com/projects\\">Project tab</a>.</li>\\n<li>Click on the project name 'DscConfigurationExample'</li>\\n</ol>\\n</li>\\n<li>\\n<p>Click on Settings.</p>\\n</li>\\n<li>\\n<p>Click on Environment.</p>\\n</li>\\n<li>\\n<p>Add environment variable 'TenantID'.</p>\\n<ol>\\n<li>\\n<p>Under <strong>Environment variables</strong>, click <strong>Add variable</strong>.</p>\\n</li>\\n<li>\\n<p>In the <em>Name</em> field, type <strong>TenantId</strong>.</p>\\n</li>\\n<li>\\n<p>In the <em>Value</em> field, type the value for tenant id that you save in the\\nprevious step.</p>\\n</li>\\n<li>\\n<p>Hover over the <em>Value</em> field and then click on the lock icon next to it\\nto make it a encrypted value.</p>\\n<blockquote>\\n<p><strong>Note:</strong> If the value is not secure (encrypted), then anyone sending\\nin a pull request (PR) could compromise your variables.\\nEnvironment variables that are encrypted will not be available for\\na pull request (PR).</p>\\n</blockquote>\\n</li>\\n</ol>\\n</li>\\n<li>\\n<p>Repeat the previous step for the following environment variables, and make\\nsure to secure each value. Use the values you saved in the previous steps.</p>\\n<ul>\\n<li>SubscriptionID</li>\\n<li>ApplicationID</li>\\n<li>ApplicationPassword</li>\\n</ul>\\n</li>\\n<li>\\n<p>Click <strong>Save</strong>.</p>\\n</li>\\n</ol>\\n</li>\\n</ol>\\n<h3>Modify repository files</h3>\\n<h3>Modify module manifest</h3>\\n<h4>Rename the module folder and the module manifest file</h4>\\n<ol>\\n<li>Go back to your project in Visual Studio Code (or whatever editor you are using).</li>\\n<li>Rename the folder 'TemplateConfigModule' to 'DscConfigurationExampleModule'.</li>\\n<li>Rename the module manifest 'TemplateConfigModule.psd1' to 'DscConfigurationExampleModule.psd1'</li>\\n</ol>\\n<blockquote>\\n<p><strong>Note:</strong> The folder name and module manifest file name must have the same name\\nas the repository name, and the folder name must end with 'Module'.</p>\\n</blockquote>\\n<h4>Modify the content of the module manifest</h4>\\n<p>For more information regarding how to write a module manifest, please see the\\narticle <a href=\\"https://msdn.microsoft.com/en-us/library/dd878337(v=vs.85).aspx\\">How to Write a PowerShell Module Manifest</a>\\nand you can also use the cmdlet <a href=\\"https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/New-ModuleManifest?view=powershell-5.0\\">New-ModuleManifest</a>\\nto create a module manifest.</p>\\n<p>For this exercise we just change the values in the existing module manifest we\\njust renamed.</p>\\n<ol>\\n<li>\\n<p>Open the module manifest file 'DscConfigurationExampleModule.psd1'.</p>\\n</li>\\n<li>\\n<p>Change the value for property <strong>ModuleVersion</strong> to '1.0.0.0'.</p>\\n</li>\\n<li>\\n<p>Run the cmdlet <code>New-Guid</code> and change property <strong>GUID</strong> to the GUID that you\\ngot from the cmdlet.</p>\\n</li>\\n<li>\\n<p>The property <strong>RequiredModules</strong> must be changed to the value below</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">RequiredModules = @<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'PSDscResources'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'xComputerManagement'</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n<blockquote>\\n<p><strong>Note:</strong> The property RequiredModules is mandatory, because it is used to\\nmake sure the user has the correct module loaded, but more important for\\nus it is used during testing to load the correct modules into the test\\nenvironment.</p>\\n</blockquote>\\n</li>\\n<li>\\n<p>The property <strong>WindowsOSVersion</strong> is not a property that is part of the\\nnormal module manifest elements. This property has been added to the <strong>PrivateData</strong>\\nhash table for the purpose of determine which operating systems the tests\\nshould run on. Let's change this to property to limit testing on\\nWindows Server 2012 R2 and Windows Server 2016.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">WindowsOSVersion = <span class=\\"token string\\">'2012-R2-Datacenter'</span><span class=\\"token punctuation\\">,</span><span class=\\"token string\\">'2016-Datacenter'</span>\\n</span></code></pre></div>\\n<blockquote>\\n<p><strong>Note:</strong> Please set this to the <strong>Sku</strong> for all operating systems your\\nconfiguration supports.\\nIf you want to find out which Sku are available then read\\n<a href=\\"https://docs.microsoft.com/en-us/azure/virtual-machines/windows/cli-ps-findimage\\">How to find Windows VM images in the Azure Marketplace with Azure PowerShell</a>.</p>\\n</blockquote>\\n</li>\\n<li>\\n<p>Change the values in the rest of the properties to something appropriate.\\nProperties that are commented are optional. They can be removed if not used.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">Author = <span class=\\"token string\\">'My Name'</span>\\n</span><span class=\\"code-line\\">CompanyName = <span class=\\"token string\\">'My Company/My Name'</span>\\n</span><span class=\\"code-line\\">Copyright = <span class=\\"token string\\">'(c) 2017 My Company/My Name. All rights reserved.'</span>\\n</span><span class=\\"code-line\\">Description = <span class=\\"token string\\">'This module contains my PowerShell DSC solution'</span>\\n</span><span class=\\"code-line\\">LicenseUri = <span class=\\"token string\\">'https://github.com/USERNAME/DscConfigurationExample/blob/master/LICENSE'</span>\\n</span><span class=\\"code-line\\">ProjectUri = <span class=\\"token string\\">'https://github.com/USERNAME/DscConfigurationExample'</span>\\n</span></code></pre></div>\\n<blockquote>\\n<p><strong>Note:</strong> Some of the properties are required to publish a module\\nto PowerShell Gallery. Read more in the section\\n<a href=\\"https://github.com/PowerShell/DscConfigurations#sharing-relies-on-completing-important-metadata\\">Sharing relies on completing important metadata</a>\\nin the <a href=\\"https://github.com/PowerShell/DscConfigurations\\">DscConfiguration</a>\\nrepository.</p>\\n</blockquote>\\n</li>\\n</ol>\\n<h3>Add a README to the module</h3>\\n<p>The tests require that a README.md exist in the module folder.</p>\\n<ol>\\n<li>\\n<p>Create a new file named 'README.md' under the folder DscConfigurationExampleModule.</p>\\n</li>\\n<li>\\n<p>In the new markdown file add the below markdown text.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"markdown\\"><div class=\\"code-language-label\\">MARKDOWN</div><pre class=\\"language-markdown\\" data-processed data-language=\\"markdown\\"><code class=\\"language-markdown code-highlight\\"><span class=\\"code-line\\"><span class=\\"token title important\\"><span class=\\"token punctuation\\">#</span> DSC Configuration Example</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">This module contains an example for a DSC Configuration\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h3>Modify Configuration Data</h3>\\n<p>The configuration data files contains the properties used by each of the\\nconfigurations.</p>\\n<h4>First target node configuration file</h4>\\n<ol>\\n<li>\\n<p>Rename configuration data file 'TemplateConfig.ConfigData.psd1' to\\n'FirstTargetNode.ConfigData.psd1'.</p>\\n</li>\\n<li>\\n<p>Open the newly rename file and change the code to this.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">@<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    AllNodes = @<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">        @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            NodeName  = <span class=\\"token string\\">'localhost'</span>\\n</span><span class=\\"code-line\\">            GroupName = <span class=\\"token string\\">'Group1'</span>\\n</span><span class=\\"code-line\\">         <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h4>Second target node configuration file</h4>\\n<ol>\\n<li>\\n<p>Create a new file named 'SecondTargetNode.ConfigData.psd1'.</p>\\n</li>\\n<li>\\n<p>Open the new file and add this code to it.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">@<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    AllNodes = @<span class=\\"token punctuation\\">(</span>\\n</span><span class=\\"code-line\\">        @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            NodeName  = <span class=\\"token string\\">'localhost'</span>\\n</span><span class=\\"code-line\\">            PowerPlanName = <span class=\\"token string\\">'High performance'</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h3>Modify Configuration</h3>\\n<p>The configuration files is compiled and ran on the target nodes. They hold\\nthe actual configuration that should be applied to the target nodes.</p>\\n<h4>Prepare the configuration file</h4>\\n<p>We remove the configuration file that came with the template, and then we create\\na new file which holds our configuration for both target nodes.</p>\\n<ol>\\n<li>\\n<p>Remove the file named 'TemplateConfig.ps1'.</p>\\n</li>\\n<li>\\n<p>Run the following in a PowerShell session to create a new file with the correct\\nname. Replace these values to the correct values (you could also edit them later\\nin the resulting file).</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token variable\\">$newScriptFileInfoParameters</span> = @<span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    Path = <span class=\\"token string\\">'C:\\\\source\\\\DscConfigurationExample\\\\DscConfigurationExample.ps1'</span>\\n</span><span class=\\"code-line\\">    Version = <span class=\\"token string\\">'1.0.0.0'</span>\\n</span><span class=\\"code-line\\">    Author = <span class=\\"token string\\">'My Name'</span>\\n</span><span class=\\"code-line\\">    Description = <span class=\\"token string\\">'Configurations to configure to target nodes'</span>\\n</span><span class=\\"code-line\\">    CompanyName = <span class=\\"token string\\">'My Company/My Name'</span>\\n</span><span class=\\"code-line\\">    Copyright = <span class=\\"token string\\">'(c) 2017 My Company/My Name. All rights reserved.'</span>\\n</span><span class=\\"code-line\\">    Tags = @<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'DSC'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'Config'</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\">    ProjectUri = <span class=\\"token string\\">'https://github.com/USERNAME/DscConfigurationExample'</span>\\n</span><span class=\\"code-line\\">    LicenseUri = <span class=\\"token string\\">'https://github.com/USERNAME/DscConfigurationExample/blob/master/LICENSE'</span>\\n</span><span class=\\"code-line\\">    RequiredModules = @<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'PSDscResources'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">'xComputerManagement'</span><span class=\\"token punctuation\\">)</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\"><span class=\\"token function\\">New-ScriptFileInfo</span> @newScriptFileInfoParameters\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h4>First node configuration</h4>\\n<ol>\\n<li>\\n<p>Open the file 'DscConfigurationExample.ps1' that was created above.</p>\\n</li>\\n<li>\\n<p>At the end of the file you will find the following code.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">&lt;#\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">.DESCRIPTION\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">Configurations to configure to target nodes\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">#&gt;</span>\\n</span><span class=\\"code-line\\"><span class=\\"token keyword\\">Param</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Replace the above block with this code</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">&lt;#\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">    .DESCRIPTION\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">        Configuration to configure the first target node\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">#&gt;</span>\\n</span><span class=\\"code-line\\">Configuration FirstTargetNode\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">Import-DscResource</span> <span class=\\"token operator\\">-</span>ModuleName <span class=\\"token string\\">'PSDscResources'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Node <span class=\\"token variable\\">$AllNodes</span><span class=\\"token punctuation\\">.</span>NodeName\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        <span class=\\"token function\\">Group</span> TestGroup\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure    = <span class=\\"token string\\">'Present'</span>\\n</span><span class=\\"code-line\\">            GroupName = <span class=\\"token variable\\">$Node</span><span class=\\"token punctuation\\">.</span>GroupName\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<blockquote>\\n<p><strong>Note:</strong> The named used for the configuration must be equal to what was used\\nfor the configuration data file for the first target node.</p>\\n</blockquote>\\n</li>\\n</ol>\\n<h4>Second node configuration</h4>\\n<ol>\\n<li>\\n<p>Open the same file 'DscConfigurationExample.ps1' that was changed above.</p>\\n</li>\\n<li>\\n<p>At the end of the file add the following code.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\"><span class=\\"token comment\\">&lt;#\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">    .DESCRIPTION\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">        Configuration to configure the second target node\\n</span></span><span class=\\"code-line\\"><span class=\\"token comment\\">#&gt;</span>\\n</span><span class=\\"code-line\\">Configuration SecondTargetNode\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token function\\">Import-DscResource</span> <span class=\\"token operator\\">-</span>ModuleName <span class=\\"token string\\">'xComputerManagement'</span>\\n</span><span class=\\"code-line\\">\\n</span><span class=\\"code-line\\">    Node <span class=\\"token variable\\">$AllNodes</span><span class=\\"token punctuation\\">.</span>NodeName\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">        xPowerPlan ChangePowerPlanToHigh\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">{</span>\\n</span><span class=\\"code-line\\">            Ensure    = <span class=\\"token string\\">'Present'</span>\\n</span><span class=\\"code-line\\">            GroupName = <span class=\\"token variable\\">$Node</span><span class=\\"token punctuation\\">.</span>GroupName\\n</span><span class=\\"code-line\\">        <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\">    <span class=\\"token punctuation\\">}</span>\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">}</span>\\n</span></code></pre></div>\\n<blockquote>\\n<p><strong>Note:</strong> The named used for the configuration must be equal to what was used\\nfor the configuration data file for the second target node.</p>\\n</blockquote>\\n</li>\\n</ol>\\n<h3>AppVeyor Testing</h3>\\n<h4>AppVeyor build worker</h4>\\n<p>We would like to use the latest build worker for our testing. So let's update\\nappveyor.yml to use the latest build worker.</p>\\n<blockquote>\\n<p><strong>Note:</strong> You can find out which build worker exist in the AppVeyor documentation\\n<a href=\\"https://www.appveyor.com/docs/build-environment/#build-worker-images\\">Build worker images</a>.</p>\\n</blockquote>\\n<ol>\\n<li>\\n<p>Open the file appveyor.yml and add the below line directly after the <em>Version</em>\\ndictionary.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yml\\"><div class=\\"code-language-label\\">YML</div><pre class=\\"language-yml\\" data-processed data-language=\\"yml\\"><code class=\\"language-yml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token key atrule\\">image</span><span class=\\"token punctuation\\">:</span> Visual Studio 2017\\n</span></code></pre></div>\\n<p>the result of the first three lines should look like this</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yml\\"><div class=\\"code-language-label\\">YML</div><pre class=\\"language-yml\\" data-processed data-language=\\"yml\\"><code class=\\"language-yml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token key atrule\\">version</span><span class=\\"token punctuation\\">:</span> 1.0.<span class=\\"token punctuation\\">{</span>build<span class=\\"token punctuation\\">}</span>.0\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">image</span><span class=\\"token punctuation\\">:</span> Visual Studio 2017\\n</span><span class=\\"code-line\\"><span class=\\"token key atrule\\">clone_folder</span><span class=\\"token punctuation\\">:</span> c<span class=\\"token punctuation\\">:</span>\\\\projects\\\\$(APPVEYOR_PROJECT_NAME)\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h4>Azure location for resource provisioning</h4>\\n<p>We need to tell in what location we want to provision resources in Azure.</p>\\n<ol>\\n<li>\\n<p>Open the file appveyor.yml and add the below line directly after the <em>BuildID</em>\\ndictionary. Change the location name to something that fits your needs.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yml\\"><div class=\\"code-language-label\\">YML</div><pre class=\\"language-yml\\" data-processed data-language=\\"yml\\"><code class=\\"language-yml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token key atrule\\">Location</span><span class=\\"token punctuation\\">:</span> westeurope\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h4>Workaround for AppVeyor testing</h4>\\n<blockquote>\\n<p><strong>Note:</strong> This will be updated as soon as we get this fixes merged!</p>\\n</blockquote>\\n<p>There are bugs in the current version of the test framework (<a href=\\"https://github.com/PowerShell/DscConfiguration.Tests\\">DscConfiguration.Tests</a>).\\nThe fixes for these bugs has not yet been reviewed and merged, so for that reason\\nwe need to use a branch in my fork that includes these bug fixes.\\nMy working branch is based on @PlagueHO's branch, which is <a href=\\"https://github.com/PowerShell/DscConfiguration.Tests/pull/21\\">awaiting review</a>\\nand I'm waiting for that pull request (PR) to merge before being able to send in\\na pull request (PR) based on my working branch.</p>\\n<p>So the working branch we need to use is <a href=\\"https://github.com/johlju/DscConfiguration.Tests/tree/fixes-issues\\">fixes-issues</a>\\nin my fork.</p>\\n<ol>\\n<li>\\n<p>Open the file appveyor.yml and find the following line.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yml\\"><div class=\\"code-language-label\\">YML</div><pre class=\\"language-yml\\" data-processed data-language=\\"yml\\"><code class=\\"language-yml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">-</span> git clone https<span class=\\"token punctuation\\">:</span>//github.com/powershell/dscconfiguration.tests\\n</span></code></pre></div>\\n</li>\\n<li>\\n<p>Replace that line with the below code. When the tests are run this will clone\\nmy fork, and then checkout the correct working branch.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"yml\\"><div class=\\"code-language-label\\">YML</div><pre class=\\"language-yml\\" data-processed data-language=\\"yml\\"><code class=\\"language-yml code-highlight\\"><span class=\\"code-line\\"><span class=\\"token punctuation\\">-</span> git clone https<span class=\\"token punctuation\\">:</span>//github.com/johlju/DscConfiguration.Tests\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">ps</span><span class=\\"token punctuation\\">:</span> Push<span class=\\"token punctuation\\">-</span>Location\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">ps</span><span class=\\"token punctuation\\">:</span> cd \\"$env<span class=\\"token punctuation\\">:</span>APPVEYOR_BUILD_FOLDER\\\\DscConfiguration.Tests\\"\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">-</span> git checkout fixes<span class=\\"token punctuation\\">-</span>issues\\n</span><span class=\\"code-line\\"><span class=\\"token punctuation\\">-</span> <span class=\\"token key atrule\\">ps</span><span class=\\"token punctuation\\">:</span> Pop<span class=\\"token punctuation\\">-</span>Location\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h3>Run the tests</h3>\\n<h4>Run the tests in AppVeyor</h4>\\n<h5>Push changes to repository</h5>\\n<p>Since we connected AppVeyor to our repository, the only thing we need to do is\\nto commit all changes and push to the repository.</p>\\n<blockquote>\\n<p><em>Note:</em> You can also commit and push directly from Visual Studio Code if you\\nare using that.</p>\\n</blockquote>\\n<ol>\\n<li>\\n<p>Open a PowerShell session and run the following. This will stage all new and\\nchanged files, and commit them with the commit message. And after that we push\\nthe commit to the branch master in the repository DscConfigurationExample.</p>\\n<div class=\\"code-block-wrapper\\" data-language=\\"powershell\\"><div class=\\"code-language-label\\">POWERSHELL</div><pre class=\\"language-powershell\\" data-processed data-language=\\"powershell\\"><code class=\\"language-powershell code-highlight\\"><span class=\\"code-line\\">cd c:\\\\source\\\\DscConfigurationExample\\n</span><span class=\\"code-line\\">git add <span class=\\"token punctuation\\">.</span>\\n</span><span class=\\"code-line\\">git commit <span class=\\"token operator\\">-</span>m <span class=\\"token string\\">\\"First version of DscConfigurationExample\\"</span>\\n</span><span class=\\"code-line\\">git push origin master\\n</span></code></pre></div>\\n</li>\\n</ol>\\n<h5>View test run in AppVeyor</h5>\\n<ol>\\n<li>Browse to the <a href=\\"https://ci.appveyor.com/projects\\">projects in AppVeyor</a>.</li>\\n<li>Click on the project DscConfigurationExample.</li>\\n</ol>\\n<p>You should now see the test being run in the Console as soon as it starts.</p>\\n<h2>Complete example</h2>\\n<p>You can find the complete working example here in the repository <a href=\\"https://github.com/johlju/DscConfigurationExample\\">DscConfigurationExample</a>.\\nAnd in <a href=\\"https://ci.appveyor.com/project/johlju/dscconfigurationexample/build/1.0.8.0\\">this build</a>\\nin AppVeyor you can se how it should look like when tests are run.</p>\\n<h2>Issues with this blog post</h2>\\n<p>If you find any issues with this blog article please comment, or\\n<a href=\\"https://github.com/johlju/johlju.github.io/issues/new?title=Article:%20%7B%7Bpage.title%7D%7D\\">submit an issue</a>\\nat the blog repository.</p>\\n<h2>Related links</h2>\\n<ul>\\n<li>You can read more about Desired State Configuration (DSC) in the article\\n<a href=\\"https://docs.microsoft.com/en-us/powershell/dsc/overview\\">Windows PowerShell Desired State Configuration Overview</a>.</li>\\n</ul>"}],"slugs":["automating-power-bi-rs-with-dsc-v3","blockquotes-examples","configure-nat-azure-vm-hyperv-host","demodscclass-your-first-class-based-dsc-v3-resource","dsc-configuration-repository","infrastructure-as-code-best-practices","install-ipfire-on-a-hypervm-guest","mermaid-diagrams-comprehensive-guide","powershell-dsc-introduction","syntax-highlighting-test","template","what-is-dscv3"],"lastBuilt":"2025-07-25T15:00:52.704Z"}`);function r(n){if(typeof n=="string"){let s=new Date(n);return!(!(s instanceof Date)||isNaN(s.getTime()))&&(!/^\d{4}-\d{2}-\d{2}$/.test(n)||c(s)===n)}return n instanceof Date&&!isNaN(n.getTime())}function c(n){return n.toISOString().split("T")[0]}function u(){if(!p||typeof p!="object")throw Error("Blog data is not an object");if(!Array.isArray(p.posts))throw Error("Blog data posts is not an array");if(!Array.isArray(p.slugs))throw Error("Blog data slugs is not an array");return{posts:p.posts.map(n=>({slug:n.slug,title:n.title,date:typeof n.date=="string"&&r(n.date)?function(s,o){let a=s?new Date(s):void 0;return a&&r(a)?c(a):c(new Date(0))}(n.date):void 0,author:n.author,excerpt:n.excerpt,image:n.image,tags:Array.isArray(n.tags)?Array.from(new Set(n.tags.filter(s=>typeof s=="string").map(s=>s.toLowerCase()))):[],readTime:n.readTime,category:typeof n.category=="string"?n.category:void 0,content:n.content})),slugs:p.slugs}}function h(n){return u().posts.find(s=>s.slug===n)||null}function l(){let n=u().posts.map(s=>{let{content:o,...a}=s;return a});return n.length>1?n.filter(s=>s.slug!=="template"):n}function m(){let n=l();return n.length>0?n[0]:null}function y(n,s,o=3){let a=l(),e=a.filter(t=>t.slug!==n);if(s&&(e=e.filter(t=>t.category===s||t.tags.includes(s))),(e=e.slice(0,o)).length<o){let t=a.filter(i=>i.slug!==n).filter(i=>!e.some(w=>w.slug===i.slug)).slice(0,o-e.length);e.push(...t)}return e}},d);export{D as __getNamedExports};
