{
  "name": "Viscalyx.se Development",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",
  // Cross-platform volume mounts
  "mounts": [
    // SSH agent forwarding - conditional for Unix-like systems
    {
      "source": "${localEnv:SSH_AUTH_SOCK}",
      "target": "/ssh-agent.sock",
      "type": "bind"
    }
  ],
  "containerEnv": {
    // SSH agent - will be empty on Windows, which is fine
    "SSH_AUTH_SOCK": "/ssh-agent.sock",
    "NODE_ENV": "development",
    "NEXT_TELEMETRY_DISABLED": "1",
    // Add Docker platform support
    "DOCKER_DEFAULT_PLATFORM": "${localEnv:DOCKER_DEFAULT_PLATFORM:linux/amd64}"
  },

  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "nodeGitTagPrefix": "v",
      "version": "24",
      "nvmVersion": "latest"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "installDirectlyFromGitHubRelease": false,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": false,
      "installOhMyZsh": true,
      "installOhMyZshConfig": true,
      "upgradePackages": true,
      "username": "vscode",
      "userUid": "automatic",
      "userGid": "automatic"
    }
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        // Essential for devcontainer functionality
        "ms-vscode-remote.remote-containers",
        "ms-azuretools.vscode-docker",

        // Extensions from .vscode/extensions.json
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        "streetsidesoftware.code-spell-checker",
        "streetsidesoftware.code-spell-checker-swedish",
        "bradlc.vscode-tailwindcss",
        "christian-kohler.path-intellisense",
        "christian-kohler.npm-intellisense",
        "gruntfuggly.todo-tree",
        "usernamehw.errorlens",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "vitest.explorer",
        "bierner.markdown-mermaid",
        "bpruitt-goddard.mermaid-markdown-syntax-highlighting"
      ],
      "settings": {
        // Editor settings
        "editor.formatOnSave": true,
        "editor.formatOnPaste": true,
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit",
          "source.organizeImports": "explicit"
        },
        "editor.defaultFormatter": null, // Will be set to Prettier once extension is loaded
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        "editor.detectIndentation": false,
        "editor.rulers": [80, 120],
        "editor.wordWrap": "on",
        "editor.minimap.enabled": true,
        "editor.bracketPairColorization.enabled": true,
        "editor.guides.bracketPairs": true,

        // File settings
        "files.autoSave": "afterDelay",
        "files.autoSaveDelay": 1000,
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "files.trimFinalNewlines": true,
        "files.exclude": {
          "**/node_modules": true,
          "**/.next": true,
          "**/out": true,
          "**/.git": true,
          "**/.DS_Store": true,
          "**/tsconfig.tsbuildinfo": true
        },

        // TypeScript settings
        "typescript.preferences.quoteStyle": "single",
        "typescript.preferences.importModuleSpecifier": "relative",
        "typescript.updateImportsOnFileMove.enabled": "always",
        "typescript.suggest.autoImports": true,
        "typescript.preferences.includePackageJsonAutoImports": "auto",

        // ESLint settings
        "eslint.validate": [
          "javascript",
          "javascriptreact",
          "typescript",
          "typescriptreact"
        ],
        "eslint.format.enable": true,

        // Prettier settings
        "prettier.singleQuote": true,
        "prettier.semi": false,
        "prettier.trailingComma": "es5",
        "prettier.tabWidth": 2,
        "prettier.useTabs": false,

        // Tailwind CSS settings
        "tailwindCSS.includeLanguages": {
          "typescript": "javascript",
          "typescriptreact": "javascript"
        },
        "tailwindCSS.experimental.classRegex": [
          "tw`([^`]*)",
          ["clsx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
          ["classNames\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
          ["cn\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
        ],

        // Spell checker settings
        "cSpell.enabled": true,
        "cSpell.language": "en,sv",
        "cSpell.enabledFileTypes": {
          "typescript": true,
          "typescriptreact": true,
          "javascript": true,
          "javascriptreact": true,
          "markdown": true,
          "json": true,
          "jsonc": true,
          "yaml": true,
          "yml": true
        },
        "cSpell.diagnosticLevel": "Warning",
        "cSpell.checkLimit": 500,
        "cSpell.words": [
          "viscalyx",
          "johlju",
          "nextjs",
          "tailwindcss",
          "framer",
          "lucide"
        ],

        // Git settings
        "git.autofetch": true,
        "git.enableSmartCommit": true,
        "git.confirmSync": false,

        // Terminal settings - cross-platform compatible
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash"
          },
          "zsh": {
            "path": "/bin/zsh"
          }
        },

        // Emmet settings
        "emmet.includeLanguages": {
          "typescript": "html",
          "typescriptreact": "html"
        },

        // Explorer settings
        "explorer.compactFolders": false,
        "explorer.confirmDelete": false,
        "explorer.confirmDragAndDrop": false
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [3000, 3001, 8787, 51204],
  "portsAttributes": {
    "3000": {
      "label": "Next.js Dev Server 1",
      "onAutoForward": "notify"
    },
    "3001": {
      "label": "Next.js Dev Server 2",
      "onAutoForward": "notify"
    },
    "8787": {
      "label": "Cloudflare Workers Preview",
      "onAutoForward": "notify"
    },
    "51204": {
      "label": "Vitest UI",
      "onAutoForward": "notify"
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created
  // Ensure node_modules volume is owned by vscode to avoid permission issues
  "postCreateCommand": "bash -l -c 'sudo chown -R vscode:vscode /workspace && mkdir -p /workspace/node_modules && sudo chown -R vscode:vscode /workspace/node_modules && sudo mkdir -p /home/vscode/.npm && sudo chown -R vscode:vscode /home/vscode/.npm && npm install && npm run check'",

  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "bash -l -c 'git config --global --unset gpg.ssh.program 2>/dev/null || true; git config --global init.defaultBranch main'",

  // Configure remote user
  "remoteUser": "vscode"
}
